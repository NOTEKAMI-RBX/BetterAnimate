<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX2694A37EC5F4428AA1FDF1A3FFAD12B5">
		<Properties>
			<float name="AirDensity">0.00120000006</float>
			<float name="AirTurbulenceIntensity">0</float>
			<bool name="AllowThirdPartySales">false</bool>
			<token name="AuthorityMode">1</token>
			<token name="AvatarUnificationMode">0</token>
			<token name="ClientAnimatorThrottling">0</token>
			<BinaryString name="CollisionGroupData"><![CDATA[AQMABPv///8HRGVmYXVsdAEE+////xBTdHVkaW9TZWxlY3RhYmxlAgT8////GVBsdWdpbl9V
bnNlbGVjdGFibGVfR3JvdXA=]]></BinaryString>
			<Ref name="CurrentCamera">RBX2897CD503FF54D9099623038D23806EA</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<bool name="FallHeightEnabled">true</bool>
			<float name="FallenPartsDestroyHeight">NAN</float>
			<token name="FluidForces">0</token>
			<Vector3 name="GlobalWind">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="Gravity">196.199997</float>
			<token name="IKControlConstraintSupport">0</token>
			<token name="LuauTypeCheckMode">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<token name="ModelStreamingBehavior">0</token>
			<token name="MoverConstraintRootBehavior">0</token>
			<token name="PathfindingUseImprovedSearch">0</token>
			<token name="PhysicsImprovedSleep">0</token>
			<token name="PhysicsSteppingMethod">0</token>
			<token name="PlayerCharacterDestroyBehavior">0</token>
			<token name="PrimalPhysicsSolver">0</token>
			<token name="RejectCharacterDeletions">0</token>
			<token name="RenderingCacheOptimizations">0</token>
			<token name="ReplicateInstanceDestroySetting">0</token>
			<token name="Retargeting">0</token>
			<token name="SandboxedInstanceMode">0</token>
			<token name="SignalBehavior2">2</token>
			<token name="StreamOutBehavior">2</token>
			<bool name="StreamingEnabled">true</bool>
			<token name="StreamingIntegrityMode">3</token>
			<int name="StreamingMinRadius">64</int>
			<int name="StreamingTargetRadius">1024</int>
			<bool name="TerrainWeldsFixed">true</bool>
			<token name="TouchEventsUseCollisionGroups">0</token>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<token name="UseNewLuauTypeSolver">0</token>
			<token name="LevelOfDetail">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<token name="ModelStreamingMode">0</token>
			<bool name="NeedsPivotMigration">false</bool>
			<Ref name="PrimaryPart">null</Ref>
			<float name="ScaleFactor">1</float>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Workspace</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000002</UniqueId>
		</Properties>
		<Item class="Model" referent="RBXDA3BA74A7EAE40BF91B054AEAD728897">
			<Properties>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>-143</X>
						<Y>1.5999999</Y>
						<Z>-149</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CFrame>
				</OptionalCoordinateFrame>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000dc5d</UniqueId>
				<string name="Name">Spinner2</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c0000186a</UniqueId>
			</Properties>
			<Item class="Part" referent="RBXD29F33E9456945AFB417A357B9E46A87">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-143</X>
						<Y>2.5</Y>
						<Z>-149</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>60</X>
						<Y>1</Y>
						<Z>18</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000b956</UniqueId>
					<string name="Name">Part</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c0000186d</UniqueId>
				</Properties>
				<Item class="Attachment" referent="RBX9B8DE351FE8146658FE7302AA83AFB35">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>0</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>-0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000c014</UniqueId>
						<string name="Name">Attachment1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c0000186e</UniqueId>
					</Properties>
				</Item>
				<Item class="WeldConstraint" referent="RBX8883E45E359B40BEBB2D6ECE8E11C881">
					<Properties>
						<CoordinateFrame name="CFrame0">
							<X>29.5</X>
							<Y>5.5</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<Ref name="Part0Internal">RBXD29F33E9456945AFB417A357B9E46A87</Ref>
						<Ref name="Part1Internal">RBX9B57EF0E87F74AF8A10001BE4FBF876F</Ref>
						<int name="State">3</int>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">WeldConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">26cfd699bef0eb9408d4264100001210</UniqueId>
					</Properties>
				</Item>
				<Item class="WeldConstraint" referent="RBX8FBCC680C9B6435680F7449AFB6FD39F">
					<Properties>
						<CoordinateFrame name="CFrame0">
							<X>23.25</X>
							<Y>5.5</Y>
							<Z>-8.5</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<Ref name="Part0Internal">RBXD29F33E9456945AFB417A357B9E46A87</Ref>
						<Ref name="Part1Internal">RBX8F34E47908314411ACCB0AA3D2EDE082</Ref>
						<int name="State">3</int>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">WeldConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">26cfd699bef0eb9408d4264100001211</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBXD04659C9387B4392967F7DA09182DE4A">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">true</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-143</X>
						<Y>1</Y>
						<Z>-149</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>-0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>2</X>
						<Y>2</Y>
						<Z>2</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000b956</UniqueId>
					<string name="Name">Part</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c0000186f</UniqueId>
				</Properties>
				<Item class="HingeConstraint" referent="RBX3131764B334D43BDBB76FADE040C67B2">
					<Properties>
						<token name="ActuatorType">1</token>
						<float name="AngularResponsiveness">45</float>
						<float name="AngularSpeed">0</float>
						<float name="AngularVelocity">5</float>
						<bool name="LimitsEnabled">false</bool>
						<float name="LowerAngle">-45</float>
						<float name="MotorMaxAcceleration">500000</float>
						<float name="MotorMaxTorque">900000</float>
						<float name="Radius">0.150000006</float>
						<float name="Restitution">0</float>
						<float name="ServoMaxTorque">0</float>
						<bool name="SoftlockServoUponReachingTarget">false</bool>
						<float name="TargetAngle">0</float>
						<float name="UpperAngle">45</float>
						<Ref name="Attachment0">RBX9B8DE351FE8146658FE7302AA83AFB35</Ref>
						<Ref name="Attachment1">RBX6D68C56E745A4574B681514547D7B02F</Ref>
						<int name="Color">1009</int>
						<bool name="Enabled">true</bool>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000bfbd</UniqueId>
						<string name="Name">HingeConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00001870</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBX6D68C56E745A4574B681514547D7B02F">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>1.5</Y>
							<Z>0</Z>
							<R00>-4.37113883e-08</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>-4.37113883e-08</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000c0b0</UniqueId>
						<string name="Name">Attachment0</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00001871</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX8F34E47908314411ACCB0AA3D2EDE082">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-151.5</X>
						<Y>8</Y>
						<Z>-172.25</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>13.4999962</X>
						<Y>12</Y>
						<Z>1</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000b956</UniqueId>
					<string name="Name">Part</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">26cfd699bef0eb9408d4264100000f08</UniqueId>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX9B57EF0E87F74AF8A10001BE4FBF876F">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-143</X>
						<Y>8</Y>
						<Z>-178.5</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>-1</R20>
						<R21>0</R21>
						<R22>0</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>0.999996185</X>
						<Y>12</Y>
						<Z>17.9999905</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000b956</UniqueId>
					<string name="Name">Part</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">26cfd699bef0eb9408d4264100001095</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX2897CD503FF54D9099623038D23806EA">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>-106.973122</X>
					<Y>28.4136276</Y>
					<Z>-129.266708</Z>
					<R00>-0.572459638</R00>
					<R01>0.475006372</R01>
					<R02>-0.668325484</R02>
					<R10>-0</R10>
					<R11>0.815097809</R11>
					<R12>0.579323411</R12>
					<R20>0.819932997</R20>
					<R21>0.33163926</R21>
					<R22>-0.466610521</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>-105.636505</X>
					<Y>27.2550106</Y>
					<Z>-128.333511</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<bool name="VRTiltAndRollEnabled">false</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000036e</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX3C51E0683D084827BAEAEB02AD1ADF86">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-8</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284177243</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2048</X>
					<Y>16</Y>
					<Z>2048</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Baseplate</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000036f</UniqueId>
			</Properties>
			<Item class="Texture" referent="RBX27BC4F104C63440B8A668B556A27C454">
				<Properties>
					<float name="OffsetStudsU">0</float>
					<float name="OffsetStudsV">0</float>
					<float name="StudsPerTileU">8</float>
					<float name="StudsPerTileV">8</float>
					<Color3 name="Color3">
						<R>0</R>
						<G>0</G>
						<B>0</B>
					</Color3>
					<Content name="MetalnessMap"><null></null></Content>
					<Content name="NormalMap"><null></null></Content>
					<Content name="RoughnessMap"><null></null></Content>
					<Content name="Texture"><url>rbxassetid://6372755229</url></Content>
					<Content name="TexturePack"><null></null></Content>
					<string name="TexturePackMetadata"></string>
					<float name="Transparency">0.800000012</float>
					<Vector2 name="UVOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="UVScale">
						<X>1</X>
						<Y>1</Y>
					</Vector2>
					<int name="ZIndex">1</int>
					<token name="Face">1</token>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Texture</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000370</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Terrain" referent="RBX8AE5272E5EDD467C9D2AED6EE2338F04">
			<Properties>
				<token name="AcquisitionMethod">11</token>
				<bool name="Decoration">true</bool>
				<float name="GrassLength">0.699999988</float>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAb34+WFlWmJiYimFJz8unrJRsY2Rm3eTl6/3/lHxfeXBiS0pKjIJo/xhDUFRUhoZ2
zNLfaoZA///+//PAj5CH]]></BinaryString>
				<BinaryString name="PhysicsGrid"><![CDATA[AgMAAAAg/////////////P/+AAAAAAAAAAAAAAABAAD/AAD/AAD/AAH/AAAAAAAAAAAAAAAB
AP//AP//AP//Af/9AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAD/AAD/
AAD/AAH9AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAD/AAD/AAD/AAH9
AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAP//AP//AP//Af7+AAAAAAAAAAAAAAABAAAAAAAA
AAAAAAABAAD/AAD/AAD/AAH+AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAD/AAD/AAD/AAH+
AAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAP8AAP8AAP8AA/4BAAAAAAAAAAAAAAABAAD/AAD/
AAD/AAH/AAAAAAAAAAAAAAABAP//AP//AP//Af//AAAAAAAAAAAAAAABAAD/AAD/AAD/AAH/
AAAAAAAAAAAAAAABAAAAAAAAAAA=]]></BinaryString>
				<BinaryString name="SmoothGrid"><![CDATA[AQX/AP//AP//AP//AP+A/4AOgQJBv4AbgQJBv4AbgQJBv4Abwb8DgPvBvwOAG4ECQb+AG4EC
Qb+AG4ECQb+AD0F/wb8CQT+AGkF/gQJBP4AaQX+BAkE/gBpBf4ECQT+A/4DGgQJBv4AbgQJB
v4AbgQJBv4Abwb8DgPvBvwOAG4ECQb+AG4ECQb+AG4ECQb+AD0F/wb8CQT+AGkF/gQJBP4Aa
QX+BAkE/gBpBf4ECQT+A/4DGgQJBv4AbgQJBv4AbgQJBv4Abwb8DgPvBvwOAG4ECQb+AG4EC
Qb+AG4ECQb+AD8F/A0E/gBrBfwNBP4AawX8DQT+AGsF/A0E/gP+AxoECQb+AG4ECQb+AG4EC
Qb+AG8G/A4AbwT8DgLvBPwOAG8G/A4AbgQJBv4AbgQJBv4AbgQJBv4D/gP+AO4ECQb+AG4EC
Qb+AG4ECQb+AG8G/A4AbgQJBv4Abwb8DgHvBfwOAG4ECQb+AG8G/A4AbgQJBv4AbgQJBv4Ab
gQJBv4D/gP+AO4ECQb+AG4ECQb+AG4ECQb+AG8G/A4AbgQJBv4Abwb8DgHvBfwOAG4ECQb+A
G8G/A4AbgQJBv4AbgQJBv4AbgQJBv4D/gP+AO4ECQb+AG4ECQb+AG4ECQb+AG8G/A4AbgQJB
v4Abwb8DgHvBfwOAG4ECQb+AG8G/A4AbgQJBv4AbgQJBv4AbgQJBv4D/gP+AO8F/A4AbwX8D
gBvBfwOAG8F/A4AbwX8DgBvBfwOAm8F/A4AbwX8DgBvBfwOAG8F/A4AbwX8DgP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+ALAAAAAAAAAAAAAEAAID/gP+A/4DKQX+BA0F/gBlB
f4EDQX+A/4D/gP+A2UF/gQNBf4AZQX+BA0F/gP+A/4D/gNlBf4EDQX+AGUF/gQNBf4D/gP+A
/4DZQX+BA0F/gBlBf4EDQX+A/4D/gP+A2UF/gQNBf4AZQX+BA0F/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gA4AAAAAAAAAAAAAAAGA
CkF/gQNBf4AZQX+BA0F/gBlBf4EDQX+A/4D/gP+AuUF/gQNBf4AZQX+BA0F/gBlBf4EDQX+A
/4D/gP+AuUF/gQNBf4AZQX+BA0F/gBlBf4EDQX+A/4D/gP+AuUF/gQNBf4AZQX+BA0F/gBlB
f4EDQX+A/4D/gP+AuUF/gQNBf4AZQX+BA0F/gBlBf4EDQX+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A
/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+Arg==]]></BinaryString>
				<bool name="SmoothVoxelsUpgraded">false</bool>
				<Color3 name="WaterColor">
					<R>0.0470588282</R>
					<G>0.329411775</G>
					<B>0.360784322</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Terrain</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000371</UniqueId>
			</Properties>
		</Item>
		<Item class="SpawnLocation" referent="RBXDED91CC3CDBB4B5AB3E115C48666AC2C">
			<Properties>
				<bool name="AllowTeamChangeOnTouch">false</bool>
				<int name="Duration">0</int>
				<bool name="Enabled">true</bool>
				<bool name="Neutral">true</bool>
				<int name="TeamColor">194</int>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0.5</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>12</X>
					<Y>1</Y>
					<Z>12</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">SpawnLocation</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000372</UniqueId>
			</Properties>
			<Item class="Decal" referent="RBX798ED7CE694E4C359CC9E656F3F93921">
				<Properties>
					<Color3 name="Color3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<Content name="MetalnessMap"><null></null></Content>
					<Content name="NormalMap"><null></null></Content>
					<Content name="RoughnessMap"><null></null></Content>
					<Content name="Texture"><url>rbxasset://textures/SpawnLocation.png</url></Content>
					<Content name="TexturePack"><null></null></Content>
					<string name="TexturePackMetadata"></string>
					<float name="Transparency">0</float>
					<Vector2 name="UVOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="UVScale">
						<X>1</X>
						<Y>1</Y>
					</Vector2>
					<int name="ZIndex">1</int>
					<token name="Face">1</token>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Decal</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000373</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX8DAB34C3C9364F5F9E4CAE28F6D6668B">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>59</X>
					<Y>9.99999905</Y>
					<Z>15</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>26</X>
					<Y>20</Y>
					<Z>6</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100004d0f</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100004e02</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX1BECC958B7BC41B9A01E8C6B0237E9C9">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>69</X>
					<Y>9.99999905</Y>
					<Z>-0.999999046</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>26</X>
					<Y>20</Y>
					<Z>6</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100004d0f</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100004f57</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXAE6B679C7AAA44328B45B39C474B4BC3">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>43</X>
					<Y>9.99999905</Y>
					<Z>4.99999905</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>26</X>
					<Y>20</Y>
					<Z>6</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100004d0f</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100004feb</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX4D06450282314C8FA9EC8B5A07F10B9A">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>53</X>
					<Y>9.99999905</Y>
					<Z>-11</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>26</X>
					<Y>20</Y>
					<Z>6</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100004d0f</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100004fec</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX3216375A090E4DA3888141F59377C388">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>27.5000038</X>
					<Y>10</Y>
					<Z>2</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>20</X>
					<Y>20</Y>
					<Z>25</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100005619</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX619A5A20019E46F7A6DFFE404BA759C8">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>32.5000038</X>
					<Y>10</Y>
					<Z>-77</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>20</X>
					<Y>20</Y>
					<Z>15</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000057a3</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX36927BE2C366483EAB9A4DF130B0DB36">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33.7500038</X>
					<Y>10</Y>
					<Z>-97</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>20</X>
					<Y>20</Y>
					<Z>12.5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100005887</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXB422A81713224969A490D4A1D2FB7498">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>35.0000038</X>
					<Y>10</Y>
					<Z>-117</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>20</X>
					<Y>20</Y>
					<Z>10</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100005984</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXC29737086A774726B029CE8C83B2633C">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>36.2500038</X>
					<Y>10</Y>
					<Z>-137</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>20</X>
					<Y>20</Y>
					<Z>7.5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100005a2a</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX585FE4F7A66547129DF30435D20D1D2B">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>37.5000038</X>
					<Y>10</Y>
					<Z>-157</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>20</X>
					<Y>20</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100005aac</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXF67FDCEEAF554A599325DEE8166626C0">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>38.7500038</X>
					<Y>10</Y>
					<Z>-177</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>20</X>
					<Y>20</Y>
					<Z>2.5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100005b89</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBX8B7CEFE63CE648A7B1D529C3DBD6AFCC">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>39</X>
					<Y>10</Y>
					<Z>-9</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>20</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBX40A3467820284F618BDC5DCA7EFEF3E1">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>39</X>
					<Y>10</Y>
					<Z>-11</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>20</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000eaa2</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBXF2D771AE86904ABA954EAE071DA85377">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>39</X>
					<Y>10</Y>
					<Z>-13</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>20</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000ead9</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBXFDE2975FDB7D441DADD89622463B0D83">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>39</X>
					<Y>10</Y>
					<Z>13</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>20</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000eb68</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBXB1AFB0F0E40946338B2BC4B0A177BDB4">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>39</X>
					<Y>10</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>20</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000eb69</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBX25BC7C0E18F8412EB09EB8BFC6D92946">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>39</X>
					<Y>10</Y>
					<Z>15</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>20</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000eb6a</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBX0B94549C6C8540C1856A617E34A2F7D7">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-41</X>
					<Y>256</Y>
					<Z>16.9999981</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>512</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000ebf3</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX994FE5AEB5C3484EA6DCAA7B5DF59992">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-47.5</X>
					<Y>20.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX0B112C14F5AD4ABABD81AFBE750CB667">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-51.5</X>
					<Y>23.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000eecc</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXDEBC1C53B1814053A56845454090E524">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-55.5</X>
					<Y>26.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000efd3</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX9CD0C68659FA4847826D57E1B692846B">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-59.5</X>
					<Y>29.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f096</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX6DAE82D750B843079AB3AE527291C994">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-63.5</X>
					<Y>32.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f0f9</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX2A65D7510CB9426B8867701F1E3F5726">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-67.5</X>
					<Y>29.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f1cb</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX31FC3E13DD5E4E9DBFE37BD870F49D16">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-71.5</X>
					<Y>26.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f22e</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX4E4FCA66A8ED4D49A179BFC9868CC4D2">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-75.5</X>
					<Y>23.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f29b</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX3C0A7F4F89AC46159FB58F01EDD3B92C">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-79.5</X>
					<Y>20.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f30d</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX98D85A6A66484E5EA73A32633B4AC360">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-83.5</X>
					<Y>17.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f37b</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX7EC33BE60DF24363A8F411446627517C">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-87.5</X>
					<Y>14.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f40f</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX121081D72DB947F9A9991E8712735E10">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-91.5</X>
					<Y>11.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f474</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXCB2AAF5DBD074125A16855C9D823276A">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-95.5</X>
					<Y>8.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f4d7</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXB2ADC5769CA44264B8918C1FECDE42C9">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-99.5</X>
					<Y>5.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f53e</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXC4F9531BC9374E9E9B66E128E3EA9AB1">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-103.5</X>
					<Y>2.5</Y>
					<Z>17</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>20</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000ecd4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f5a3</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBXA286230723664958BC1AB8ABA6438986">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-37</X>
					<Y>12.5</Y>
					<Z>16.9999981</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>25</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f66d</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBXA50125C769C241BBBE475BEE01A0F6B9">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-39</X>
					<Y>15</Y>
					<Z>16.9999981</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>30</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f7b6</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBX5E9396F623FD4E32AC1E08153B40ED5B">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-35</X>
					<Y>9.5</Y>
					<Z>16.9999981</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>19</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f877</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBX873C8831F0F3444FAB0EB6C210B3D408">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-33</X>
					<Y>6.5</Y>
					<Z>16.9999981</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>13</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f906</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBXC60DF8CCA06E4E7BA66807C44DEAF9EF">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-31</X>
					<Y>3.50000024</Y>
					<Z>16.9999981</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>7</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000e9f3</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000f9a1</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXCA56EA89F0C647C3A83C131AAF2EA57A">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-106.5</X>
					<Y>10.5</Y>
					<Z>-27.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>25</X>
					<Y>1</Y>
					<Z>25</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000fe98</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000ffb6</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXA7B49A0A0943431EA7B2936B123368AD">
			<Properties>
				<token name="shape">0</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>4</X>
					<Y>18</Y>
					<Z>40</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>36</X>
					<Y>36</Y>
					<Z>36</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000102e7</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXF47625FBCBAD4B018660B609F749FCC1">
			<Properties>
				<token name="shape">0</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>4</X>
					<Y>15</Y>
					<Z>56</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>31</X>
					<Y>31</Y>
					<Z>31</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000102e7</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100010491</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXC200B77E5BE34D76B29B28F07C218A7A">
			<Properties>
				<token name="shape">0</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>4</X>
					<Y>13</Y>
					<Z>72</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>26</X>
					<Y>26</Y>
					<Z>26</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000102e7</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000105a8</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX42F52277E6A244EE8E64EA8C1E927DF8">
			<Properties>
				<token name="shape">0</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-7</X>
					<Y>10</Y>
					<Z>72</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>21</X>
					<Y>21</Y>
					<Z>21</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000102e7</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210001068d</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX93838811F4FF4920814A2A52196D1B6F">
			<Properties>
				<token name="shape">0</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-17</X>
					<Y>8</Y>
					<Z>72</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>16</X>
					<Y>16</Y>
					<Z>16</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000102e7</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100010770</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXFAB4174436A341EB9E203AA50DA75DBA">
			<Properties>
				<token name="shape">0</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-25</X>
					<Y>5</Y>
					<Z>72</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>11</X>
					<Y>11</Y>
					<Z>11</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000102e7</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210001083c</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX2239261A666E446D8A5157D133E62A9F">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-55</X>
					<Y>2.5</Y>
					<Z>105.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>300</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000109cf</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX1E44CFA35A214E5F943247BF4555DBC7">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-207.5</X>
					<Y>2.5</Y>
					<Z>-47</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>300</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000109cf</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100010b76</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXE46614BBCFC945A59B68CD3CF4A269E8">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-55</X>
					<Y>2.5</Y>
					<Z>-199.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>300</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000109cf</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100010c8e</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXF609EE3259D7466BB4D2F6F2DED21884">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>97.5</X>
					<Y>2.5</Y>
					<Z>-47</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>300</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000109cf</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100010c8f</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXFA82F587A5954145A6C923947769F0F0">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>97.5</X>
					<Y>2.5</Y>
					<Z>105.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>5</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000110b1</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX1784D2439A674226897C19401655BB0E">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-207.5</X>
					<Y>2.5</Y>
					<Z>105.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>5</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000110b1</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000111bd</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX69ED2DB5CC704B09897A87F1BB4CCEE0">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-207.5</X>
					<Y>2.5</Y>
					<Z>-199.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>5</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000110b1</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000111f2</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX51A1299B8EB94101B01951C2AA382AEB">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>97.5</X>
					<Y>2.5</Y>
					<Z>-199.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>5</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000110b1</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100011222</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX703D8F6C2D8648AC9948966B18BDAD4D">
			<Properties>
				<token name="shape">0</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">false</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-8</X>
					<Y>2.00000501</Y>
					<Z>-43</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">272</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>4</Y>
					<Z>4</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210001125d</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX4523D82DEA9E477CA930104FD6BDFBD3">
			<Properties>
				<token name="shape">2</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">false</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>1.5</X>
					<Y>3.5</Y>
					<Z>-41.6439667</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>-0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>-1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>-0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4286263163</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">272</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>7</X>
					<Y>7</Y>
					<Z>7</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100011394</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX5E98DBB8D0C7462B953DC7EA8C2DE28A">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">false</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-16.5</X>
					<Y>2</Y>
					<Z>-44</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4281634368</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>5</X>
					<Y>4</Y>
					<Z>4</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000114b1</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXCE107CCD253E448086D10E79EEFD7BD0">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>4</Y>
					<Z>-44.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>8</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000134e0</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXA3828ED2A65644B7A75E28ABDFB83C67">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.9000001</Y>
					<Z>-43.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>7.80000019</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100013ae2</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXC0526DD641FE4ECDB8C3FF50963ED1A7">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-55</X>
					<Y>2.49999475</Y>
					<Z>-204.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>300</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000109cf</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200006eb1</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX9CE7D264E9B24388869CAAD8BED51B08">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>102.5</X>
					<Y>2.49999809</Y>
					<Z>-47</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>300</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000109cf</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200006eb0</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX5143EAA4C9FC4FA295ED120CD1A2FB4C">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-55</X>
					<Y>2.49999714</Y>
					<Z>110.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>300</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000109cf</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d2000066ee</UniqueId>
			</Properties>
		</Item>
		<Item class="TrussPart" referent="RBXE5ACEA4616AB458184EB514ECF6270E4">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-98</X>
					<Y>12.9252958</Y>
					<Z>-86.1072083</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0.866025269</R11>
					<R12>0.499999881</R12>
					<R20>0</R20>
					<R21>-0.499999881</R21>
					<R22>0.866025269</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>27</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100013e62</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX628072B29E9B46079BA79A07281FBC7A">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-98</X>
					<Y>23.5</Y>
					<Z>-78.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>14</X>
					<Y>1</Y>
					<Z>25</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af210000fe98</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100014abd</UniqueId>
			</Properties>
		</Item>
		<Item class="MeshPart" referent="RBX486214D843C84ABEA7F5DF9F719ECF3A">
			<Properties>
				<bool name="DoubleSided">false</bool>
				<bool name="HasJointOffset">false</bool>
				<bool name="HasSkinnedMesh">false</bool>
				<Vector3 name="InitialSize">
					<X>2.02975988</X>
					<Y>3.68898487</Y>
					<Z>2.08579493</Z>
				</Vector3>
				<Vector3 name="JointOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="MeshId"><url>http://www.roblox.com/asset/?id=96065544</url></Content>
				<BinaryString name="PhysicsData"></BinaryString>
				<token name="RenderFidelity">0</token>
				<Content name="TextureID"><null></null></Content>
				<int name="VertexCount">1764</int>
				<SharedString name="AeroMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<token name="FluidFidelityInternal">0</token>
				<bool name="InertiaMigrated">false</bool>
				<SharedString name="PhysicalConfigData">WZV0PabLnwuMGe+sc607AQ==</SharedString>
				<Vector3 name="UnscaledCofm">
					<X>-0.000254471088</X>
					<Y>0.730045676</Y>
					<Z>0.490722239</Z>
				</Vector3>
				<Vector3 name="UnscaledVolInertiaDiags">
					<X>2.90772033</X>
					<Y>1.50529695</Y>
					<Z>2.91093898</Z>
				</Vector3>
				<Vector3 name="UnscaledVolInertiaOffDiags">
					<X>-0.00120552513</X>
					<Y>-0.000767156831</Y>
					<Z>-0.862161696</Z>
				</Vector3>
				<float name="UnscaledVolume">2.79534578</float>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>5.61298847</X>
					<Y>1.68341577</Y>
					<Z>-15.9563494</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2.80010772</X>
					<Y>5.08905268</Y>
					<Z>2.8774097</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Chair</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">3630fc202116c2c006e6407c00007a43</UniqueId>
			</Properties>
			<Item class="Seat" referent="RBX79484B76F3444FF2ACB6589BC576A295">
				<Properties>
					<bool name="Disabled">false</bool>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>5.61298847</X>
						<Y>1.79338479</Y>
						<Z>-15.6804152</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>2.20724273</X>
						<Y>0.275905222</Y>
						<Z>1.93133712</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Seat</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3630fc202116c2c006e6407c00007d19</UniqueId>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX9322F7AC71AB4144822646A76F17E6C6">
				<Properties>
					<CoordinateFrame name="C0">
						<X>0</X>
						<Y>0.10996902</Y>
						<Z>-0.275934219</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="Enabled">true</bool>
					<Ref name="Part0">RBX486214D843C84ABEA7F5DF9F719ECF3A</Ref>
					<Ref name="Part1">RBX79484B76F3444FF2ACB6589BC576A295</Ref>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Weld</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008598</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="MeshPart" referent="RBXF23A982B21474B2392F996A922A12E69">
			<Properties>
				<bool name="DoubleSided">false</bool>
				<bool name="HasJointOffset">false</bool>
				<bool name="HasSkinnedMesh">false</bool>
				<Vector3 name="InitialSize">
					<X>2.02975988</X>
					<Y>3.68898487</Y>
					<Z>2.08579493</Z>
				</Vector3>
				<Vector3 name="JointOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="MeshId"><url>http://www.roblox.com/asset/?id=96065544</url></Content>
				<BinaryString name="PhysicsData"></BinaryString>
				<token name="RenderFidelity">0</token>
				<Content name="TextureID"><null></null></Content>
				<int name="VertexCount">1764</int>
				<SharedString name="AeroMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<token name="FluidFidelityInternal">0</token>
				<bool name="InertiaMigrated">false</bool>
				<SharedString name="PhysicalConfigData">WZV0PabLnwuMGe+sc607AQ==</SharedString>
				<Vector3 name="UnscaledCofm">
					<X>-0.000254471088</X>
					<Y>0.730045676</Y>
					<Z>0.490722239</Z>
				</Vector3>
				<Vector3 name="UnscaledVolInertiaDiags">
					<X>2.90772033</X>
					<Y>1.50529695</Y>
					<Z>2.91093898</Z>
				</Vector3>
				<Vector3 name="UnscaledVolInertiaOffDiags">
					<X>-0.00120552513</X>
					<Y>-0.000767156831</Y>
					<Z>-0.862161696</Z>
				</Vector3>
				<float name="UnscaledVolume">2.79534578</float>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-6.11298847</X>
					<Y>1.68341577</Y>
					<Z>-15.9563494</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2.80010772</X>
					<Y>5.08905268</Y>
					<Z>2.8774097</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">3630fc202116c2c006e6407c00007a43</UniqueId>
				<string name="Name">Chair</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">3630fc202116c2c006e6407c00007f55</UniqueId>
			</Properties>
			<Item class="Seat" referent="RBXDB4775274FC9475C92E8223DD7EF450D">
				<Properties>
					<bool name="Disabled">false</bool>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-6.11298847</X>
						<Y>1.79338479</Y>
						<Z>-15.6804152</Z>
						<R00>-1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>-1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>2.20724273</X>
						<Y>0.275905222</Y>
						<Z>1.93133712</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">3630fc202116c2c006e6407c00007d19</UniqueId>
					<string name="Name">Seat</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3630fc202116c2c006e6407c00007f56</UniqueId>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX7527F8C8A4864200BBD379FB45B076BD">
				<Properties>
					<CoordinateFrame name="C0">
						<X>0</X>
						<Y>0.10996902</Y>
						<Z>-0.275934219</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="Enabled">true</bool>
					<Ref name="Part0">RBXF23A982B21474B2392F996A922A12E69</Ref>
					<Ref name="Part1">RBXDB4775274FC9475C92E8223DD7EF450D</Ref>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Weld</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">3630fc202116c2c006e6407c000085ee</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="TrussPart" referent="RBX5E8B17634AF04DC3A74A9854F09761F6">
			<Properties>
				<token name="style">0</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-147.159637</X>
					<Y>104.464203</Y>
					<Z>-130.954727</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0.866007268</R11>
					<R12>0.500031412</R12>
					<R20>0</R20>
					<R21>-0.500031412</R21>
					<R22>0.866007268</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2</X>
					<Y>240.100006</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Truss</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">3630fc202116c2c006e6407c000089b9</UniqueId>
			</Properties>
			<Item class="Attachment" referent="RBXE9436B1D7F0D45D1934978071EC70FF1">
				<Properties>
					<CoordinateFrame name="CFrame">
						<X>-1</X>
						<Y>-56.0500031</Y>
						<Z>-0.999992371</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>0.866007268</R10>
						<R11>-0.500031412</R11>
						<R12>0</R12>
						<R20>0.500031412</R20>
						<R21>0.866007268</R21>
						<R22>-0</R22>
					</CoordinateFrame>
					<bool name="Visible">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Attachment1</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">66cfd867c63ccadf075872ec00007907</UniqueId>
				</Properties>
			</Item>
			<Item class="Attachment" referent="RBXE273578E8F3A46DCA4B725B227237AAB">
				<Properties>
					<CoordinateFrame name="CFrame">
						<X>1</X>
						<Y>-20.0500031</Y>
						<Z>-1.00001144</Z>
						<R00>0</R00>
						<R01>0</R01>
						<R02>1</R02>
						<R10>0.866007268</R10>
						<R11>-0.500031412</R11>
						<R12>0</R12>
						<R20>0.500031412</R20>
						<R21>0.866007268</R21>
						<R22>-0</R22>
					</CoordinateFrame>
					<bool name="Visible">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Attachment1</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">66cfd867c63ccadf075872ec0000797e</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Model" referent="RBX0DCCFAFC026640439A9B28F2911C1DAB">
			<Properties>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Model</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000ad86</UniqueId>
			</Properties>
			<Item class="Humanoid" referent="RBXE8B2A9C070AE443D8516974F7D6862F8">
				<Properties>
					<bool name="AutoJumpEnabled">true</bool>
					<bool name="AutoRotate">true</bool>
					<bool name="AutomaticScalingEnabled">true</bool>
					<bool name="BreakJointsOnDeath">true</bool>
					<token name="CollisionType">0</token>
					<token name="DisplayDistanceType">0</token>
					<string name="DisplayName"></string>
					<bool name="EvaluateStateMachine">true</bool>
					<float name="HealthDisplayDistance">100</float>
					<token name="HealthDisplayType">0</token>
					<float name="Health_XML">100</float>
					<float name="HipHeight">0</float>
					<Vector3 name="InternalBodyScale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<float name="InternalHeadScale">1</float>
					<float name="JumpHeight">7.19999981</float>
					<float name="JumpPower">50</float>
					<float name="MaxHealth">100</float>
					<float name="MaxSlopeAngle">89</float>
					<float name="NameDisplayDistance">100</float>
					<token name="NameOcclusion">2</token>
					<bool name="RequiresNeck">true</bool>
					<token name="RigType">0</token>
					<bool name="UseJumpPower">true</bool>
					<float name="WalkSpeed">16</float>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Humanoid</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000ad88</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX5B2B18DF0BCA460891F7ACFE76B5EFAB">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-133.799973</X>
					<Y>5.5</Y>
					<Z>-71.3749924</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">272</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>22</X>
					<Y>11</Y>
					<Z>1.04999995</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">3026646530</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000d3e6</UniqueId>
			</Properties>
			<Item class="SurfaceGui" referent="RBX75A81966ED324F9BA30EFE6A4D1087D2">
				<Properties>
					<bool name="AlwaysOnTop">false</bool>
					<float name="Brightness">1</float>
					<Vector2 name="CanvasSize">
						<X>200</X>
						<Y>50</Y>
					</Vector2>
					<bool name="ClipsDescendants">true</bool>
					<float name="LightInfluence">1</float>
					<float name="MaxDistance">0</float>
					<float name="PixelsPerStud">50</float>
					<token name="SizingMode">0</token>
					<float name="ToolPunchThroughDistance">0</float>
					<float name="ZOffset">0</float>
					<bool name="Active">true</bool>
					<Ref name="Adornee">RBX5B2B18DF0BCA460891F7ACFE76B5EFAB</Ref>
					<token name="Face">5</token>
					<bool name="Enabled">true</bool>
					<bool name="ResetOnSpawn">true</bool>
					<token name="ZIndexBehavior">1</token>
					<bool name="AutoLocalize">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">SurfaceGui</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000d3e7</UniqueId>
				</Properties>
				<Item class="TextLabel" referent="RBXEE7557F523C2467282C5685B4C8AA4C7">
					<Properties>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
							<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
						</Font>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="OpenTypeFeatures"></string>
						<bool name="RichText">false</bool>
						<string name="Text">&lt;- Stress test</string>
						<Color3 name="TextColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
						<bool name="AutoLocalize">true</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">TextLabel</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000d3e8</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX9E88CF29548C4FAE88C37F158B68F426">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">WaypointsAI</string>
				<int64 name="SourceAssetId">8668026737</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400009972</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX4092F4C16F7847D995CD0AA72299A485">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Waypoints</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400009973</UniqueId>
				</Properties>
				<Item class="Part" referent="RBXC0F98E5B531240DEA6DCEE6922B9035B">
					<Properties>
						<token name="shape">1</token>
						<token name="formFactorRaw">1</token>
						<bool name="Anchored">true</bool>
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-101.173019</X>
							<Y>0.5</Y>
							<Z>59</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized"></string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="size">
							<X>2.34604073</X>
							<Y>1</Y>
							<Z>2</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400009974</UniqueId>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX272CE6EBD6DF487E9AF8D449B103E6D9">
					<Properties>
						<token name="shape">1</token>
						<token name="formFactorRaw">1</token>
						<bool name="Anchored">true</bool>
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-162.407425</X>
							<Y>0.500006318</Y>
							<Z>41.5015869</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized"></string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="size">
							<X>2.34604073</X>
							<Y>1</Y>
							<Z>2</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">2</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400009975</UniqueId>
					</Properties>
				</Item>
				<Item class="Part" referent="RBX94FC11BC733846E9B7A2EC7AE0B355E4">
					<Properties>
						<token name="shape">1</token>
						<token name="formFactorRaw">1</token>
						<bool name="Anchored">true</bool>
						<bool name="AudioCanCollide">true</bool>
						<float name="BackParamA">-0.5</float>
						<float name="BackParamB">0.5</float>
						<token name="BackSurface">0</token>
						<token name="BackSurfaceInput">0</token>
						<float name="BottomParamA">-0.5</float>
						<float name="BottomParamB">0.5</float>
						<token name="BottomSurface">0</token>
						<token name="BottomSurfaceInput">0</token>
						<CoordinateFrame name="CFrame">
							<X>-149.173019</X>
							<Y>0.5</Y>
							<Z>1</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="CanCollide">true</bool>
						<bool name="CanQuery">true</bool>
						<bool name="CanTouch">true</bool>
						<bool name="CastShadow">true</bool>
						<string name="CollisionGroup">Default</string>
						<int name="CollisionGroupId">0</int>
						<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
						<PhysicalProperties name="CustomPhysicalProperties">
							<CustomPhysics>false</CustomPhysics>
						</PhysicalProperties>
						<bool name="EnableFluidForces">true</bool>
						<float name="FrontParamA">-0.5</float>
						<float name="FrontParamB">0.5</float>
						<token name="FrontSurface">0</token>
						<token name="FrontSurfaceInput">0</token>
						<float name="LeftParamA">-0.5</float>
						<float name="LeftParamB">0.5</float>
						<token name="LeftSurface">0</token>
						<token name="LeftSurfaceInput">0</token>
						<bool name="Locked">false</bool>
						<bool name="Massless">false</bool>
						<token name="Material">256</token>
						<string name="MaterialVariantSerialized"></string>
						<CoordinateFrame name="PivotOffset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<float name="Reflectance">0</float>
						<float name="RightParamA">-0.5</float>
						<float name="RightParamB">0.5</float>
						<token name="RightSurface">0</token>
						<token name="RightSurfaceInput">0</token>
						<int name="RootPriority">0</int>
						<Vector3 name="RotVelocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<float name="TopParamA">-0.5</float>
						<float name="TopParamB">0.5</float>
						<token name="TopSurface">0</token>
						<token name="TopSurfaceInput">0</token>
						<float name="Transparency">0</float>
						<Vector3 name="Velocity">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="size">
							<X>2.34604073</X>
							<Y>1</Y>
							<Z>2</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">3</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400009976</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Model" referent="RBX4E0BADE8051C4728BBFD2C18F69D3EDF">
			<Properties>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>-77</X>
						<Y>1.5999999</Y>
						<Z>-141</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CFrame>
				</OptionalCoordinateFrame>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Spinner</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000dc5d</UniqueId>
			</Properties>
			<Item class="Seat" referent="RBX7823D6AFE90E4458B28EF240C37512E6">
				<Properties>
					<bool name="Disabled">false</bool>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-68</X>
						<Y>3.0999999</Y>
						<Z>-141</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>2</X>
						<Y>0.199999988</Y>
						<Z>2</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000bc53</UniqueId>
					<string name="Name">Seat</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000bdc8</UniqueId>
				</Properties>
				<Item class="WeldConstraint" referent="RBXDC49AAD4DB86459BA7BBC653552A8C2C">
					<Properties>
						<CoordinateFrame name="CFrame0">
							<X>-9</X>
							<Y>-0.599999905</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<Ref name="Part0Internal">RBX7823D6AFE90E4458B28EF240C37512E6</Ref>
						<Ref name="Part1Internal">RBX79B842440BB645D194897332F6688BC9</Ref>
						<int name="State">3</int>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">WeldConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000be6d</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX79B842440BB645D194897332F6688BC9">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-77</X>
						<Y>2.5</Y>
						<Z>-141</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>20</X>
						<Y>1</Y>
						<Z>2</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">4637a9f85db28a130759d4ab0000b956</UniqueId>
					<string name="Name">Part</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000baed</UniqueId>
				</Properties>
				<Item class="Attachment" referent="RBXF3C5503E436C426DBD45059F520918C8">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>0</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>-0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000c014</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBXF8709FCB39D642828BEAB4057E4AB028">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">true</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-77</X>
						<Y>1</Y>
						<Z>-141</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>2</X>
						<Y>2</Y>
						<Z>2</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Part</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000b956</UniqueId>
				</Properties>
				<Item class="HingeConstraint" referent="RBXFC5DCDCC2039467DA53157C5C2B4AFC8">
					<Properties>
						<token name="ActuatorType">1</token>
						<float name="AngularResponsiveness">45</float>
						<float name="AngularSpeed">0</float>
						<float name="AngularVelocity">5</float>
						<bool name="LimitsEnabled">false</bool>
						<float name="LowerAngle">-45</float>
						<float name="MotorMaxAcceleration">500000</float>
						<float name="MotorMaxTorque">900000</float>
						<float name="Radius">0.150000006</float>
						<float name="Restitution">0</float>
						<float name="ServoMaxTorque">0</float>
						<bool name="SoftlockServoUponReachingTarget">false</bool>
						<float name="TargetAngle">0</float>
						<float name="UpperAngle">45</float>
						<Ref name="Attachment0">RBXF3C5503E436C426DBD45059F520918C8</Ref>
						<Ref name="Attachment1">RBX616868F3AED146F0A04299C92531FDCC</Ref>
						<int name="Color">1009</int>
						<bool name="Enabled">true</bool>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">HingeConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000bfbd</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBX616868F3AED146F0A04299C92531FDCC">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>1.5</Y>
							<Z>0</Z>
							<R00>-4.37113883e-08</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>-4.37113883e-08</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment0</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000c0b0</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Seat" referent="RBX3B5F09AAF90C4B3DA70511CEF9D11C7C">
				<Properties>
					<bool name="Disabled">false</bool>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-86</X>
						<Y>3.0999999</Y>
						<Z>-141</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>2</X>
						<Y>0.199999988</Y>
						<Z>2</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Seat</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000bc53</UniqueId>
				</Properties>
				<Item class="WeldConstraint" referent="RBX84A3A5BAFCEB4DDDAC96EE490BE58754">
					<Properties>
						<CoordinateFrame name="CFrame0">
							<X>9</X>
							<Y>-0.599999905</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<Ref name="Part0Internal">RBX3B5F09AAF90C4B3DA70511CEF9D11C7C</Ref>
						<Ref name="Part1Internal">RBX79B842440BB645D194897332F6688BC9</Ref>
						<int name="State">3</int>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">WeldConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000bf04</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Model" referent="RBX2EA4382DA7074E2F80330A25A2671F08">
			<Properties>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>-15.2000008</X>
						<Y>26.5000038</Y>
						<Z>-104.899994</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CFrame>
				</OptionalCoordinateFrame>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Wacky</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">4637a9f85db28a130759d4ab0000dd3d</UniqueId>
			</Properties>
			<Item class="Part" referent="RBX0FDE215EB00B4805B5CC56C90CADC3D5">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-15.2000008</X>
						<Y>10.9000034</Y>
						<Z>-104.899994</Z>
						<R00>0.857167304</R00>
						<R01>0.515038073</R01>
						<R02>0</R02>
						<R10>-0.515038073</R10>
						<R11>0.857167304</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294967040</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>30</X>
						<Y>1</Y>
						<Z>30</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">67956f7a3656e3560757216f0000590a</UniqueId>
					<string name="Name">Part</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">67956f7a3656e3560757216f00005bc3</UniqueId>
				</Properties>
				<Item class="Attachment" referent="RBXB96601F4D7674216BB99097ECE94C697">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>15</X>
							<Y>0.5</Y>
							<Z>15</Z>
							<R00>0</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>-0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment0</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f000063d9</UniqueId>
					</Properties>
				</Item>
				<Item class="SpringConstraint" referent="RBX714F3093FF544B70B8321CA84B7C14E9">
					<Properties>
						<float name="Coils">3</float>
						<float name="Damping">2</float>
						<float name="FreeLength">12</float>
						<bool name="LimitsEnabled">false</bool>
						<float name="MaxForce">INF</float>
						<float name="MaxLength">5</float>
						<float name="MinLength">0</float>
						<float name="Radius">0.400000006</float>
						<float name="Stiffness">5000</float>
						<float name="Thickness">0.5</float>
						<Ref name="Attachment0">RBXB96601F4D7674216BB99097ECE94C697</Ref>
						<Ref name="Attachment1">RBXFCBE9BD1819D4FBCBB693AC5F1A1FF3B</Ref>
						<int name="Color">200</int>
						<bool name="Enabled">true</bool>
						<bool name="Visible">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">SpringConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f000063e1</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBXE63C9162787F4A259FCC75E3846C2799">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>15</X>
							<Y>0.5</Y>
							<Z>-15</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>1</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment0</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f0000645e</UniqueId>
					</Properties>
				</Item>
				<Item class="SpringConstraint" referent="RBXA781A1DBAF9D4D3091FEA43E2917BE9C">
					<Properties>
						<float name="Coils">3</float>
						<float name="Damping">2</float>
						<float name="FreeLength">12</float>
						<bool name="LimitsEnabled">false</bool>
						<float name="MaxForce">INF</float>
						<float name="MaxLength">5</float>
						<float name="MinLength">0</float>
						<float name="Radius">0.400000006</float>
						<float name="Stiffness">5000</float>
						<float name="Thickness">0.5</float>
						<Ref name="Attachment0">RBXE63C9162787F4A259FCC75E3846C2799</Ref>
						<Ref name="Attachment1">RBXCEAD5CB1FD3E4A238902406BEC464F2B</Ref>
						<int name="Color">200</int>
						<bool name="Enabled">true</bool>
						<bool name="Visible">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">SpringConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f00006466</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBX4AC06F8581DE45E2913F643C9C68F540">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>-15</X>
							<Y>0.5</Y>
							<Z>-15</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>-0</R12>
							<R20>-1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f000064e7</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBX6D7B73F2264F433DB204FD676CFA6AA3">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>-15</X>
							<Y>0.5</Y>
							<Z>15</Z>
							<R00>0</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>-0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment0</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f00006558</UniqueId>
					</Properties>
				</Item>
				<Item class="SpringConstraint" referent="RBX26C2FE9D1C4C49AEAA80BBFE2E43B9A4">
					<Properties>
						<float name="Coils">3</float>
						<float name="Damping">2</float>
						<float name="FreeLength">12</float>
						<bool name="LimitsEnabled">false</bool>
						<float name="MaxForce">INF</float>
						<float name="MaxLength">5</float>
						<float name="MinLength">0</float>
						<float name="Radius">0.400000006</float>
						<float name="Stiffness">5000</float>
						<float name="Thickness">0.5</float>
						<Ref name="Attachment0">RBX6D7B73F2264F433DB204FD676CFA6AA3</Ref>
						<Ref name="Attachment1">RBXF615A4F6042B4ECF939E4DED1E9BF97F</Ref>
						<int name="Color">200</int>
						<bool name="Enabled">true</bool>
						<bool name="Visible">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">SpringConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f00006562</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX9196BEEB6F1E4912B9D4C23F18A74623">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">true</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-15.2000008</X>
						<Y>34.5000038</Y>
						<Z>-104.899994</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">false</bool>
					<bool name="CanTouch">false</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0.600000024</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>30</X>
						<Y>1</Y>
						<Z>30</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Part</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">67956f7a3656e3560757216f0000590a</UniqueId>
				</Properties>
				<Item class="Attachment" referent="RBXFCBE9BD1819D4FBCBB693AC5F1A1FF3B">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>15</X>
							<Y>-0.5</Y>
							<Z>15</Z>
							<R00>0</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>-0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f000063e0</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBXCEAD5CB1FD3E4A238902406BEC464F2B">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>15</X>
							<Y>-0.5</Y>
							<Z>-15</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>1</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f00006465</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBXDE65121ECCB84B4FB0545CAF1740A046">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>-15</X>
							<Y>-0.5</Y>
							<Z>-15</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>-0</R12>
							<R20>-1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment0</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f000064e0</UniqueId>
					</Properties>
				</Item>
				<Item class="SpringConstraint" referent="RBXCC8ECBAC4140468DA789299ADFC53185">
					<Properties>
						<float name="Coils">3</float>
						<float name="Damping">2</float>
						<float name="FreeLength">12</float>
						<bool name="LimitsEnabled">false</bool>
						<float name="MaxForce">INF</float>
						<float name="MaxLength">5</float>
						<float name="MinLength">0</float>
						<float name="Radius">0.400000006</float>
						<float name="Stiffness">5000</float>
						<float name="Thickness">0.5</float>
						<Ref name="Attachment0">RBXDE65121ECCB84B4FB0545CAF1740A046</Ref>
						<Ref name="Attachment1">RBX4AC06F8581DE45E2913F643C9C68F540</Ref>
						<int name="Color">200</int>
						<bool name="Enabled">true</bool>
						<bool name="Visible">true</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">SpringConstraint</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f000064e8</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBXF615A4F6042B4ECF939E4DED1E9BF97F">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>-15</X>
							<Y>-0.5</Y>
							<Z>15</Z>
							<R00>0</R00>
							<R01>-1</R01>
							<R02>0</R02>
							<R10>1</R10>
							<R11>0</R11>
							<R12>-0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Attachment1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">67956f7a3656e3560757216f00006561</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Part" referent="RBX48EA13AE07964FEF934547B88B507144">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.09999967</Y>
					<Z>-25.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>4.20000029</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200008e7c</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX793260F0E249406E924C97FCC59774FC">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">false</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-59.8000031</X>
					<Y>29.3000145</Y>
					<Z>-66.1000061</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">1312</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>10.4000006</X>
					<Y>0.199999988</Y>
					<Z>55.4000015</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">4637a9f85db28a130759d4ab00010f22</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXC3BAB5DFCC7B448DA3F22A2B2A53D0B6">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-212.5</X>
					<Y>2.5</Y>
					<Z>-47</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>-0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>300</X>
					<Y>5</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af21000109cf</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d20000628f</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX74FA582D84CA49D68E6CE9B09943819E">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.80000019</Y>
					<Z>-42.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>7.5999999</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200007cc9</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXD0EC76A3A72243279E26094C76A649CC">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.70000005</Y>
					<Z>-41.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>7.4000001</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200007db5</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXA7986742CBA84B35A82BBEFF62449D57">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.60000014</Y>
					<Z>-40.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>7.20000029</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200007ea8</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX1484DD19ABA0458A86308DAF6F4C9C14">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.5</Y>
					<Z>-39.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>7</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200007f97</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXAB93B5127297441DB118585E174321A0">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.4000001</Y>
					<Z>-38.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>6.80000019</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200008096</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX5630743F681742FCA04D733FDFB92229">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.29999995</Y>
					<Z>-37.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>6.5999999</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d2000082bc</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX3BD2AD7734694A72A8F8CE300C6FFA8E">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.20000005</Y>
					<Z>-36.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>6.4000001</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d2000083b1</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXD636CCAE47BC448C9052EA62970784E4">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.10000014</Y>
					<Z>-35.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>6.20000029</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d20000849a</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXFFD5E87C4EB74AF3B144D434AEA2969A">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>3.00000024</Y>
					<Z>-34.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>6</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d2000085ee</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX9055CB7CA72E4C2189EB54709D133AAC">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.9000001</Y>
					<Z>-33.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>5.80000019</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d2000086e7</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX32E31127452B406185475C7463CA773D">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.79999995</Y>
					<Z>-32.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>5.5999999</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d2000087e3</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX295520F781C84BAB9361138E275652AA">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.70000005</Y>
					<Z>-31.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>5.4000001</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d2000088d4</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX852F53842A5444D19E8777C702EF5313">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.60000014</Y>
					<Z>-30.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>5.20000029</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d2000089cb</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX2DCC2975405F4E26B8BBF21B67D71CAF">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.5</Y>
					<Z>-29.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200008ac7</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX9C5B0BBC434F4028A801A1B04EFE0265">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.39999986</Y>
					<Z>-28.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>4.80000019</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200008bb7</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXC97F75C8C7594D44A40DD0B7342E677A">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.29999971</Y>
					<Z>-27.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>4.5999999</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200008caa</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX41FF3AD4AC5341709FFD411C24C22048">
			<Properties>
				<token name="shape">3</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>33</X>
					<Y>2.19999981</Y>
					<Z>-26.5</Z>
					<R00>0</R00>
					<R01>-1</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1</X>
					<Y>20</Y>
					<Z>4.4000001</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">75b80f531ed98f0306e5af2100005619</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">6c625a154e184f35075b24d200008d93</UniqueId>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX5265FF2E9D604A43AD50459B1035C27B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">ClassicS15V2</string>
				<int64 name="SourceAssetId">13413443689</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">69305169a5b792bd075f0dd9000083ab</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX88A48634EEEC4CB78E41640241A5E9D5">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>0.500000119</Y>
					<Z>-22.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da1</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX91F177EC00854FEAB0B3E09969AB9289">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>1.00000012</Y>
					<Z>-21.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>2</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da2</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX745F2E1E23C9446D90CF32BC0279CF40">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>1.50000012</Y>
					<Z>-20.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>3</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da3</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX4326946E14F74FC796270774089A2089">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>2</Y>
					<Z>-19.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>4</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da4</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXD471C01F5C9F405F840DA99A8305D1CD">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>2.5</Y>
					<Z>-18.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>5</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da5</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX321144B9FFE944F3B44CE5F9857B3AEB">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>3</Y>
					<Z>-17.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>6</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da6</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXE8A058B3203047878A58EADACA7FD24C">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>3.5</Y>
					<Z>-16.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>7</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da7</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXB145214172644836865D89DE65E601B8">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>4</Y>
					<Z>-15.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>8</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da8</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX7CCB739A6739401CAE373522A4DDAADA">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>4</Y>
					<Z>-12.5</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>8</Y>
					<Z>5</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000da9</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXB9B2C5E7FFFD464A8E2F586F95053C8C">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>4</Y>
					<Z>-9.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>8</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000daa</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX1946CC2A846542AC84C4186F142F1A01">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>2.5</Y>
					<Z>-6.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>5</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000dab</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXFA45478A449D4D95925022763B69CF2F">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>3</Y>
					<Z>-7.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>6</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000dac</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXF9B04E5114844BD8804C6BD3D84B3ED0">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>3.5</Y>
					<Z>-8.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>7</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000dad</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXE3229F48E986441EB0A6B29A9865F8A9">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>2</Y>
					<Z>-5.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>4</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000dae</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX5C3F3E72C8F2483784A2596414B87835">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>1.50000012</Y>
					<Z>-4.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>3</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000daf</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX31D1BFCE2A60426384EAB677628A3B9F">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>1.00000012</Y>
					<Z>-3.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>2</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000db0</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXFE54AD9BAF99494BBCB7985C79D473AF">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-62</X>
					<Y>0.500000119</Y>
					<Z>-2.5</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000db1</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX5E3C0830BE4D414E93F06938DE4E219C">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>18.5000019</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e13</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX3F4BBE2A2D82437DA5A63D3C6033C10C">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>16.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e14</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXC33E8AB1258D4AE587872C20CBD53603">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>0.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e15</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX79899561C5EA4DC2A6DE3F3AF2EF3396">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>2.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e16</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXA4A28D4095584BDBB99045A6E07BE3F4">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>4.50000048</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e17</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXCAE4BD26161D4B8AB15A39E19DAF400B">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>6.49999952</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e18</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX52183C8E6E994C4696CAD772D48C0BE5">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>8.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e19</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXE8B7DECAE8894D78918CCA8CA6EEC57F">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>10.500001</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e1a</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX1FFD22704D13402C889D5D813DCD01B9">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>12.500001</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e1b</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXDDC33DA3381648AE8452D4C696017F9F">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>14.500001</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000e1c</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXCB943085B0CD4281AAB0B4AAD30F741A">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>20.5000019</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000f7c</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXDA16379D0138442EB061354223F511E1">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>22.5000019</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb0</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX87DF055046EB4342B978AC4734A36507">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>24.5000019</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb1</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX7C2D55B114BE499AACD48A7FB199D77B">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>26.5000019</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb2</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX177C390AA0A54D7EA9A3349034B3407D">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>28.5000019</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb3</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXB80A759C79A84237B10BD57FE2A1909B">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>30.5000019</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb4</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX03BC6741755A48DF95E977FB3413A86F">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>32.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb5</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXDEFB477650A2440A8D74C2800665B914">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>34.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb6</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX5C24D00D805A44EB8FDE2677EC40EB5E">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>36.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb7</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXDAE1372750F34ABC84908CCC24A1ED78">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>38.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb8</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXD87C045C807B4EB7AF0D8A29D97F70FF">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-40</X>
					<Y>40.5</Y>
					<Z>23</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>4</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">273f4a91a34eeffa0891417e000064b4</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">0491bfa49a8cb2a108a14b4c00000fb9</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX72A6EF53D4AD44329D33953E1FF67E24">
			<Properties>
				<token name="shape">1</token>
				<token name="formFactorRaw">1</token>
				<bool name="Anchored">true</bool>
				<bool name="AudioCanCollide">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>2</Y>
					<Z>-17.5249977</Z>
					<R00>-1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<string name="CollisionGroup">Default</string>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="EnableFluidForces">true</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<bool name="Massless">false</bool>
				<token name="Material">272</token>
				<string name="MaterialVariantSerialized"></string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>8</X>
					<Y>4</Y>
					<Z>1.04999995</Z>
				</Vector3>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">0bbdee1caba14a7f06e743250000d3e6</UniqueId>
				<string name="Name">Part</string>
				<int64 name="SourceAssetId">3026646530</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">13b43adec42fd73609019aa700000ece</UniqueId>
			</Properties>
			<Item class="SurfaceGui" referent="RBX17E1B16D98E44275A8B4AEAC23A08125">
				<Properties>
					<bool name="AlwaysOnTop">false</bool>
					<float name="Brightness">1</float>
					<Vector2 name="CanvasSize">
						<X>200</X>
						<Y>50</Y>
					</Vector2>
					<bool name="ClipsDescendants">true</bool>
					<float name="LightInfluence">1</float>
					<float name="MaxDistance">0</float>
					<float name="PixelsPerStud">50</float>
					<token name="SizingMode">0</token>
					<float name="ToolPunchThroughDistance">0</float>
					<float name="ZOffset">0</float>
					<bool name="Active">true</bool>
					<Ref name="Adornee">RBX72A6EF53D4AD44329D33953E1FF67E24</Ref>
					<token name="Face">5</token>
					<bool name="Enabled">true</bool>
					<bool name="ResetOnSpawn">true</bool>
					<token name="ZIndexBehavior">1</token>
					<bool name="AutoLocalize">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">0bbdee1caba14a7f06e743250000d3e7</UniqueId>
					<string name="Name">SurfaceGui</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">13b43adec42fd73609019aa700000ecf</UniqueId>
				</Properties>
				<Item class="TextLabel" referent="RBX246A57F120754468AE368F0486531C73">
					<Properties>
						<Font name="FontFace">
							<Family><url>rbxasset://fonts/families/Inconsolata.json</url></Family>
							<Weight>400</Weight>
							<Style>Normal</Style>
						</Font>
						<float name="LineHeight">1</float>
						<string name="LocalizationMatchIdentifier"></string>
						<string name="LocalizationMatchedSourceText"></string>
						<int name="MaxVisibleGraphemes">-1</int>
						<string name="OpenTypeFeatures"></string>
						<bool name="RichText">false</bool>
						<string name="Text">&#226;&#157;&#151; /e animations is not implemented &#226;&#157;&#151;       (Only emotes)</string>
						<Color3 name="TextColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<token name="TextDirection">0</token>
						<bool name="TextScaled">true</bool>
						<float name="TextSize">14</float>
						<Color3 name="TextStrokeColor3">
							<R>0</R>
							<G>0</G>
							<B>0</B>
						</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<token name="TextTruncate">0</token>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Active">false</bool>
						<Vector2 name="AnchorPoint">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<token name="AutomaticSize">0</token>
						<Color3 name="BackgroundColor3">
							<R>1</R>
							<G>1</G>
							<B>1</B>
						</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">
							<R>0.105882362</R>
							<G>0.164705887</G>
							<B>0.207843155</B>
						</Color3>
						<token name="BorderMode">0</token>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<bool name="Interactable">true</bool>
						<int name="LayoutOrder">0</int>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<int name="SelectionOrder">0</int>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
						<bool name="AutoLocalize">true</bool>
						<Ref name="RootLocalizationTable">null</Ref>
						<token name="SelectionBehaviorDown">0</token>
						<token name="SelectionBehaviorLeft">0</token>
						<token name="SelectionBehaviorRight">0</token>
						<token name="SelectionBehaviorUp">0</token>
						<bool name="SelectionGroup">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">0bbdee1caba14a7f06e743250000d3e8</UniqueId>
						<string name="Name">TextLabel</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">13b43adec42fd73609019aa700000ed0</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="TimerService" referent="RBX4A4A015181AD472AA310A8B5B437E4C1">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000305</UniqueId>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX804BFA18F5F3447DBB52508C46CE33F6">
		<Properties>
			<bool name="AcousticSimulationEnabled">false</bool>
			<token name="AmbientReverb">0</token>
			<token name="AudioApiByDefault">0</token>
			<token name="AudioPlayerVolumeFix">0</token>
			<token name="CharacterSoundsUseNewApi">0</token>
			<token name="DefaultListenerLocation">0</token>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<bool name="IsNewExpForAudioApiByDefault">false</bool>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<token name="VolumetricAudio">1</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">SoundService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000002f1</UniqueId>
		</Properties>
	</Item>
	<Item class="VideoCaptureService" referent="RBX191374F270C44A2D822F2927A5CABBDA">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoCaptureService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000002fd</UniqueId>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX145C51F5E6C8421C8AC24DA04D39B7B7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000002fe</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX88C4BAF84A604C48B0976B35F93B263D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af21000002ff</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX32A83F9196CA4CBCBAFC1A8DCDD5DF4F">
		<Properties>
			<bool name="BubbleChatEnabled">true</bool>
			<bool name="IsAutoMigrated">true</bool>
			<bool name="LoadDefaultChat">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000304</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="RBXB9342C64AD574D1FBBA5C5408789D174">
		<Properties>
			<bool name="BanningEnabled">true</bool>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">60</int>
			<int name="PreferredPlayersInternal">60</int>
			<float name="RespawnTime">3</float>
			<bool name="UseStrafingAnimations">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Players</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000307</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBX034F350831014578955EC5408EEF9B0D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000030a</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX77884E84AD354F14965F7D5A1DDFFFA7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000030c</UniqueId>
		</Properties>
	</Item>
	<Item class="MaterialService" referent="RBXFC363005ECDC4927AFD3A086B1048C62">
		<Properties>
			<string name="AsphaltName">Asphalt</string>
			<string name="BasaltName">Basalt</string>
			<string name="BrickName">Brick</string>
			<string name="CardboardName">Cardboard</string>
			<string name="CarpetName">Carpet</string>
			<string name="CeramicTilesName">CeramicTiles</string>
			<string name="ClayRoofTilesName">ClayRoofTiles</string>
			<string name="CobblestoneName">Cobblestone</string>
			<string name="ConcreteName">Concrete</string>
			<string name="CorrodedMetalName">CorrodedMetal</string>
			<string name="CrackedLavaName">CrackedLava</string>
			<string name="DiamondPlateName">DiamondPlate</string>
			<string name="FabricName">Fabric</string>
			<string name="FoilName">Foil</string>
			<string name="GlacierName">Glacier</string>
			<string name="GraniteName">Granite</string>
			<string name="GrassName">Grass</string>
			<string name="GroundName">Ground</string>
			<string name="IceName">Ice</string>
			<string name="LeafyGrassName">LeafyGrass</string>
			<string name="LeatherName">Leather</string>
			<string name="LimestoneName">Limestone</string>
			<string name="MarbleName">Marble</string>
			<string name="MetalName">Metal</string>
			<string name="MudName">Mud</string>
			<string name="PavementName">Pavement</string>
			<string name="PebbleName">Pebble</string>
			<string name="PlasterName">Plaster</string>
			<string name="PlasticName">Plastic</string>
			<string name="RockName">Rock</string>
			<string name="RoofShinglesName">RoofShingles</string>
			<string name="RubberName">Rubber</string>
			<string name="SaltName">Salt</string>
			<string name="SandName">Sand</string>
			<string name="SandstoneName">Sandstone</string>
			<string name="SlateName">Slate</string>
			<string name="SmoothPlasticName">SmoothPlastic</string>
			<string name="SnowName">Snow</string>
			<bool name="Use2022MaterialsXml">true</bool>
			<string name="WoodName">Wood</string>
			<string name="WoodPlanksName">WoodPlanks</string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">MaterialService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000030d</UniqueId>
		</Properties>
	</Item>
	<Item class="TextChatService" referent="RBX88F94D4CE09A47D48B6FA9236745B45A">
		<Properties>
			<bool name="ChatTranslationFTUXShown">true</bool>
			<bool name="ChatTranslationToggleEnabled">false</bool>
			<token name="ChatVersion">1</token>
			<bool name="CreateDefaultCommands">true</bool>
			<bool name="CreateDefaultTextChannels">true</bool>
			<bool name="HasSeenDeprecationDialog">false</bool>
			<bool name="IsLegacyChatDisabled">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TextChatService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000030e</UniqueId>
		</Properties>
		<Item class="ChatWindowConfiguration" referent="RBXA9E3C81DAE1F4ABBA298862D58A7B3CD">
			<Properties>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2999999999999999889</double>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Medium.otf</url></CachedFaceId>
				</Font>
				<float name="HeightScale">1</float>
				<token name="HorizontalAlignment">1</token>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">18</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<token name="VerticalAlignment">1</token>
				<float name="WidthScale">1</float>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">ChatWindowConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000037d</UniqueId>
			</Properties>
		</Item>
		<Item class="ChatInputBarConfiguration" referent="RBX0B683F74838D476B99CBD66A65C1ECD9">
			<Properties>
				<bool name="AutocompleteEnabled">true</bool>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0.2000000000000000111</double>
				<bool name="Enabled">true</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Medium.otf</url></CachedFaceId>
				</Font>
				<token name="KeyboardKeyCode">47</token>
				<Color3 name="PlaceholderColor3">
					<R>0.698039234</R>
					<G>0.698039234</G>
					<B>0.698039234</B>
				</Color3>
				<Ref name="TargetTextChannel">null</Ref>
				<Color3 name="TextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<int64 name="TextSize">18</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">0.5</double>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">ChatInputBarConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000037e</UniqueId>
			</Properties>
		</Item>
		<Item class="BubbleChatConfiguration" referent="RBX339E8D8188EA46169276798058005CD8">
			<Properties>
				<string name="AdorneeName">HumanoidRootPart</string>
				<Color3 name="BackgroundColor3">
					<R>0.980392158</R>
					<G>0.980392158</G>
					<B>0.980392158</B>
				</Color3>
				<double name="BackgroundTransparency">0.10000000000000000555</double>
				<float name="BubbleDuration">15</float>
				<float name="BubblesSpacing">6</float>
				<bool name="Enabled">true</bool>
				<token name="Font">47</token>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>500</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Medium.otf</url></CachedFaceId>
				</Font>
				<Vector3 name="LocalPlayerStudsOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="MaxBubbles">3</float>
				<float name="MaxDistance">100</float>
				<float name="MinimizeDistance">40</float>
				<bool name="TailVisible">true</bool>
				<Color3 name="TextColor3">
					<R>0.223529413</R>
					<G>0.23137255</G>
					<B>0.239215687</B>
				</Color3>
				<int64 name="TextSize">20</int64>
				<float name="VerticalStudsOffset">0</float>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">BubbleChatConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000037f</UniqueId>
			</Properties>
			<Item class="UIGradient" referent="RBX0F15C530E71249CB84A006CE3EEAD427">
				<Properties>
					<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
					<bool name="Enabled">false</bool>
					<Vector2 name="Offset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="Rotation">0</float>
					<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UIGradient</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000380</UniqueId>
				</Properties>
			</Item>
			<Item class="ImageLabel" referent="RBX36A4FDD00D01412C9006B842F33AC971">
				<Properties>
					<Content name="Image"><null></null></Content>
					<Color3 name="ImageColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0</float>
					<token name="ResampleMode">0</token>
					<token name="ScaleType">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>0</X>
							<Y>0</Y>
						</min>
						<max>
							<X>0</X>
							<Y>0</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<bool name="Active">false</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">0</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0</XS>
						<XO>0</XO>
						<YS>0</YS>
						<YO>0</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<bool name="Selectable">false</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>100</YO>
					</UDim2>
					<token name="SizeConstraint">0</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
					<bool name="AutoLocalize">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">ImageLabel</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000381</UniqueId>
				</Properties>
			</Item>
			<Item class="UICorner" referent="RBX5A2B8C559F9A4C32820849319D7DF44A">
				<Properties>
					<UDim name="CornerRadius">
						<S>0</S>
						<O>12</O>
					</UDim>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UICorner</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000382</UniqueId>
				</Properties>
			</Item>
			<Item class="UIPadding" referent="RBX13B8897722954032A00F04D050321B2B">
				<Properties>
					<UDim name="PaddingBottom">
						<S>0</S>
						<O>8</O>
					</UDim>
					<UDim name="PaddingLeft">
						<S>0</S>
						<O>8</O>
					</UDim>
					<UDim name="PaddingRight">
						<S>0</S>
						<O>8</O>
					</UDim>
					<UDim name="PaddingTop">
						<S>0</S>
						<O>8</O>
					</UDim>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">UIPadding</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000383</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="ChannelTabsConfiguration" referent="RBXD48EB17A0B724AA98557B339D4E1C83F">
			<Properties>
				<Color3 name="BackgroundColor3">
					<R>0.0980392173</R>
					<G>0.105882354</G>
					<B>0.113725491</B>
				</Color3>
				<double name="BackgroundTransparency">0</double>
				<bool name="Enabled">false</bool>
				<Font name="FontFace">
					<Family><url>rbxasset://fonts/families/BuilderSans.json</url></Family>
					<Weight>700</Weight>
					<Style>Normal</Style>
					<CachedFaceId><url>rbxasset://fonts/BuilderSans-Bold.otf</url></CachedFaceId>
				</Font>
				<Color3 name="HoverBackgroundColor3">
					<R>0.490196079</R>
					<G>0.490196079</G>
					<B>0.490196079</B>
				</Color3>
				<Color3 name="SelectedTabTextColor3">
					<R>1</R>
					<G>1</G>
					<B>1</B>
				</Color3>
				<Color3 name="TextColor3">
					<R>0.686274529</R>
					<G>0.686274529</G>
					<B>0.686274529</B>
				</Color3>
				<int64 name="TextSize">18</int64>
				<Color3 name="TextStrokeColor3">
					<R>0</R>
					<G>0</G>
					<B>0</B>
				</Color3>
				<double name="TextStrokeTransparency">1</double>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">ChannelTabsConfiguration</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">7ec877fcf0d2412e075106b000004851</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="PermissionsService" referent="RBXB6346027C5674ECA92D8AA2E0FF32BDD">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">12f1de0cf81fe22e0901c5c600000c50</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX09EFDD54AFE044AD83595BC0FD2048F8">
		<Properties>
			<bool name="CustomPoliciesEnabled">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<bool name="PseudolocalizationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int name="TextElongationFactor">0</int>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PlayerEmulatorService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000311</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBX5A55E303B04C4E6FBEF769E53B8AB968">
		<Properties>
			<bool name="EnableScriptCollabByDefaultOnLoad">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000315</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX15DB2D56B3EA4641ABFC8CA9A88C68E2">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<bool name="AutoJumpEnabled">true</bool>
			<token name="AvatarJointUpgrade_SerializedRollout">0</token>
			<float name="CameraMaxZoomDistance">128</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">false</bool>
			<float name="CharacterWalkSpeed">16</float>
			<bool name="ClassicDeath">true</bool>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<token name="EnableDynamicHeads">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">2</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<token name="LuaCharacterController">0</token>
			<float name="NameDisplayDistance">100</float>
			<bool name="RagdollDeath">true</bool>
			<bool name="UserEmotesEnabled">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterPlayer</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000317</UniqueId>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX14E977713A134F17AF14FF7DBE9F8D39">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000375</UniqueId>
			</Properties>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX8E47922E4FA54105877A4B74E26B1EC1">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000376</UniqueId>
			</Properties>
			<Item class="LocalScript" referent="RBX50487F49AE144E848647E1CFD08899D3">
				<Properties>
					<ProtectedString name="Source"><![CDATA[--[[❗ Using BetterAnimate in StarterCharacterScripts or StarterPlayerScripts affects performance, please don`t do this in your project❗ 
In my case I did it for my own needs
]]


local Service_Players = game:GetService(`Players`)

local ModuleScript_BetterAnimate = script:WaitForChild(`BetterAnimate`)
--local DefaultAnimations = require(ModuleScript_BetterAnimate:WaitForChild(`BetterAnimate_DefaultAnimations`))
local BetterAnimate = require(ModuleScript_BetterAnimate)

local LocalPlayer = Service_Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:FindFirstChildWhichIsA(`Humanoid`) :: Humanoid
local PrimaryPart = Character.PrimaryPart or Character:GetPropertyChangedSignal(`PrimaryPart`):Wait()-- and Character.PrimaryPart
PrimaryPart = Character.PrimaryPart

local _PhysicalProperties = PrimaryPart.CurrentPhysicalProperties
local ClassesPreset = BetterAnimate.GetClassesPreset(Humanoid.RigType.Name)

local MyAnimator = BetterAnimate.New(Character)
	:SetInverseEnabled(true)
	:SetClassesPreset(ClassesPreset)
	:SetDebugEnabled(true)

MyAnimator.FastConfig.R6ClimbFix = true

do -- Events
	MyAnimator.Events.MarkerReached:Connect(function(Keyframe: string)
		--print(`Keyframe reached {Keyframe}`)
	end)
	
	MyAnimator.Events.NewMoveDirection:Connect(function(MoveDirection: Vector3, MoveDirectionName: BetterAnimate.BetterAnimate_Directions)
		if MoveDirection.Magnitude > 0 then
			MyAnimator:StopEmote()
		end
	end)
	
	MyAnimator.Events.NewAnimation:Connect(function(Class: string, Index: any, AnimationData: BetterAnimate.BetterAnimate_AnimationData)
		--print(`New animation {Index}`)
	end)
	
	MyAnimator.Events.NewState:Connect(function(State: string)
		--print(`New state {State}`)
	end)
end

do -- Tool
	
	MyAnimator.Trove:Add(Character.ChildAdded:Connect(function(Descendant)
		if Descendant:IsA(`Tool`) then
			MyAnimator:PlayToolAnimation()
		end

		BetterAnimate.FixCenterOfMass(_PhysicalProperties, PrimaryPart)
	end))

	MyAnimator.Trove:Add(Character.ChildRemoved:Connect(function(Descendant)
		if Descendant:IsA(`Tool`) then
			MyAnimator:StopToolAnimation()
		end

		BetterAnimate.FixCenterOfMass(_PhysicalProperties, PrimaryPart)
	end))
end


do -- Some test
	MyAnimator.Trove:Add(script:GetAttributeChangedSignal(`Debug`):Connect(function()
		MyAnimator:SetDebugEnabled(script:GetAttribute(`Debug`))
	end))

	MyAnimator.Trove:Add(script:GetAttributeChangedSignal(`Emote`):Connect(function()
		if script:GetAttribute(`Emote`) then
			MyAnimator:PlayEmote(MyAnimator._RigType == `R6` and 182436842 or 15609995579)
		else
			MyAnimator:StopEmote()
		end
	end))
end

do -- Animations logic
	Humanoid.Died:Once(function()
		MyAnimator:Destroy()
	end)
	
	local NextState = nil
	
	MyAnimator.Trove:Add(Humanoid.Jumping:Connect(function() -- Deffering, since we don't use Humanoid.StateChanged
		--print(`Jump`)
		--MyAnimator._Time.Jumped = tick()
		MyAnimator:SetForcedState(Enum.HumanoidStateType.Jumping.Name)
		--NextState = "Jumping"
		--MyAnimator:Step(0, "Jump")
	end))
	
	MyAnimator.Trove:Add(task.defer(function()
		while true do
			MyAnimator.FastConfig.MoveDirection = PrimaryPart.CFrame:VectorToObjectSpace(Humanoid.MoveDirection)
			MyAnimator:Step(task.wait(), Humanoid:GetState().Name)
			--print(BetterAnimate.GetMoveDirectionName(Humanoid.MoveDirection))
		end
	end))
end

do -- Roblox buildin PlayEmote
	local PlayEmote = script:FindFirstChild(`PlayEmote`)
	if PlayEmote and PlayEmote:IsA(`BindableFunction`) then
	
		PlayEmote.OnInvoke = function(Animation: string | Animation) --[You must to return true]]
			
			if typeof(Animation) == `Instance` then
				--print(Animation.AnimationId)
				return true, MyAnimator:PlayEmote(Animation)
			else -- string
				--Im bored, write your own method on how to get these animations
			end
		end
	end
end]]></ProtectedString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{C9E14C32-5862-4DA7-811A-2EAC7FF18F35}</string>
					<BinaryString name="AttributesSerialize">AgAAAAUAAABEZWJ1ZwMABQAAAEVtb3RlAwA=</BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Animate</string>
					<int64 name="SourceAssetId">16697831083</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca200005245</UniqueId>
				</Properties>
				<Item class="BindableFunction" referent="RBXB8707F3146664FE98722643E9C9260B9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">PlayEmote</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">59897120a6b8eba707565a0100005a2a</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX740500B34E8649989E8ADD52DBDA44DE">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<ProtectedString name="Source"><![CDATA[--!optimize 2

--[[
	Made by NOTEKAMI
	https://devforum.roblox.com/t/2871306	
	Version 1.3.1.3 [ NOTICE, I might forget sometimes to change the version numbers ]
	2025
]]

--Helpers
local Helpers_Folder = script:WaitForChild(`BetterAnimate_Helpers`)

local Trove = require(Helpers_Folder:WaitForChild(`Trove`)) -- Creating Trove for BetterAnimate
local Destroyer = require(Helpers_Folder:WaitForChild(`Destroyer`))
local Utils = require(Helpers_Folder:WaitForChild(`Utils`))
local Services = require(Helpers_Folder:WaitForChild(`Services`))
local Unlim_Bindable = require(Helpers_Folder:WaitForChild(`Unlim_Bindable`))
--

local LocalUtils = {}
local BetterAnimate = {}
local DefaultSettings = {} :: typeof(BetterAnimate) -- for typecasting

type([[📝 TYPES 📝]])
export type Trove = typeof(Trove)
export type Destroyer = typeof(Destroyer) --Destroyer
export type LocalUtils = typeof(LocalUtils)
export type Unlim_Bindable = Unlim_Bindable.Unlim_Bindable
export type Unlim_Bindable_Start = typeof(Unlim_Bindable)
export type BetterAnimate = typeof(BetterAnimate) --BetterAnimate
export type BetterAnimate_AnimationClasses = "Walk" | "Run" | "Swim" | "Swimidle" | "Jump" | "Fall" | "Climb" | "Sit" | "Idle" | "Emote" | "Temp" --| string
export type BetterAnimate_Directions = "ForwardRight" | "ForwardLeft" | "BackwardRight" | "BackwardLeft" | "Right" | "Left" | "Backward" | "Forward" | "Up" | "Down" | "None"
export type BetterAnimate_EventNames = "NewMoveDirection" | "NewState" | "NewAnimation" | "KeyframeReached" | "MarkerReached"
export type BetterAnimate_AnimationData = {
	ID: number | string?,
	Instance: Animation?,
	Weight: number?,
	Index: string?,
}

Trove = Trove:Extend()

--Settings
local PresetsTagIndex = `BetterAnimate_Presets`
local RNG = Random.new(os.clock())
local AnimationDataMeta = {}
--

do type([[ DEFAULT SETTINGS ]])
	
	do --FastConfig
		DefaultSettings.FastConfig = {}
		
		local FastConfig = DefaultSettings.FastConfig
		FastConfig.R6ClimbFix = true
		FastConfig.AnimationSpeedMultiplier = 1
		FastConfig.AnimationPlayTransition = 0.1
		FastConfig.AnimationStopTransition = 0.1
		FastConfig.ToolAnimationPlayTransition = 0.1
		FastConfig.ToolAnimationStopTransition = 0.1
		FastConfig.WaitFallOnJump = 0.31
		FastConfig.DefaultAnimationLength = 5
		FastConfig.DefaultAnimationWeight = 10
		FastConfig.AnimationPriority = Enum.AnimationPriority.Core
		FastConfig.ToolAnimationPriority = Enum.AnimationPriority.Action
		FastConfig.SetAnimationOnIdDifference = false
		FastConfig.AlwaysUseCurrentTransition = true
	end
	
	do -- _Time
		DefaultSettings._Time = {}
		
		local Time = DefaultSettings._Time
		Time.Debug = 0.06
	end
	
	do -- _State
		DefaultSettings._State = {}
		
		local State = DefaultSettings._State
		State.Functions = {

			[Enum.HumanoidStateType.Jumping.Name] = function(self: BetterAnimate)
				self._Time.Jumped = tick()
				self:PlayClassAnimation(`Jump`)
			end,

			[Enum.HumanoidStateType.Freefall.Name] = function(self: BetterAnimate)
				if self._Time.Jumped then 
					if tick() - self._Time.Jumped >= (self.FastConfig.WaitFallOnJump or 0) then
						self:PlayClassAnimation(`Fall`)
					end
				else
					self:PlayClassAnimation(`Fall`)
				end
			end,

			[Enum.HumanoidStateType.GettingUp.Name] = function(self: BetterAnimate) 
				self:StopClassAnimation()
			end,	

			[Enum.HumanoidStateType.FallingDown.Name] = function(self: BetterAnimate) 
				self:StopClassAnimation()
			end,	

			[Enum.HumanoidStateType.PlatformStanding.Name] = function(self: BetterAnimate)
				self:StopClassAnimation()
			end,

			[Enum.HumanoidStateType.Running.Name] = function(self: BetterAnimate)
				local XZ_Speed = (self._AssemblyLinearVelocity * Vector3.new(1, 0, 1)).Magnitude * (self._MoveDirection or Vector3.zero).Magnitude
				local SpeedRange = self._Class.SpeedRange
				
				if XZ_Speed > -math.huge and SpeedRange.Min >= XZ_Speed then
					self:PlayClassAnimation(`Idle`, 0.2)
				elseif XZ_Speed > SpeedRange.Min and SpeedRange.Max >= XZ_Speed then
					self:PlayClassAnimation(`Walk`, 0.2)
				elseif XZ_Speed > SpeedRange.Max and math.huge >= XZ_Speed then
					self:PlayClassAnimation(`Run`, 0.2)
				else
					warn(`Over 9000!!!! {XZ_Speed}`) -- you broke something
				end
			end,

			[Enum.HumanoidStateType.Seated.Name] = function(self: BetterAnimate)
				self:PlayClassAnimation(`Sit`, 0.3)
			end,

			[Enum.HumanoidStateType.Swimming.Name] = function(self: BetterAnimate)
				if self._Speed > 3 then self:PlayClassAnimation(`Swim`, 0.4) return end
				self:PlayClassAnimation(`Swimidle`, 0.4)
			end,

			[Enum.HumanoidStateType.Climbing.Name] = function(self: BetterAnimate)
				self:PlayClassAnimation(`Climb`, 0.2)
			end,

			[Enum.HumanoidStateType.None.Name] = function(self: BetterAnimate)
				self:PlayClassAnimation(`Temp`)
				--self.ForceState = false
			end,
		}
	end
	
	do -- _Class
		DefaultSettings._Class = {}
		
		local Class = DefaultSettings._Class
		
		Class.Inverse = {
			Walk = true,
			Run = true,
			Climb = true,
		}
		
		Class.Emotable = {
			Idle = true,
			Emote = true,
		}
		
		Class.AnimationSpeedAdjust = {
			Walk = 6,
			Run = 16,
			Climb = 6,
			Swim = 10,
		}
		
		Class.DirectionAdjust = {
			Swim = CFrame.Angles(math.rad(90), 0, 0),
		}
		
		Class.SpeedRange = NumberRange.new(0, 9)
		
		Class.Timer = {
			Idle = 0,
		}
		
		Class.TimerMax = {
			Idle = NumberRange.new(5, 8),
		}
		
		Class.Animations = {}
	end
	
	do -- _Inverse
		DefaultSettings._Inverse = {}
		
		local Inverse = DefaultSettings._Inverse
		
		Inverse.Enabled = true
		
		Inverse.Directions = {
			BackwardRight = true, 
			BackwardLeft = true, 
			Backward = true,
			Down = true
		}
	end
	
	do -- _Animation
		DefaultSettings._Animation = {}
		
		local Animation = DefaultSettings._Animation
		
		Animation.Markers = {}
	end
	
	do -- _Events_Enabled
		DefaultSettings._Events_Enabled = {
			NewMoveDirection = true,
			NewState = true,
			NewAnimation = true,
			KeyframeReached = true,
		}
	end
end

do type([[ LOCAL UTILS ]])
	
	--[[
		Looking for ClassesPreset in modules (that have tag `BetterAnimate_Presets`)
		
		@return Module[Index]
	]]
	function LocalUtils.GetClassesPreset(Index: any): ({ [BetterAnimate_AnimationClasses]: { [any]: BetterAnimate_AnimationData | string | number | Animation } }?)
		for _, ModuleScript in Services.CollectionService:GetTagged(PresetsTagIndex) do
			--print(ModuleScript)
			if ModuleScript:IsA(`ModuleScript`) then
				local Module = require(ModuleScript)

				if Module[Index] then
					return Module[Index]
				end
			end
		end
		
		return
	end
	
	--[[
		Return name of MoveDirection (ForwardRight, ForwardLeft, etc...)
	]]
	function LocalUtils.GetMoveDirectionName(MoveDirection: Vector3): BetterAnimate_Directions
		MoveDirection = Utils.Vector3Round(MoveDirection)
		return (MoveDirection.Z < 0 and MoveDirection.X > 0 and `ForwardRight`)
			or (MoveDirection.Z < 0 and MoveDirection.X < 0 and `ForwardLeft`)
			or (MoveDirection.Z < 0 and MoveDirection.X == 0 and `Forward`)
			or (MoveDirection.Z > 0 and MoveDirection.X == 0 and `Backward`)
			or (MoveDirection.Z > 0 and MoveDirection.X > 0 and `BackwardRight`)
			or (MoveDirection.Z > 0 and MoveDirection.X < 0 and `BackwardLeft`)
			or (MoveDirection.Z == 0 and MoveDirection.X > 0 and `Right`)
			or (MoveDirection.Z == 0 and MoveDirection.X < 0 and `Left`)
			or (MoveDirection.Y > 0 and `Up`)
			or (MoveDirection.Y < 0 and `Down`)
			or `None`
	end
	
	--[[ 
		If NumberRange it will return random value from range else number you gave
		@return number
	]]
	function LocalUtils.GetTime(Time: number | NumberRange): number
		return typeof(Time) == "NumberRange" and RNG:NextNumber(Time.Min, Time.Max) or Time
	end
	
	--[[
		Used to generate animation data	
	]]
	function LocalUtils.GetAnimationData(AnimationData: BetterAnimate_AnimationData | number | string | Instance, DefaultWeight: number?): BetterAnimate_AnimationData
		local Type = typeof(AnimationData)
		DefaultWeight = DefaultWeight or 1
		
		if Type == `table` then
			if getmetatable(AnimationData :: any) ~= AnimationDataMeta then
				local AnimationData = setmetatable(Utils.DeepCopy(AnimationData) :: BetterAnimate_AnimationData, AnimationDataMeta)
				local AnimationLink = `rbxassetid://{string.gsub(`{AnimationData.ID or (AnimationData.Instance and AnimationData.Instance.AnimationId) or ``}`, "%D", "")}`
				local Animation = Instance.new(`Animation`)
				Animation.Name = `{script}_AnimationFromTable_{math.random()}`
				Animation.AnimationId = AnimationLink
				--Animation.Parent = game:GetService(`Lighting`) -- Testing
				AnimationData.ID = AnimationLink
				AnimationData.Weight = AnimationData.Weight or DefaultWeight
				AnimationData.Instance = Animation
				return AnimationData
			else
				return AnimationData :: BetterAnimate_AnimationData
			end
			
		elseif Type == `number` then
			local AnimationLink = `rbxassetid://{AnimationData :: number}`
			local AnimationData = setmetatable({} :: BetterAnimate_AnimationData, AnimationDataMeta)
			local Animation = Instance.new(`Animation`)
			Animation.Name = `{script}_AnimationFromNumber_{math.random()}`
			Animation.AnimationId = AnimationLink
			--Animation.Parent = game:GetService(`Lighting`) -- Testing
			AnimationData.ID = AnimationLink
			AnimationData.Weight = DefaultWeight
			AnimationData.Instance = Animation
			return AnimationData
			
		elseif Type == `string` then
			local AnimationLink = `rbxassetid://{string.gsub(`{AnimationData :: string}`, "%D", "")}`
			local AnimationData = setmetatable({} :: BetterAnimate_AnimationData, AnimationDataMeta)
			local Animation = Instance.new(`Animation`)
			Animation.Name = `{script}_AnimationFromString_{math.random()}`
			Animation.AnimationId = AnimationLink
			--Animation.Parent = game:GetService(`Lighting`) -- Testing
			AnimationData.ID = AnimationLink
			AnimationData.Weight = DefaultWeight
			AnimationData.Instance = Animation
			return AnimationData
			
		elseif Type == `Instance` and (AnimationData :: Instance):IsA(`Animation`) then
			local AnimationLink = `rbxassetid://{string.gsub(`{(AnimationData :: Animation).AnimationId}`, "%D", "")}`
			local AnimationData = setmetatable({} :: BetterAnimate_AnimationData, AnimationDataMeta)
			local Animation = Instance.new(`Animation`)
			Animation.Name = `{script}_AnimationFromInstance_{math.random()}`
			Animation.AnimationId = AnimationLink
			--Animation.Parent = game:GetService(`Lighting`) -- Testing
			AnimationData.ID = AnimationLink
			AnimationData.Weight = DefaultWeight
			AnimationData.Instance = Animation
			return AnimationData
			
		else
			error(`[{script}] table or number or string or Instance expected, got {Type}`)
		end
	end
	
	--[[
		Fix center of mass (strange physics) for character	
	]]
	function LocalUtils.FixCenterOfMass(_PhysicalProperties: PhysicalProperties, Part: BasePart): ()
		Part.CustomPhysicalProperties = PhysicalProperties.new(
			_PhysicalProperties.Density - 0.01,
			_PhysicalProperties.Friction,
			_PhysicalProperties.Elasticity,
			_PhysicalProperties.FrictionWeight,
			_PhysicalProperties.ElasticityWeight
		)

		task.wait() -- Don't work without it

		Part.CustomPhysicalProperties = _PhysicalProperties
	end
	
	LocalUtils.SimpleStateWrapper = DefaultSettings.SimpleStateWrapper
end

do type([[ BETTERANIMATE ]])
	
	do type([[ FAKE TYPE CASTING ]])
		BetterAnimate.__index = BetterAnimate
		BetterAnimate.Trove = nil :: Trove -- If you want to attach something

		BetterAnimate.Events = nil :: {
			--[[Hiiii]]
			NewMoveDirection: Unlim_Bindable,
			NewState: Unlim_Bindable,
			NewAnimation: Unlim_Bindable,

			--[[KeyframeReached == MarkerReached]]
			KeyframeReached: Unlim_Bindable,
			MarkerReached: Unlim_Bindable,

			--[BetterAnimate_EventNames]: Unlim_Bindable,
		}

		BetterAnimate.FastConfig = nil :: { -- Like FFlag to fix something
			R6ClimbFix: boolean, -- For R6
			WaitFallOnJump: number,
			DefaultAnimationLength: number,
			DefaultAnimationWeight: number,	
			AnimationSpeedMultiplier: number,
			AnimationPlayTransition: number,
			AnimationStopTransition: number,
			AnimationPriority: Enum.AnimationPriority,
			ToolAnimationPlayTransition: number,
			ToolAnimationStopTransition: number,
			ToolAnimationPriority: Enum.AnimationPriority,
			MoveDirection: Vector3?,
			SetAnimationOnIdDifference: boolean?,
			AssemblyLinearVelocity: Vector3?, -- Moving speed
			AlwaysUseCurrentTransition: boolean?,
		}
		
		BetterAnimate._Speed = nil :: number
		BetterAnimate._AssemblyLinearVelocity = nil :: Vector3
		BetterAnimate._MoveDirection = nil :: Vector3
		BetterAnimate._PrimaryPart = nil :: BasePart
		BetterAnimate._Animator = nil :: AnimationController | Humanoid
		BetterAnimate._RigType = nil :: "R6" | "R15" | "Custom" --Enum.HumanoidRigType

		BetterAnimate._Time = nil :: {
			Debug: number,
			Jumped: number,
		}

		BetterAnimate._State = nil :: {
			Forced: string?,
			Current: string,

			Functions: {
				[string]: (BetterAnimate, State: string)-> ()
			}
		}

		BetterAnimate._Trove = nil :: {
			Main: Trove,
			Debug: Trove,
			Animation: Trove,
			Emote: Trove,
			Tool: Trove,
		}

		BetterAnimate._Events_Enabled = nil :: {
			[BetterAnimate_EventNames]: boolean,
		}

		BetterAnimate._Class = nil :: {
			Current: string?,
			Inverse:  { [BetterAnimate_AnimationClasses]: boolean },
			Emotable: { [BetterAnimate_AnimationClasses]: boolean },
			AnimationSpeedAdjust: { [BetterAnimate_AnimationClasses]: number },
			DirectionAdjust: { [BetterAnimate_AnimationClasses]: CFrame },
			--SwitchIgnore: { [BetterAnimate_AnimationClasses]: boolean },
			TimerMax: { [BetterAnimate_AnimationClasses]: number | NumberRange },
			Timer: { [BetterAnimate_AnimationClasses]: number | NumberRange },
			SpeedRange: NumberRange,
			Animations: { [BetterAnimate_AnimationClasses]: { [any]: BetterAnimate_AnimationData } }
		}

		BetterAnimate._Inverse = nil :: {
			Current: boolean,
			Enabled: boolean,
			Directions: { [BetterAnimate_Directions]: boolean}
		}

		BetterAnimate._Animation = nil :: {
			Current: Animation?,
			CurrentTrack: AnimationTrack?,
			CurrentIndex: any?,
			CurrentSpeed: number?,
			DefaultLength: number,
			DefaultWeight: number,
			ToolPriority: Enum.AnimationPriority,
			Priority: Enum.AnimationPriority,
			KeyframeFunction: ()-> (),
			Emoting: boolean?,
			Markers: {[string]: boolean},
		}
	end
	
	do type([[ PUBLIC METHODS ]])
		
		do type([[ GET METHODS ]])
			
			--[[
				[❗Deprecated❗], use :GetLocalMoveDirection() instead
				GetMoveDirection ¯\_(ツ)_/¯
			]]
			@deprecated function BetterAnimate.GetMoveDirection(self: BetterAnimate): Vector3
				return self:GetLocalMoveDirection()
			end
			
			--[[
				GetLocalMoveDirection
				For example: PrimaryPart.CFrame:VectorToObjectSpace(Humanoid.MoveDirection)
			]]
			function BetterAnimate.GetLocalMoveDirection(self: BetterAnimate): Vector3
				local PrimaryPart = self._PrimaryPart
				local MoveDirection = self.FastConfig.MoveDirection
					or
					(PrimaryPart.CFrame * (self._Class.DirectionAdjust[self._Class.Current] or CFrame.identity)):VectorToObjectSpace(PrimaryPart.AssemblyLinearVelocity)
				return --Utils.Vector3Round(
					Utils.IsNaN(MoveDirection.Unit) and Vector3.zero or MoveDirection.Unit
				--)
			end
			
			--[[
				Return Vector3 MoveDirection in Global space
			]]
			function BetterAnimate.GetGlobalMoveDirection(self: BetterAnimate): Vector3
				local PrimaryPart = self._PrimaryPart
				local MoveDirection = self.FastConfig.MoveDirection or self._PrimaryPart.AssemblyLinearVelocity
				return Utils.IsNaN(MoveDirection.Unit) and Vector3.zero or MoveDirection.Unit
			end
			
			--[[
				[❗Deprecated❗], use :IsInverse() instead
				Used to get number for Animation speed (1 or -1)
			]]
			@deprecated function BetterAnimate.GetInverse(self: BetterAnimate): number
				local MoveDirection = self:GetMoveDirection()
				local MoveDirectionName = LocalUtils.GetMoveDirectionName(Utils.Vector3Round(MoveDirection))
				--if self._MoveDirection ~= MoveDirection and self._Events_Enabled["NewMoveDirection"] then
				--	local Event = self.Events["NewMoveDirection"]
				--	Event:Fires(MoveDirection, MoveDirectionName)
				--end
				
				--self._MoveDirection = MoveDirection

				return self._Inverse.Enabled 
					and self._Inverse.Directions[MoveDirectionName] 
					and self._Class.Inverse[self._Class.Current] 
					and -1 
					or 1
			end
			
			function BetterAnimate.IsInverse(self: BetterAnimate): number
				return self._Inverse.Current == true
			end
			
			--[[
				GetRandomClassAnimation ¯\_(ツ)_/¯
			]]
			function BetterAnimate.GetRandomClassAnimation(self: BetterAnimate, Class: BetterAnimate_AnimationClasses): (BetterAnimate_AnimationData?, any?)
				local ClassAnimations = self._Class.Animations[Class]
				local TotalWeight = 0
				
				--print(Class, ClassAnimations)
				
				if ClassAnimations then
					
					for _, Table in ClassAnimations do
						TotalWeight += (Table.Weight or 0)
					end
					
				else
					warn(`[{script}] ClassAnimations of {Class} not found`)
				end
				
				if TotalWeight == 0 then
					ClassAnimations = self._Class.Animations["Temp"]

					for _, Table in (ClassAnimations or {}) do
						TotalWeight += (Table.Weight or 0)
					end
					
					if TotalWeight == 0 then
						return
					end
					--Utils.Assert(TotalWeight ~= 0, `[{script}] Temp animation is empty`) -- Temp must have animation and weight
				end
				
				local RandomWeight = RNG:NextNumber(1, TotalWeight)
				local Weight, Index = 0, 1
				
				for I, Table in ClassAnimations do
					Weight += (Table.Weight or 0)
					
					if RandomWeight <= Weight then
						Index = I
						break
					end
				end

				return ClassAnimations[Index], Index
			end
		end


		do type([[ SET METHODS ]])
			
			--[[ Enable debug ]]
			function BetterAnimate.SetDebugEnabled(self: BetterAnimate, Enabled: boolean?): BetterAnimate

				self._Trove.Debug:Clear(true)

				if Enabled then
					local PrimaryPart = self._PrimaryPart
					local Character = PrimaryPart.Parent :: Model
					print(`[{script}] Debug enabled for {PrimaryPart.Parent}`)

					local _, Size = Character:GetBoundingBox()

					local DebugBillboard = self._Trove.Debug:Clone(script.BetterAnimate_Debug)
					DebugBillboard.StudsOffset = Vector3.new(0, Size.Y / 2 + 1.5, 0)
					DebugBillboard.Enabled = true
					DebugBillboard.Parent = PrimaryPart

					local Main = DebugBillboard:FindFirstChild(`Main`)
					local Class = Main:FindFirstChild("Class")
					local Direction = Main:FindFirstChild("Direction")
					local ID = Main:FindFirstChild("ID")
					local Timer = Main:FindFirstChild("Timer")
					local Total = Main:FindFirstChild("Total")
					local Speed = Main:FindFirstChild("Speed")
					local State = Main:FindFirstChild("State")
					local AnimationSpeed = Main:FindFirstChild(`AnimationSpeed`)

					self._Trove.Debug:Add(task.defer(function()

						while task.wait(self._Time.Debug) do

							local ClassCurrent = self._Class.Current
							local AnimationTracks = #self._Animator:GetPlayingAnimationTracks()
							local MoveDirection = self._MoveDirection or Vector3.zero
							
							Class.Text = `Class: {ClassCurrent}`
							Direction.Text = `Direction: {Utils.MaxDecimal(MoveDirection.X, 1)}, {Utils.MaxDecimal(MoveDirection.Y, 1)}, {Utils.MaxDecimal(MoveDirection.Z, 1)},`
							ID.Text = `ID: {self._Animation.CurrentTrack and string.gsub(self._Animation.CurrentTrack.Animation.AnimationId, "%D", "") or nil}`
							Timer.Text = `Timer: {Utils.MaxDecimal(self._Class.Timer[ClassCurrent] or 0, 2)}`
							Total.Text = `Total: {AnimationTracks}`
							Speed.Text = `Speed: {Utils.MaxDecimal(self._Speed or 0, 2)}`
							State.Text = `State: {self._State.Current}`
							AnimationSpeed.Text = `AnimSpeed: {Utils.MaxDecimal(self._Animation.CurrentSpeed or 0, 2)}`
						end
					end))
				end

				return self
			end
			
			--[[
				Force State for one :Step()
				:SetForcedState("Jump")-> Play jump state function
			]]
			function BetterAnimate.SetForcedState(self: BetterAnimate, State: string): BetterAnimate

				local ForcedState

				repeat
					ForcedState = `{State}{RNG:NextInteger(1, 999999999999)}`
				until self._State.Forced ~= ForcedState

				self._State.Forced = ForcedState
				
				return self
			end
			
			--[[
				Override current Preset animationes with new one

				:SetClassesPreset{
					Walk = {Walk1 = 123456},
					Run = {Run1 = 123456},
					...
				}
			]]
			function BetterAnimate.SetClassesPreset(self: BetterAnimate, Preset: {
					[BetterAnimate_AnimationClasses]: {
						[any]: BetterAnimate_AnimationData | string | number | Instance
					}
				}): BetterAnimate
				
				Utils.Assert(type(Preset) == `table`, `[{script}] Table expected, got {typeof(Preset)}`)
				
				for Class, ClassPreset in Preset do
					self:SetClassPreset(Class, ClassPreset)
				end
				
				return self
			end

			--[[
				Override current Preset animationes with new one

				:SetClassPreset{"Walk", {Walk1 = 123456})
			]]
			function BetterAnimate.SetClassPreset(self: BetterAnimate, Class: BetterAnimate_AnimationClasses, ClassPreset: {
					[any]: BetterAnimate_AnimationData | string | number | Instance
				}): BetterAnimate
				
				Utils.Assert(type(ClassPreset) == `table`, `[{script}] Table expected, got {typeof(ClassPreset)}`)
				
				local ClassAnimations = self._Class.Animations[Class]
				if ClassAnimations then
					
					for I, AnimationData in ClassAnimations do
						self._Trove.Main:Remove(AnimationData.Instance, true)
						setmetatable(AnimationData, nil)
						ClassAnimations[I] = nil
					end
				end

				for I, AnimationData in ClassPreset do
					self:AddAnimation(Class, I, AnimationData)
				end
				
				return self
			end
			
			--[[
				Enable/Disable events from firing
			]]
			function BetterAnimate.SetEventEnabled(self: BetterAnimate, Name: BetterAnimate_EventNames, Enabled: boolean?): BetterAnimate
				self._Events_Enabled[Name] = Enabled == true

				return self
			end
			
			--[[
				Enable Inverse animations (Run, Walk, Climb, ...)
			]]
			function BetterAnimate.SetInverseEnabled(self: BetterAnimate, Enabled: boolean?): BetterAnimate
				self._Inverse.Enabled = Enabled == true
				
				return self
			end
			
			--[[
				Sets timer for how much AnimationTrack will play
				Example:
				(IdleTime = 7 IdleIndex = "Idle1") -> (IdleTime = 0 IdleIndex = "Idle1") -> (IdleTime = 7 IdleIndex = "Idle2")
				
			]]
			function BetterAnimate.SetClassTimer(self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Timer: number): BetterAnimate
				Utils.Assert(type(Timer) == `number`, `[{script}] number expected, got {Timer}`)
				self._Class.TimerMax[Class] = Timer

				return self
			end
			
			--[[
				Sets max timer for how much AnimationTrack will play
				Example:
				MaxTime = 4
				(IdleTime = 4) -> (IdleTime = 0) -> (IdleTime = 4)
				
				MaxTime = 6
				(IdleTime = 6) -> (IdleTime = 0) -> (IdleTime = 6)
				
				MaxTime = NumberRange.new(2, 5)
				(IdleTime = RNG:NextNumber(MaxTime.Min, MaxTime.Max)) -> (IdleTime = 0) -> (IdleTime = RNG:NextNumber(MaxTime.Min, MaxTime.Max))
			]]
			function BetterAnimate.SetClassMaxTimer(self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Timer: NumberRange | number?): BetterAnimate
				local Type = typeof(Timer)
				Utils.Assert(Type == `number` or Type == `NumberRange` or Timer == nil, `[{script}] NumberRange or number or nil expected, got {Timer}`)
				self._Class.TimerMax[Class] = Timer
				
				return self
			end
			
			--[[
				Set when Emotes (Emote class) can be played
				
				:SetClassEmotable("Idle", true) --> :PlayEmote(12345) will play Emote
				:SetClassEmotable("Idle", false) --> :PlayEmote(12345) will not play Emote
			]]
			function BetterAnimate.SetClassEmotable(self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Emotable: boolean?): BetterAnimate
				self._Class.Emotable[Class] = Emotable == true
				
				return self
			end
			
			--[[
				Usually used to adjust speed for Classes like Run, Walk, Climb
				
				Adjust / MovingSpeed = AnimationSpeed
			]]
			function BetterAnimate.SetClassAnimationSpeedAdjust(self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Adjust: number): BetterAnimate
				Utils.Assert(type(Adjust), `[{script}] number expected, got {Adjust}`)
				self._Class.AnimationSpeedAdjust[Class] = Adjust
				
				return self
			end
			
			--[[
				Вeterminate when :GetInverse() will return -1
			]]
			function BetterAnimate.SetInverseDirection(self: BetterAnimate, Direction: BetterAnimate_Directions, Inverse: boolean?): BetterAnimate
				self._Inverse.Directions[Direction] = Inverse == true
				
				return self
			end
			
			--[[
				Class that supports inverse mechanic
				Run, Walk, Climb, etc
			]]
			function BetterAnimate.SetClassInverse(self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Inverse: boolean?): BetterAnimate
				self._Class.Inverse[Class] = Inverse == true
				
				return self
			end
			
			--[[
				local Range = NumberRange.new(0, 9)
				
				Idle: Speed > -math.huge and Speed <= Range.Min (0)
				Walk: Speed > Range.Min (0) and Speed <= Range.Max (9)
				Run: Speed > Range.Max (9) and Speed <= math.huge
			]]
			function BetterAnimate.SetRunningStateRange(self: BetterAnimate, Range: NumberRange): BetterAnimate
				Utils.Assert(typeof(Range) == `NumberRange`, `[{script}] NumberRange expected, got {Range}`)
				self._Class.SpeedRange = Range
				
				return self
			end
			
			--[[
				Override State function (logic for State animations) with your own
			]]
			function BetterAnimate.SetStateFunction(self: BetterAnimate, State: string, Function: (BetterAnimate_AnimationData, State: string)-> ()): BetterAnimate
				Utils.Assert(type(Function) == `function`, `[{script}] function expected, got {Function}`)
				self._State.Functions[State] = Function
				
				return self
			end
		end

		do type([[ ETC METHODS ]])
			--[[
				Сomplicated function, ❗i don't recommend using it if you don't know how it works❗.
				Use :SetClassesPreset() or :SetClassPreset() instead
				
				This function is used to add/override/remove animation
			]]
			function BetterAnimate.AddAnimation(self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Index: any?, AnimationData: BetterAnimate_AnimationData | string | number | Animation)

				local ClassAnimations = self._Class.Animations[Class]
				if not ClassAnimations then
					ClassAnimations = {}
					self._Class.Animations[Class] = ClassAnimations
				end

				if AnimationData then
					local AnimationData = LocalUtils.GetAnimationData(AnimationData, self.FastConfig.DefaultAnimationWeight) :: BetterAnimate_AnimationData
					local Index = Index or AnimationData.Index or Utils.GetUnique()

					self._Trove.Main:Add(AnimationData.Instance, function() setmetatable(AnimationData, nil) end)

					if ClassAnimations[Index] then
						self._Trove.Main:Remove(ClassAnimations[Index].Instance, true)
					end

					if AnimationData.ID ~= `rbxassetid://` and AnimationData.ID ~= `rbxassetid://0` then

						ClassAnimations[Index] = AnimationData

						if Index == self._Animation.CurrentIndex 
							or (Class == self._Class.Current and Utils.GetTableLength(ClassAnimations) == 0)
						then
							if self._Class.Timer[Class] then
								self._Class.Timer[Class] = 0
							end

							self:PlayClassAnimation(Class)
						end
					else
						ClassAnimations[Index] = nil
					end

					return Index
				elseif Index then
					ClassAnimations[Index] = nil
				else
					warn(`[{script}] AnimationData or Index expected, got`, Index, AnimationData)
				end

				return self
			end
			
			--[[
				PlayToolAnimation ¯\_(ツ)_/¯
			]]
			function BetterAnimate.PlayToolAnimation(self: BetterAnimate, AnimationData: BetterAnimate_AnimationData | string | number | Animation)
				self:StopToolAnimation()
				
				local AnimationData = AnimationData and LocalUtils.GetAnimationData(AnimationData, self.FastConfig.DefaultAnimationWeight) or self:GetRandomClassAnimation(`Toolnone`)
				local AnimationInstance = AnimationData.Instance
				local AnimationTrack = self._Animator:LoadAnimation(AnimationInstance) :: AnimationTrack --AnimationTable.AnimationTrack
				
				AnimationTrack.Priority = self.FastConfig.ToolAnimationPriority
				
				self._Trove.Tool:Add(AnimationInstance)
				--self._Trove.Tool:Add(AnimationTrack.Ended:Connect(self._Animation.KeyframeFunction))
				self._Trove.Tool:Add(AnimationTrack.KeyframeReached:Connect(self._Animation.KeyframeFunction)) -- Roblox Deprecated this (bruh), but it works
				
				do -- Markers
					for Marker in self._Animation.Markers do
						self._Trove.Tool:Add(AnimationTrack:GetMarkerReachedSignal(Marker):Connect(function(...)
							self._Animation.KeyframeFunction(Marker, ...)
						end))
					end
				end
				
				self._Trove.Tool:Add(function(ToolAnimationStopTransition) AnimationTrack:Stop(self.FastConfig.AlwaysUseCurrentTransition and self.FastConfig.ToolAnimationStopTransition or ToolAnimationStopTransition) end, self.FastConfig.ToolAnimationStopTransition)
				AnimationTrack:Play(self.FastConfig.ToolAnimationPlayTransition)
			end
			
			--[[
				[❗DEPRECATED❗], use :SetMarkerCheckEnabled() instead
				Add marker check for AnimationTrack
				AnimationTrack:GetMarkerReachedSignal(Marker)
			]]
			@deprecated function BetterAnimate.SetMarker(self: BetterAnimate, Marker: string, Enabled: boolean?): BetterAnimate
				return self:SetMarkerCheckEnabled(Marker, Enabled)
			end
			
			--[[
				Add marker check for AnimationTrack
				AnimationTrack:GetMarkerReachedSignal(Marker)
			]]
			function BetterAnimate.SetMarkerCheckEnabled(self: BetterAnimate, Marker: string, Enabled: boolean?): BetterAnimate
				Utils.Assert(type(Marker) == `string`, `[{script}] string expected, got {typeof(Marker)}`)
				self._Animation.Markers[Marker] = Enabled == true or nil

				return self
			end
			
			--[[
				StopToolAnimation ¯\_(ツ)_/¯
			]]
			function BetterAnimate.StopToolAnimation(self: BetterAnimate)
				self._Trove.Tool:Clear(true)
			end
			
			--[[
				PlayEmote ¯\_(ツ)_/¯
			]]
			function BetterAnimate.PlayEmote(self: BetterAnimate, AnimationData: BetterAnimate_AnimationData | string | number | Animation, TransitionTime: number?)
				self:StopEmote()

				local CurrentClass = self._Class.Current
				if self._Class.Emotable[CurrentClass] then
					self._Animation.Emoting = true
					
					local AnimationData = LocalUtils.GetAnimationData(AnimationData, self.FastConfig.DefaultAnimationWeight)
					local _, AnimationTrack, AnimationLenght = self:_SetAnimation(`Emote`, TransitionTime, AnimationData)
					self._Trove.Emote:Add(AnimationTrack.Ended:Connect(function()
						self:StopEmote()
					end))
					
					self._Trove.Emote:Add(AnimationData.Instance, function(AnimationStopTransition) 
						AnimationTrack:Stop(self.FastConfig.AlwaysUseCurrentTransition and self.FastConfig.AnimationStopTransition or AnimationStopTransition)
						--self:PlayClassAnimation(self._Class.Current)
						setmetatable(AnimationData, nil)
					end, self.FastConfig.AnimationStopTransition)
					
					return AnimationLenght
				end
			end
			
			--[[
				StopEmote ¯\_(ツ)_/¯
			]]
			function BetterAnimate.StopEmote(self: BetterAnimate)
				self._Animation.Emoting = false
				self._Trove.Emote:Clear(true)
			end
			
			--[[
				Play random Class animation
			]]
			function BetterAnimate.PlayClassAnimation(self: BetterAnimate, Class: BetterAnimate_AnimationClasses, TransitionTime: number?)

				local ClassTimerMax = self._Class.TimerMax
				local ClassTimer = self._Class.Timer
				local OldClass = self._Class.Current
				
				if not self._Animation.Emoting then
					
					if ClassTimerMax[Class] then

						if ClassTimer[Class] then
							if ClassTimer[Class] <= 0 or OldClass ~= Class then
								ClassTimer[Class] = LocalUtils.GetTime(ClassTimerMax[Class])
								return self:_SetAnimation(Class, TransitionTime, self:GetRandomClassAnimation(Class))
							--else
							--	local CurrentTrack = self._Animation.CurrentTrack
							--	return CurrentTrack and CurrentTrack.Length > 0 and CurrentTrack.Length or self._Animation.DefaultLength
							end
						else
							ClassTimer[Class] = LocalUtils.GetTime(ClassTimerMax[Class])
							return self:_SetAnimation(Class, TransitionTime, self:GetRandomClassAnimation(Class))
						end
					else
						return self:_SetAnimation(Class, TransitionTime, self:GetRandomClassAnimation(Class))
					end
				end
			end
			
			--[[
				Stop current class animation
			]]
			function BetterAnimate.StopClassAnimation(self: BetterAnimate): ()
				self._Trove.Animation:Clear(true)
			end
			
			--[[
				Step calculations
			]]
			function BetterAnimate.Step(self: BetterAnimate, Dt: number, StateNew: BetterAnimate_AnimationClasses): ()

				do -- Streaming & Died check
					if not self._PrimaryPart
						or not self._PrimaryPart:IsDescendantOf(game)-- self._PrimaryPart.Parent
						or not self._Animator
						or not self._Animator:IsDescendantOf(game)
						or not getmetatable(self.Trove)
					then
						return
					end
				end
				
				debug.profilebegin(`{script}_{debug.info(1, `n`)}`)

				local StateForced = self._State.Forced and string.gsub(self._State.Forced, "%d", "") or nil
				local StateOld = self._State.Current
				StateNew = StateForced or StateNew

				do -- New state event
					if StateNew ~= StateOld and self._Events_Enabled["NewState"] then
						local Event = self.Events["NewState"]
						Event:Fires(StateNew)
						self._State.Current = StateNew
					end
				end

				do -- Forced state update
					if StateForced 
						and StateNew == StateForced
						and StateForced == string.gsub(self._State.Forced, "%d", "")
					then
						self._State.Forced = nil
					end
				end

				do -- Update classes timer
					local Timer = self._Class.Timer
					for I in Timer do
						Timer[I] -= Dt
					end
				end
				
				do -- Moving speed
					local AssemblyLinearVelocity = self.FastConfig.AssemblyLinearVelocity or self._PrimaryPart.AssemblyLinearVelocity
					self._AssemblyLinearVelocity = AssemblyLinearVelocity
					self._Speed = Utils.MaxDecimal(AssemblyLinearVelocity.Magnitude, 1)
				end
				
				do -- State function
					local StateFunction = self._State.Functions[StateNew]
					if StateFunction then
						StateFunction(self, StateNew)
					end	
				end
				
				do -- Speed of animation
					local CurrentTrack = self._Animation.CurrentTrack
					local CurrentClass = self._Class.Current
					if CurrentTrack then
						
						local Inverse do --Inverse logic
							local MoveDirection = self:GetLocalMoveDirection()
							local MoveDirectionName = LocalUtils.GetMoveDirectionName(MoveDirection)
							if self._MoveDirection ~= MoveDirection and self._Events_Enabled["NewMoveDirection"] then
								local Event = self.Events["NewMoveDirection"]
								Event:Fires(MoveDirection, MoveDirectionName)
							end

							self._MoveDirection = MoveDirection

							Inverse = self._Inverse.Enabled 
								and self._Inverse.Directions[MoveDirectionName] 
								and self._Class.Inverse[self._Class.Current] 
								and -1 
								or 1
						end
						
						self._Inverse.Current = Inverse < 0
						
						local AnimationSpeed = (self._Animation.Emoting and 1 * self.FastConfig.AnimationSpeedMultiplier) 
							or (
								(
									(self._Class.AnimationSpeedAdjust[CurrentClass] and self._Speed / self._Class.AnimationSpeedAdjust[CurrentClass])
									or
									1
								) 
								* self.FastConfig.AnimationSpeedMultiplier 
								* Inverse 
								/ (self.FastConfig.R6ClimbFix and CurrentClass == `Climb` and self._RigType == `R6` and 2 or 1)
							)

						self._Animation.CurrentSpeed = AnimationSpeed
						CurrentTrack:AdjustSpeed(AnimationSpeed)
					end
				end
				
				debug.profileend()
			end

			function BetterAnimate.Destroy(self: BetterAnimate)
				if getmetatable(self._Trove.Main) then
					self._Trove.Main:Destroy()	
				end

				setmetatable(self, nil)
			end
		end
	end
	
	do type([[ PRIVATE METHODS ]])
		
		do type([[ SET METHODS ]])
			
			--[[
				Main logic to play animation
			]]
			function BetterAnimate._SetAnimation(self: BetterAnimate, Class: --[[Just to be sure]] BetterAnimate_AnimationClasses?, TransitionTime: number, AnimationData: BetterAnimate_AnimationData, Index: any)
				
				if not AnimationData then
					return
				end
				
				local CurrentTrack = self._Animation.CurrentTrack
				local AnimationInstance = AnimationData.Instance
				
				TransitionTime = TransitionTime or self.FastConfig.AnimationPlayTransition
				self._Class.Current = Class
				self._Animation.CurrentIndex = Index
				
				local UpdateAnimation = false
				
				if self.FastConfig.SetAnimationOnIdDifference then
					UpdateAnimation = AnimationInstance.AnimationId ~= (self._Animation.Current and self._Animation.Current.AnimationId)
				else
					UpdateAnimation = AnimationInstance ~= self._Animation.Current
				end
				
				if UpdateAnimation 
					or 
					(CurrentTrack and not CurrentTrack.IsPlaying) 
				then
					--print(AnimationInstance, self._Animation.Current--[[, AnimationInstance.AnimationId, self._Animation.Current and self._Animation.Current.AnimationId]])
					--if CurrentTrack and not CurrentTrack.IsPlaying then
					--	CurrentTrack:Play(TransitionTime)
					--	self._Trove.Animation:Add(function(AnimationStopTransition) CurrentTrack:Stop(AnimationStopTransition) end, self.FastConfig.AnimationStopTransition)
					--else
						self:StopClassAnimation()
						--print(2)
						local AnimationTrack = self._Animator:LoadAnimation(AnimationInstance) :: AnimationTrack --AnimationTable.AnimationTrack
						AnimationTrack.Priority = self.FastConfig.AnimationPriority

						self._Animation.Current = AnimationInstance
						self._Animation.CurrentTrack = AnimationTrack
						CurrentTrack = AnimationTrack

						--self._Trove.Animation:Add(AnimationTrack.Ended:Connect(self._Animation.KeyframeFunction))
						self._Trove.Animation:Add(AnimationTrack.KeyframeReached:Connect(self._Animation.KeyframeFunction)) -- Roblox Deprecated this (bruh), but it works
						
						do -- Markers
							for Marker in self._Animation.Markers do
								self._Trove.Animation:Add(AnimationTrack:GetMarkerReachedSignal(Marker):Connect(function(...)
									self._Animation.KeyframeFunction(Marker, ...)
								end))
							end
						end
						
						self._Trove.Animation:Add(function(AnimationStopTransition) AnimationTrack:Stop(self.FastConfig.AlwaysUseCurrentTransition and self.FastConfig.AnimationStopTransition or AnimationStopTransition) end, self.FastConfig.AnimationStopTransition)
						AnimationTrack:Play(TransitionTime)

						if self._Events_Enabled["NewAnimation"] then
							local Event = self.Events["NewAnimation"]
							Event:Fires(Class, Index, AnimationData)
						end
					--end
				end

				return AnimationInstance, CurrentTrack, CurrentTrack and CurrentTrack.Length > 0 and CurrentTrack.Length or self.FastConfig.DefaultAnimationLength
			end
		end
		
		do type([[ ETC METHODS ]])
			--[[
				Detect animation Markers (Keyframes)
			]]
			function BetterAnimate._AnimationEvent(self: BetterAnimate, KeyframeOrMarker: string?, ...: string)
				if KeyframeOrMarker then
					if self._Events_Enabled["KeyframeReached"] then
						local Event = self.Events["KeyframeReached"]
						Event:Fires(KeyframeOrMarker, ...)
					end
				end
			end
		end
	end
end

do type([[ ETC ]])
	Destroyer.AddTableDestroyMethod(`{script}`, function(Table)
		if getmetatable(Table) == BetterAnimate then
			return true, (Table :: BetterAnimate):Destroy()
		end
	end)
	
	table.freeze(LocalUtils)
	table.freeze(BetterAnimate)
end

return table.freeze{
	New = function(Character: Model)--: BetterAnimate
		local PrimaryPart = Character.PrimaryPart
		local Humanoid = Character:FindFirstChildWhichIsA(`Humanoid`, true)
		local AnimationController = Character:FindFirstChildWhichIsA(`AnimationController`, true)
		
		Utils.Assert(PrimaryPart, `[{script}] PrimaryPart expected, got nil for character {Character}`)
		Utils.Assert(AnimationController or Humanoid, `[{script}] AnimationController or Humanoid not found in {Character}`)
		
		local CharacterTrove = Trove:Extend()
		
		local preself = {} :: BetterAnimate
		preself.Trove = CharacterTrove:Extend()
		preself._PrimaryPart = PrimaryPart
		preself._Animator = AnimationController or Humanoid
		preself._RigType = (Humanoid and Humanoid.RigType.Name) or `Custom`
		
		local MarkerReached = CharacterTrove:Add(Unlim_Bindable.New())
		
		preself.Events = {
			NewMoveDirection = CharacterTrove:Add(Unlim_Bindable.New()),
			NewState = CharacterTrove:Add(Unlim_Bindable.New()),
			NewAnimation = CharacterTrove:Add(Unlim_Bindable.New()),
			KeyframeReached = MarkerReached,
			MarkerReached = MarkerReached,
		}
		
		preself._Trove = {
			Main = CharacterTrove,
			Debug = CharacterTrove:Extend(),
			Animation = CharacterTrove:Extend(),
			Emote = CharacterTrove:Extend(),
			Tool = CharacterTrove:Extend(),
		}
		
		local self = setmetatable(Utils.CopyTableTo(Utils.DeepCopy(DefaultSettings), preself), BetterAnimate)
		
		self._Animation.KeyframeFunction = function(...)
			self:_AnimationEvent(...)
		end
		
		return self
	end,
	
	GetMoveDirectionName = LocalUtils.GetMoveDirectionName,
	GetAnimationData = LocalUtils.GetAnimationData,
	GetClassesPreset = LocalUtils.GetClassesPreset,
	FixCenterOfMass = LocalUtils.FixCenterOfMass,
	LocalUtils = LocalUtils,
	PresetsTag = PresetsTagIndex,
}]]></ProtectedString>
						<string name="ScriptGuid">{4DD065A0-7783-49D4-8074-1B4D7C1E886D}</string>
						<BinaryString name="AttributesSerialize"><![CDATA[AQAAABgAAABCZXR0ZXJBbmltYXRlX1ByZXNldHNUYWcCFQAAAEJldHRlckFuaW1hdGVfUHJl
c2V0cw==]]></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008eb</UniqueId>
						<string name="Name">BetterAnimate</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008bb</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX8042774B6E7F4D46801E3C64A9AE64C8">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

--[[❗DEPRECATED SUBMODULE❗, TYPES LOCATED IN BETTERANIMATE]]
warn(`[{script}] is deprecated`)

export type Instances = "Accessory" | "Accoutrement" | "Actor" | "AdGui" | "AdPortal" | "AdService" | "AdvancedDragger" | "AirController" | "AlignOrientation" | "AlignPosition" | "AnalysticsSettings" | "AnalyticsService" | "AngularVelocity" | "Animation" | "AnimationClip" | "AnimationClipProvider" | "AnimationConstraint" | "AnimationController" | "AnimationFromVideoCreatorService" | "AnimationFromVideoCreatorStudioService" | "AnimationImportData" | "AnimationRigData" | "AnimationStreamTrack" | "AnimationTrack" | "Animator" | "AppStorageService" | "AppUpdateService" | "ArcHandles" | "AssetCounterService" | "AssetDeliveryProxy" | "AssetImportService" | "AssetImportSession" | "AssetManagerService" | "AssetPatchSettings" | "AssetService" | "AssetSoundEffect" | "Atmosphere" | "Attachment" | "AudioPages" | "AudioSearchParams" | "AvatarChatService" | "AvatarEditorService" | "AvatarImportService" | "Backpack" | "BackpackItem" | "BadgeService" | "BallSocketConstraint" | "BaseImportData" | "BasePart" | "BasePlayerGui" | "BaseScript" | "BaseWrap" | "Beam" | "BevelMesh" | "BillboardGui" | "BinaryStringValue" | "BindableEvent" | "BindableFunction" | "BlockMesh" | "BloomEffect" | "BlurEffect" | "BodyAngularVelocity" | "BodyColors" | "BodyForce" | "BodyGyro" | "BodyMover" | "BodyPosition" | "BodyThrust" | "BodyVelocity" | "Bone" | "BoolValue" | "BoxHandleAdornment" | "Breakpoint" | "BrickColorValue" | "BrowserService" | "BubbleChatConfiguration" | "BubbleChatMessageProperties" | "BulkImportService" | "BuoyancySensor" | "CacheableContentProvider" | "CalloutService" | "Camera" | "CanvasGroup" | "CaptureService" | "CatalogPages" | "CFrameValue" | "ChangeHistoryService" | "ChannelSelectorSoundEffect" | "CharacterAppearance" | "CharacterMesh" | "Chat" | "ChatInputBarConfiguration" | "ChatWindowConfiguration" | "ChorusSoundEffect" | "ClickDetector" | "ClientReplicator" | "ClimbController" | "Clothing" | "CloudLocalizationTable" | "Clouds" | "ClusterPacketCache" | "CollectionService" | "Color3Value" | "ColorCorrectionEffect" | "CommandInstance" | "CommandService" | "CompressorSoundEffect" | "ConeHandleAdornment" | "Configuration" | "ConfigureServerService" | "Constraint" | "ContentProvider" | "ContextActionService" | "Controller" | "ControllerBase" | "ControllerManager" | "ControllerPartSensor" | "ControllerSensor" | "ControllerService" | "CookiesService" | "CoreGui" | "CorePackages" | "CoreScript" | "CoreScriptDebuggingManagerHelper" | "CoreScriptSyncService" | "CornerWedgePart" | "CrossDMScriptChangeListener" | "CSGDictionaryService" | "CurveAnimation" | "CustomEvent" | "CustomEventReceiver" | "CustomSoundEffect" | "CylinderHandleAdornment" | "CylinderMesh" | "CylindricalConstraint" | "DataModel" | "DataModelMesh" | "DataModelPatchService" | "DataModelSession" | "DataStore" | "DataStoreIncrementOptions" | "DataStoreInfo" | "DataStoreKey" | "DataStoreKeyInfo" | "DataStoreKeyPages" | "DataStoreListingPages" | "DataStoreObjectVersionInfo" | "DataStoreOptions" | "DataStorePages" | "DataStoreService" | "DataStoreSetOptions" | "DataStoreVersionPages" | "Debris" | "DebuggablePluginWatcher" | "DebuggerBreakpoint" | "DebuggerConnection" | "DebuggerConnectionManager" | "DebuggerLuaResponse" | "DebuggerManager" | "DebuggerUIService" | "DebuggerVariable" | "DebuggerWatch" | "DebugSettings" | "Decal" | "DepthOfFieldEffect" | "DeviceIdService" | "Dialog" | "DialogChoice" | "DistortionSoundEffect" | "DockWidgetPluginGui" | "DoubleConstrainedValue" | "DraftsService" | "DragDetector" | "Dragger" | "DraggerService" | "DynamicMesh" | "DynamicRotate" | "EchoSoundEffect" | "EmotesPages" | "EqualizerSoundEffect" | "EulerRotationCurve" | "EventIngestService" | "ExperienceAuthService" | "ExperienceInviteOptions" | "Explosion" | "FaceAnimatorService" | "FaceControls" | "FaceInstance" | "FacialAnimationRecordingService" | "FacialAnimationStreamingServiceStats" | "FacialAnimationStreamingServiceV2" | "FacialAnimationStreamingSubsessionStats" | "FacsImportData" | "Feature" | "File" | "FileMesh" | "Fire" | "Flag" | "FlagStand" | "FlagStandService" | "FlangeSoundEffect" | "FloatCurve" | "FloorWire" | "FlyweightService" | "Folder" | "ForceField" | "FormFactorPart" | "Frame" | "FriendPages" | "FriendService" | "FunctionalTest" | "GamepadService" | "GamePassService" | "GameSettings" | "GenericSettings" | "Geometry" | "GeometryService" | "GetTextBoundsParams" | "GlobalDataStore" | "GlobalSettings" | "Glue" | "GoogleAnalyticsConfiguration" | "GroundController" | "GroupImportData" | "GroupService" | "GuiBase" | "GuiBase2d" | "GuiBase3d" | "GuiButton" | "GuidRegistryService" | "GuiLabel" | "GuiMain" | "GuiObject" | "GuiService" | "HandleAdornment" | "Handles" | "HandlesBase" | "HapticService" | "Hat" | "HeightmapImporterService" | "HiddenSurfaceRemovalAsset" | "Highlight" | "HingeConstraint" | "Hint" | "Hole" | "Hopper" | "HopperBin" | "HSRDataContentProvider" | "HttpRbxApiService" | "HttpRequest" | "HttpService" | "Humanoid" | "HumanoidController" | "HumanoidDescription" | "IKControl" | "ILegacyStudioBridge" | "ImageButton" | "ImageDataExperimental" | "ImageHandleAdornment" | "ImageLabel" | "IncrementalPatchBuilder" | "InputObject" | "InsertService" | "Instance" | "InstanceAdornment" | "IntConstrainedValue" | "IntersectOperation" | "IntValue" | "InventoryPages" | "IXPService" | "JointImportData" | "JointInstance" | "JointsService" | "KeyboardService" | "Keyframe" | "KeyframeMarker" | "KeyframeSequence" | "KeyframeSequenceProvider" | "LanguageService" | "LayerCollector" | "LegacyStudioBridge" | "Light" | "Lighting" | "LinearVelocity" | "LineForce" | "LineHandleAdornment" | "LiveScriptingService" | "LocalDebuggerConnection" | "LocalizationService" | "LocalizationTable" | "LocalScript" | "LocalStorageService" | "LodDataEntity" | "LodDataService" | "LoginService" | "LogService" | "LSPFileSyncService" | "LuaSettings" | "LuaSourceContainer" | "LuauScriptAnalyzerService" | "LuaWebService" | "ManualGlue" | "ManualSurfaceJointInstance" | "ManualWeld" | "MarkerCurve" | "MarketplaceService" | "MaterialGenerationService" | "MaterialGenerationSession" | "MaterialImportData" | "MaterialService" | "MaterialVariant" | "MemoryStoreQueue" | "MemoryStoreService" | "MemoryStoreSortedMap" | "MemStorageConnection" | "MemStorageService" | "MeshContentProvider" | "MeshDataExperimental" | "MeshImportData" | "MeshPart" | "Message" | "MessageBusConnection" | "MessageBusService" | "MessagingService" | "MetaBreakpoint" | "MetaBreakpointContext" | "MetaBreakpointManager" | "Model" | "ModuleScript" | "Motor" | "Motor6D" | "MotorFeature" | "Mouse" | "MouseService" | "MultipleDocumentInterfaceInstance" | "NegateOperation" | "NetworkClient" | "NetworkMarker" | "NetworkPeer" | "NetworkReplicator" | "NetworkServer" | "NetworkSettings" | "NoCollisionConstraint" | "NonReplicatedCSGDictionaryService" | "NotificationService" | "NumberPose" | "NumberValue" | "ObjectValue" | "OmniRecommendationsService" | "OpenCloudService" | "OrderedDataStore" | "OutfitPages" | "PackageLink" | "PackageService" | "PackageUIService" | "Pages" | "Pants" | "ParabolaAdornment" | "Part" | "PartAdornment" | "ParticleEmitter" | "PartOperation" | "PartOperationAsset" | "PatchBundlerFileWatch" | "PatchMapping" | "Path" | "PathfindingLink" | "PathfindingModifier" | "PathfindingService" | "PausedState" | "PausedStateBreakpoint" | "PausedStateException" | "PermissionsService" | "PhysicsService" | "PhysicsSettings" | "PitchShiftSoundEffect" | "Plane" | "PlaneConstraint" | "Platform" | "Player" | "PlayerEmulatorService" | "PlayerGui" | "PlayerMouse" | "Players" | "PlayerScripts" | "Plugin" | "PluginAction" | "PluginDebugService" | "PluginDragEvent" | "PluginGui" | "PluginGuiService" | "PluginManagementService" | "PluginManager" | "PluginManagerInterface" | "PluginMenu" | "PluginMouse" | "PluginPolicyService" | "PluginToolbar" | "PluginToolbarButton" | "PointLight" | "PointsService" | "PolicyService" | "Pose" | "PoseBase" | "PostEffect" | "PrismaticConstraint" | "ProcessInstancePhysicsService" | "ProximityPrompt" | "ProximityPromptService" | "PublishService" | "PVAdornment" | "PVInstance" | "QWidgetPluginGui" | "RayValue" | "RbxAnalyticsService" | "ReflectionMetadata" | "ReflectionMetadataCallbacks" | "ReflectionMetadataClass" | "ReflectionMetadataClasses" | "ReflectionMetadataEnum" | "ReflectionMetadataEnumItem" | "ReflectionMetadataEnums" | "ReflectionMetadataEvents" | "ReflectionMetadataFunctions" | "ReflectionMetadataItem" | "ReflectionMetadataMember" | "ReflectionMetadataProperties" | "ReflectionMetadataYieldFunctions" | "RemoteCursorService" | "RemoteDebuggerServer" | "RemoteEvent" | "RemoteFunction" | "RenderingTest" | "RenderSettings" | "ReplicatedFirst" | "ReplicatedStorage" | "ReverbSoundEffect" | "RigidConstraint" | "RobloxPluginGuiService" | "RobloxReplicatedStorage" | "RocketPropulsion" | "RodConstraint" | "RomarkService" | "RootImportData" | "RopeConstraint" | "Rotate" | "RotateP" | "RotateV" | "RotationCurve" | "RtMessagingService" | "RunningAverageItemDouble" | "RunningAverageItemInt" | "RunningAverageTimeIntervalItem" | "RunService" | "RuntimeScriptService" | "SafetyService" | "ScreenGui" | "ScreenshotHud" | "Script" | "ScriptBuilder" | "ScriptChangeService" | "ScriptCloneWatcher" | "ScriptCloneWatcherHelper" | "ScriptCommitService" | "ScriptContext" | "ScriptDebugger" | "ScriptDocument" | "ScriptEditorService" | "ScriptRegistrationService" | "ScriptRuntime" | "ScriptService" | "ScrollingFrame" | "Seat" | "Selection" | "SelectionBox" | "SelectionHighlightManager" | "SelectionLasso" | "SelectionPartLasso" | "SelectionPointLasso" | "SelectionSphere" | "SensorBase" | "ServerReplicator" | "ServerScriptService" | "ServerStorage" | "ServiceProvider" | "ServiceVisibilityService" | "SessionService" | "SharedTableRegistry" | "Shirt" | "ShirtGraphic" | "ShorelineUpgraderService" | "SkateboardController" | "SkateboardPlatform" | "Skin" | "Sky" | "SlidingBallConstraint" | "Smoke" | "SmoothVoxelsUpgraderService" | "Snap" | "SnippetService" | "SocialService" | "SolidModelContentProvider" | "Sound" | "SoundEffect" | "SoundGroup" | "SoundService" | "Sparkles" | "SpawnerService" | "SpawnLocation" | "SpecialMesh" | "SphereHandleAdornment" | "SpotLight" | "SpringConstraint" | "StackFrame" | "StandalonePluginScripts" | "StandardPages" | "StarterCharacterScripts" | "StarterGear" | "StarterGui" | "StarterPack" | "StarterPlayer" | "StarterPlayerScripts" | "Stats" | "StatsItem" | "Status" | "StringValue" | "Studio" | "StudioAssetService" | "StudioData" | "StudioDeviceEmulatorService" | "StudioPublishService" | "StudioScriptDebugEventListener" | "StudioSdkService" | "StudioService" | "StudioTheme" | "StyleBase" | "StyleDerive" | "StyleLink" | "StyleRule" | "StyleSheet" | "StylingService" | "SunRaysEffect" | "SurfaceAppearance" | "SurfaceGui" | "SurfaceGuiBase" | "SurfaceLight" | "SurfaceSelection" | "SwimController" | "SyncScriptBuilder" | "TaskScheduler" | "Team" | "TeamCreateData" | "TeamCreatePublishService" | "TeamCreateService" | "Teams" | "TeleportAsyncResult" | "TeleportOptions" | "TeleportService" | "TemporaryCageMeshProvider" | "TemporaryScriptService" | "Terrain" | "TerrainDetail" | "TerrainRegion" | "TestService" | "TextBox" | "TextBoxService" | "TextButton" | "TextChannel" | "TextChatCommand" | "TextChatConfigurations" | "TextChatMessage" | "TextChatMessageProperties" | "TextChatService" | "TextFilterResult" | "TextFilterTranslatedResult" | "TextLabel" | "TextService" | "TextSource" | "Texture" | "TextureGuiExperimental" | "ThirdPartyUserService" | "ThreadState" | "TimerService" | "ToastNotificationService" | "Tool" | "Torque" | "TorsionSpringConstraint" | "TotalCountTimeIntervalItem" | "TouchInputService" | "TouchTransmitter" | "TracerService" | "TrackerLodController" | "TrackerStreamAnimation" | "Trail" | "Translator" | "TremoloSoundEffect" | "TriangleMeshPart" | "TrussPart" | "TutorialService" | "Tween" | "TweenBase" | "TweenService" | "UGCAvatarService" | "UGCValidationService" | "UIAspectRatioConstraint" | "UIBase" | "UIComponent" | "UIConstraint" | "UICorner" | "UIGradient" | "UIGridLayout" | "UIGridStyleLayout" | "UILayout" | "UIListLayout" | "UIPadding" | "UIPageLayout" | "UIScale" | "UISizeConstraint" | "UIStroke" | "UITableLayout" | "UITextSizeConstraint" | "UnionOperation" | "UniversalConstraint" | "UnvalidatedAssetService" | "UserGameSettings" | "UserInputService" | "UserService" | "UserSettings" | "UserStorageService" | "ValueBase" | "Vector3Curve" | "Vector3Value" | "VectorForce" | "VehicleController" | "VehicleSeat" | "VelocityMotor" | "VersionControlService" | "VideoCaptureService" | "VideoFrame" | "ViewportFrame" | "VirtualInputManager" | "VirtualUser" | "VisibilityCheckDispatcher" | "VisibilityService" | "Visit" | "VoiceChatInternal" | "VoiceChatService" | "VRService" | "WedgePart" | "Weld" | "WeldConstraint" | "WireframeHandleAdornment" | "Workspace" | "WorldModel" | "WorldRoot" | "WrapLayer" | "WrapTarget"

--[[@Trove]]
export type Trove = typeof(require(`./BetterAnimate_Helpers/Trove`))

--[[@Utils]]
export type Utils = typeof(require(`./BetterAnimate_Helpers/Utils`))

--[[@Services]]
export type Services = typeof(require(`./BetterAnimate_Helpers/Services`))

--[[@Destroyer]]
export type Destroyer = typeof(require(`./BetterAnimate_Helpers/Destroyer`))

--[[@Unlim]]
local Unlim_Bindable = require(`./BetterAnimate_Helpers/Unlim_Bindable`)
export type Unlim_Bindable_Start = typeof(Unlim_Bindable)
export type Unlim_Bindable = Unlim_Bindable.Unlim_Bindable

--[[@BetterAnimate]]
export type BetterAnimate_AnimationClasses = "Walk" | "Run" | "Swim" | "Swimidle" | "Jump" | "Fall" | "Climb" | "Sit" | "Idle" | "Emote" | "Temp" --| string
export type BetterAnimate_Directions = "ForwardRight" | "ForwardLeft" | "BackwardRight" | "BackwardLeft" | "Right" | "Left" | "Backward" | "Forward" | "Up" | "Down" | "None"
export type BetterAnimate_EventNames = "NewMoveDirection" | "NewState" | "NewAnimation" | "KeyframeReached"

export type BetterAnimate_AnimationData = {
	ID: number | string?,
	Instance: Animation?,
	Weight: number?,
	Index: string?,
}

export type BetterAnimate_Start = {
	New: (Character: Model)-> BetterAnimate,
	GetMoveDirectionName: (MoveDirection: Vector3)-> BetterAnimate_Directions,
	GetAnimationData: (AnimationData: BetterAnimate_AnimationData | number | string | Instance, DefaultWeight: number?)-> BetterAnimate_AnimationData,
	GetClassesPreset: (Index: string)-> ({ [BetterAnimate_AnimationClasses]: { [any]: BetterAnimate_AnimationData | string | number | Animation } }?),
	FixCenterOfMass: (PhysicalProperties, BasePart)-> (),
	PresetsTag: string,
	LocalUitls: {[any]: any},
}

export type BetterAnimate = {
	
	--[[Public]]
	
	Trove: Trove, -- If you want to attach something
	
	Events: {
		--[[Hiiii]]
		NewMoveDirection: Unlim_Bindable,
		NewState: Unlim_Bindable,
		NewAnimation: Unlim_Bindable,
		
		--[[KeyframeReached == MarkerReached]]
		KeyframeReached: Unlim_Bindable,
		MarkerReached: Unlim_Bindable,
		
		--[BetterAnimate_EventNames]: Unlim_Bindable,
	},
	
	FastConfig: { -- Like FFlag to fix something
		R6ClimbFix: boolean, -- For R6
		EmoteIngnoreEmotable: boolean,
		WaitFallOnJump: number,
		DefaultAnimationLength: number,
		DefaultAnimationWeight: number,	
		AnimationSpeedMultiplier: number,
		AnimationPlayTransition: number,
		AnimationStopTransition: number,
		AnimationPriority: Enum.AnimationPriority,
		ToolAnimationPlayTransition: number,
		ToolAnimationStopTransition: number,
		ToolAnimationPriority: Enum.AnimationPriority,
		MoveDirection: Vector3?,
		SetAnimationOnIdDifference: boolean?,
		AssemblyLinearVelocity: Vector3?, -- Moving speed
	},
	
	SimpleStateWrapper: (Function: (self: BetterAnimate)-> ())-> ((BetterAnimate, string)-> ()),
	
	GetInverse: (self: BetterAnimate)-> number,
	GetMoveDirection: (self: BetterAnimate)-> Vector3,
	GetRandomClassAnimation: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses)-> (any, BetterAnimate_AnimationData),
	
	SetForcedState: (self: BetterAnimate, State: string)-> (BetterAnimate),
	SetEventEnabled: (self: BetterAnimate, Name: BetterAnimate_EventNames, Enabled: boolean?)-> (BetterAnimate),
	SetDebugEnabled: (self: BetterAnimate, Enabled: boolean?)-> (BetterAnimate),
	SetClassesPreset: (self: BetterAnimate, Preset: { [BetterAnimate_AnimationClasses]: { [any]: BetterAnimate_AnimationData | string | number | Animation } })-> (BetterAnimate),
	SetClassPreset: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Preset: { [any]: BetterAnimate_AnimationData | string | number | Animation })-> (BetterAnimate),
	SetInverseEnabled: (self: BetterAnimate, Enabled: boolean?)-> (BetterAnimate),
	SetInverseDirection: (self: BetterAnimate, Direction: string, Inverse: boolean?)-> (BetterAnimate),
	SetClassInverse: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Inverse: boolean?)-> (BetterAnimate),
	SetClassTimer: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Timer: number)-> (BetterAnimate),
	SetClassMaxTimer: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, MaxTimer: number | NumberRange?)-> (BetterAnimate),
	SetClassEmotable: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Emotable: boolean?)-> (BetterAnimate),
	SetClassAnimationSpeedAdjust: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Adjust: number)-> (BetterAnimate),
	SetRunningStateRange: (self: BetterAnimate, Range: NumberRange)-> (BetterAnimate),
	SetStateFunction: (self: BetterAnimate, State: string, Function: (BetterAnimate_AnimationData, string)-> ())-> (BetterAnimate),
	
	AddAnimation: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Index: any?, AnimationData: BetterAnimate_AnimationData)-> (BetterAnimate),
	StopClassAnimation: (self: BetterAnimate)-> (),
	PlayClassAnimation: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, TransitionTime: number?)-> (),
	PlayToolAnimation: (self: BetterAnimate, Data: BetterAnimate_AnimationData | string | number | Animation)-> (),
	StopToolAnimation: (self: BetterAnimate, Data: BetterAnimate_AnimationData | string | number | Animation)-> (),
	StopEmote: (self: BetterAnimate)-> (),
	PlayEmote: (self: BetterAnimate, Data: BetterAnimate_AnimationData | string | number | Animation)-> (number),
	Step: (self: BetterAnimate, Dt: number)-> (),
	
	Destroy: (self: BetterAnimate)-> (),
	--

	--[[Private]]
	_Speed: number,
	_AssemblyLinearVelocity: Vector3,
	_MoveDirection: Vector3,
	_PrimaryPart: BasePart,
	_Animator: AnimationController | Humanoid,

	_RigType: "R6" | "R15" | "Custom", --Enum.HumanoidRigType
	
	_Time: {
		Debug: number,
		Jumped: number,
	},
	
	_State: {
		Forced: string?,
		Current: string,
		--Deffered: {
		--	[string]: boolean,
		--},
		
		Functions: {
			[string]: (BetterAnimate, State: string)-> ()
		}
	},

	_Trove: {
		Main: Trove,
		Debug: Trove,
		Animation: Trove,
		Emote: Trove,
		Tool: Trove,
	},

	_Events_Enabled: {
		[BetterAnimate_EventNames]: boolean,
	},
	
	_Class: {
		Current: string?,
		Inverse:  { [BetterAnimate_AnimationClasses]: boolean },
		Emotable: { [BetterAnimate_AnimationClasses]: boolean },
		AnimationSpeedAdjust: { [BetterAnimate_AnimationClasses]: number },
		DirectionAdjust: { [BetterAnimate_AnimationClasses]: CFrame },
		--SwitchIgnore: { [BetterAnimate_AnimationClasses]: boolean },
		TimerMax: { [BetterAnimate_AnimationClasses]: number | NumberRange },
		Timer: { [BetterAnimate_AnimationClasses]: number | NumberRange },
		SpeedRange: NumberRange,
		Animations: { [BetterAnimate_AnimationClasses]: { [any]: BetterAnimate_AnimationData } }
	},

	_Inverse: {
		Enabled: boolean,
		Directions: { [BetterAnimate_Directions]: boolean}
	},

	_Animation: {
		Current: Animation?,
		CurrentTrack: AnimationTrack?,
		CurrentIndex: any?,
		CurrentSpeed: number?,
		DefaultLength: number,
		DefaultWeight: number,
		ToolPriority: Enum.AnimationPriority,
		Priority: Enum.AnimationPriority,
		KeyframeFunction: ()-> (),
		Emoting: boolean?,
	},
	
	_SetAnimation: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses?, TransitionTime: number?, Index: any, AnimationData: BetterAnimate_AnimationData)-> (Animation, AnimationTrack, number),
	_AnimationEvent: (self: BetterAnimate, Keyframe: string?)-> (),
	
	__index: BetterAnimate,
	
	[any]: (self: BetterAnimate, ...any)-> (...any),
	--
}

return true]]></ProtectedString>
							<string name="ScriptGuid">{70F914E6-5FDB-4194-B6C6-E2D83A8D3052}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008ec</UniqueId>
							<string name="Name">BetterAnimate_Types</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008bc</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX15D9B9EF4DDD4F8D8FF895259D79A70C">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

--[[❗DEPRECATED SUBMODULE❗, DEFAULTSETTING LOCATED IN BETTERANIMATE]]
warn(`[{script}] is deprecated`)

local Types = require(`./BetterAnimate_Types`)

local Module = {	
	
	FastConfig = {
		R6ClimbFix = true, -- For R6
		AnimationSpeedMultiplier = 1,
		AnimationPlayTransition = 0.1,
		AnimationStopTransition = 0.1,
		ToolAnimationPlayTransition = 0.1,
		ToolAnimationStopTransition = 0.1,
		WaitFallOnJump = 0.31,
		DefaultAnimationLength = 5,
		DefaultAnimationWeight = 10,
		AnimationPriority = Enum.AnimationPriority.Core,
		ToolAnimationPriority = Enum.AnimationPriority.Action,
		MoveDirection = nil,
		AssemblyLinearVelocity = nil,
		SetAnimationOnIdDifference = false,
		AlwaysUseCurrentTransition = true,
	},
	
	_Time = {
		Debug = 0.06,
	},
	
	_State = {
		Functions = {
			
			[Enum.HumanoidStateType.Jumping.Name] = function(self: Types.BetterAnimate)
				self._Time.Jumped = tick()
				self:PlayClassAnimation(`Jump`)
			end,

			[Enum.HumanoidStateType.Freefall.Name] = function(self: Types.BetterAnimate)
				if self._Time.Jumped then 
					if tick() - self._Time.Jumped >= (self.FastConfig.WaitFallOnJump or 0) then
						self:PlayClassAnimation(`Fall`)
					end
				else
					self:PlayClassAnimation(`Fall`)
				end
			end,

			[Enum.HumanoidStateType.GettingUp.Name] = function(self: Types.BetterAnimate) 
				self:StopClassAnimation()
			end,	

			[Enum.HumanoidStateType.FallingDown.Name] = function(self: Types.BetterAnimate) 
				self:StopClassAnimation()
			end,	

			[Enum.HumanoidStateType.PlatformStanding.Name] = function(self: Types.BetterAnimate)
				self:StopClassAnimation()
			end,

			[Enum.HumanoidStateType.Running.Name] = function(self: Types.BetterAnimate)
				local SpeedRange = self._Class.SpeedRange
				local Speed = self._Speed
				--print(SpeedRange.Min, Speed)
				if Speed > -math.huge and SpeedRange.Min >= Speed then
					self:PlayClassAnimation(`Idle`, 0.2)
				elseif Speed > SpeedRange.Min and SpeedRange.Max >= Speed then
					self:PlayClassAnimation(`Walk`, 0.2)
				elseif Speed > SpeedRange.Max and math.huge >= Speed then
					self:PlayClassAnimation(`Run`, 0.2)
				else
					warn(`Over 9000!!!! {Speed}`) -- you broke something
				end
			end,

			[Enum.HumanoidStateType.Seated.Name] = function(self: Types.BetterAnimate)
				self:PlayClassAnimation(`Sit`, 0.3)
			end,

			[Enum.HumanoidStateType.Swimming.Name] = function(self: Types.BetterAnimate)
				if self._Speed > 3 then self:PlayClassAnimation(`Swim`, 0.4) return end
				self:PlayClassAnimation(`Swimidle`, 0.4)
			end,

			[Enum.HumanoidStateType.Climbing.Name] = function(self: Types.BetterAnimate)
				self:PlayClassAnimation(`Climb`, 0.2)
			end,

			[Enum.HumanoidStateType.None.Name] = function(self: Types.BetterAnimate)
				self:PlayClassAnimation(`Temp`)
				--self.ForceState = false
			end,
		},
	},

	_Class = { -- Class ~= State 
		Inverse = { -- When inverse animation work
			Walk = true, 
			Run = true, 
			Climb = true,
		},

		Emotable = { -- When emotes can be played
			Idle = true,
			Emote = true
		},

		AnimationSpeedAdjust = { -- Humanoid.WalkSpeed / AnimationSpeedAdjust = AnimationSpeed
			Walk = 9,
			Run = 16,
			Climb = 6, -- (Humanoid.RigType == Enum.HumanoidRigType.R15 and 4) or 12, -- R6 and R15 speed must be different (roblox's skill issue)
			Swim = 10,
		},
		
		DirectionAdjust = { 
			Swim = CFrame.Angles(math.rad(90), 0, 0), -- Fix for swim
		},
		
		SwitchIgnore = {
			Jump = true,
		},
		
		SpeedRange = NumberRange.new(
			0, 
			9
			--[[
				-math.huge - 0.4 == Idle
				0.4 - 9 == Walk
				9 - math.huge == Run
			]]
		),
		
		TimerMax = { -- Wait until play random animation from same class
			Idle = NumberRange.new(5, 8),
		},
		
		Timer = {
			Idle = 0,
		}
	},
	
	_Inverse = {
		Enabled = true,
		
		Directions = {
			BackwardRight = true, 
			BackwardLeft = true, 
			Backward = true,
			Down = true, -- For climb
		}
	},
	
	_Animation = {},
	
	_Events_Enabled = {
		NewMoveDirection = true,
		NewState = true,
		NewAnimation = true,
		KeyframeReached = true,
	},
}

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{9CB23302-070C-4ADB-9996-62501A98A836}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008ed</UniqueId>
							<string name="Name">BetterAnimate_DefaultSettings</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008bd</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX33967C5018E84892AFF5558CDD5427B2">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

--[[ EXAMPLE WHAT YOU CAN USE

	? -- Not necessary
	
	Idle = {
		Idle1 = (
		180426354 
			or
		`rbxassetid://180426354` 
			or 
		Instance.new(`Animation`))	
			or
		{
			[❗MUST HAVE ID OR INSTANCE❗]
			ID = 180426354 or `rbxassetid://180426354` ?
			Instance = Instance.new(`Animation`) ?
			Weight = 10 ?
			Index = any ?
		}
	}
]]

return {
	R6 = {
		Idle = 	{ -- "Random" idle animation
			Idle1 = { ID = 180435571, Weight = 80 },
			Idle2 = { ID = 180435792, Weight = 20 },
		},
		Walk = 		{ Walk1 =		180426354 }, 
		Run = 		{ Run1 =		180426354 },
		Swim = 		{ Swim1 =		180426354 },
		Swimidle = 	{ Swimidle1 =	180426354 }, 
		Jump = 		{ Jump1 =		125750702 }, 
		Fall = 		{ Fall1 =	 	180436148 }, 
		Climb =		{ Climb1 =		180436334 }, 
		Sit = 		{ Sit1 =		178130996 },	
		Toolnone = 	{ Toolnone1 = 	182393478 },
		Temp = 		{ Temp1 =		15609995579 }, -- r15 animation for r6
		--Wave = 		{ Wave1 =		{ ID = "128777973", Weight = 10 } },
		--Point = 	{ Point1 =		{ ID = "128853357", Weight = 10 } },
		--Dance = 	{ 
		--	Dance1 ={ ID = "182435998", Weight = 10 },
		--	Dance2 ={ ID = "182436842", Weight = 10 },
		--	Dance3 ={ ID = "182436935", Weight = 10 },
		--},
		--Laugh = 	{ Laugh1 =		{ ID = "129423131",   Weight = 10 } },
		--Cheer = 	{ Cheer1 =		{ ID = "129423030",   Weight = 10 } },
		--Emote =     { { } },
	},

	R15 = {
		Idle = 	{ -- "Random" idle animation
			Idle1 = { ID = 507766666, Weight = 20 },
			Idle2 = { ID = 507766951, Weight = 20 },
			Idle3 = { ID = 507766388, Weight = 80 }
		},
		Walk = 		{ Walk1 =		507777826 }, 
		Run = 		{ Run1 =		507767714 }, 
		Swim = 		{ Swim1 =		507784897 },
		Swimidle = 	{ Swimidle1 =	507785072 }, 
		Jump = 		{ Jump1 =		507765000 }, 
		Fall = 		{ Fall1 =	 	507767968 }, 
		Climb = 	{ Climb1 =		507765644 }, 
		Sit = 		{ Sit1 =		2506281703 },	
		Toolnone = 	{ Toolnone1 = 	507768375 },
		Temp = 		{ Temp1 =		27789359 }, -- r6 animation for r15
		--Wave = 		{ Wave1 =		{ ID = "507770239",  Weight = 10 } },
		--Point = 	{ Point1 =		{ ID = "507770453",  Weight = 10 } },
		--Dance = 	{
		--	Dance1 ={ ID = "507772104", Weight = 10 },
		--	Dance2 ={ ID = "507776879", Weight = 10 },
		--	Dance3 ={ ID = "507777623", Weight = 10 },
		--},
		--Laugh = 	{ Laugh1 =		{ ID = "507770818", Weight = 10 } },
		--Cheer = 	{ Cheer1 =		{ ID = "507770677", Weight = 10 } },
		--Emote =     { { } },
	},
}
]]></ProtectedString>
							<string name="ScriptGuid">{A251CD31-F066-4864-9473-7F4B82961AF0}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008ee</UniqueId>
							<string name="Name">BetterAnimate_DefaultAnimations</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags">QmV0dGVyQW5pbWF0ZV9QcmVzZXRz</BinaryString>
							<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008be</UniqueId>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBXFE3C12338FF6457DB79C01B62E93F635">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008ef</UniqueId>
							<string name="Name">BetterAnimate_Helpers</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008bf</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX8DBF236C95C8440BAFABE774717177A7">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[--local ModuleScript_BetterAnimate = `../BetterAnimate`
--local BetterAnimate = require("../../BetterAnimate")
--BetterAnimate.

local Serviecs = require(`./Services`)
local Destroyer = require(`./Destroyer`)
local Utils = require(`./Utils`)

export type Trove = {

	Extend: (self: Trove)-> Trove,
	InstanceNew: (self: Trove, ClassName: string)-> (Instance, ()->()),
	Clone: <_, Inst>(self: Trove, Inst)-> (Inst, ()->()),
	Connect: (self: Trove, Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	Once: (self: Trove, Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	BindToRenderStep: (self: Trove, Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)-> (string, ()->()),
	Add: <_, Object>(self: Trove, Object, ...any)-> (Object, ()->()),
	Remove: (self: Trove, Object: any, Destroy: boolean?)-> boolean,
	AttachToInstance: (self: Trove, Inst: Instance)-> RBXScriptConnection,
	Clear:(self: Trove, Destroy: boolean?)-> (),
	Destroy: (self: Trove)-> (), -- Destroy == Clear(true) & setmetatable(self, nil)

	__index: Trove,
}

local Trove = {} :: Trove
Trove.__index = Trove

function Trove.New()
	local self = setmetatable({}, Trove)
	self.Objects = {}
	self.Cleaning = false
	--self.Name = Name
	--self.UniqueID = Serviecs.HttpService:GenerateGUID()
	return self
end

function Trove:Extend()
	return self:Add(Trove.New(
		--self.Name or Serviecs.HttpService:GenerateGUID()
		))
end

function Trove:InstanceNew(ClassName: string): Instance
	return self:Add(Instance.new(ClassName))
end

function Trove:Clone<Inst>(Inst): Inst
	return self:Add(Inst:Clone())
end

function Trove:BindToRenderStep(Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)
	
	local Index = Serviecs.HttpService:GenerateGUID()
	Serviecs.RunService:BindToRenderStep(Index, Priority, Function)
	return self:Add(Index, function() 
		Serviecs.RunService:UnbindFromRenderStep(Index)
		if type(OnDestroy) == `function` then	
			OnDestroy()
		end
	end)
end

function Trove:Add<Object>(Object, ...: any): Object
	
	local CheckExist = self.Objects[Object]
	if CheckExist then
		return warn(`[Trove] Trying to add existing Object`, Object)
	else
		self.Objects[Object] = {...}
		return Object, function() self:Remove(Object) end
	end
end

function Trove:Remove(Object: any, Destroy: boolean?)
	
	local ObjectTable = self.Objects[Object]
	if ObjectTable then
		
		if Destroy then
			if type(Object) == "function" then
				Object(table.unpack(ObjectTable))
			else
				Destroyer.Destroy(Object)
				
				for _, Arg in ObjectTable do
					if type(Arg) == "function" then
						Arg()
					end
				end
			end
		end
		
		self.Objects[Object] = nil
		return true
	end
	
	return false, warn(`[{script}] Object not found: {Object}`)
end

function Trove:AttachToInstance(Inst: Instance)
	
	if not Inst then
		error(`Instance expected, got {Inst}`, 2)
	else
		return self:Add(Inst.Destroying:Connect(function() self:Destroy() end))
	end
end

function Trove:Clear(Destroy: boolean?)
	
	for Object, _ in self.Objects do
		self:Remove(Object, Destroy)
	end
end

function Trove:Destroy()
	
	self:Clear(true)
	setmetatable(self, nil)
end

Destroyer.AddTableDestroyMethod(`{script}`, function(Table)
	if getmetatable(Table) == Trove then
		Table:Destroy()
	end
end)

return Trove.New() :: Trove]]></ProtectedString>
								<string name="ScriptGuid">{B0D97486-CC3F-4790-812B-6645ACEC8D22}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f0</UniqueId>
								<string name="Name">Trove</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c0</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXA188FB6411DB4E99893DC03CDB8E0C57">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[local Services = require(`./Services`)

local Module = {}

function Module.Assert(Condition: (any), ErrorMessage: string, Level: number?): ()
	if not (Condition) then error(`Assert: {ErrorMessage}`, Level or 2) end
end

function Module.GetUnique()
	return Services.HttpService:GenerateGUID(false)
end

function Module.IsNaN(Value)
	return Value ~= Value
end

function Module.CopyTableTo<From, To>(From: From, To: To): From & To
	for I, Value in From do
		if type(Value) == `table` and type(To[I]) == `table` then
			Module.CopyTableTo(Value, To[I])
		else
			To[I] = Value
		end
	end
	
	return To
end

function Module.DeepCopy<Table>(Table: Table): Table
	local Copy = {}
	
	for I, Value in Table do
		if type(Value) == "table" then
			Value = Module.DeepCopy(Value)
		end
		Copy[I] = Value
	end
	
	return Copy :: Table
end

function Module.GetTableLength(Table: {[any]: any}): number
	local Number = 0
	for _, _ in Table do
		Number += 1
	end
	return Number
end

function Module.Vector3Round(Vector: Vector3): Vector3
	return Vector3.new(math.round(Vector.X), math.round(Vector.Y), math.round(Vector.Z))
end

function Module.MaxDecimal(Number: number, Decimal: number): number
	return tonumber(string.format(`%.{Decimal}f`, Number)) :: number
end

return Module
]]></ProtectedString>
								<string name="ScriptGuid">{AF3D3B2A-8A78-48C6-A5F6-7C317183B82C}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f1</UniqueId>
								<string name="Name">Utils</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c1</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX7D6615C7AA9A47D2B793297EBF9B96D9">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[return {
	RunService = game:GetService(`RunService`),
	HttpService = game:GetService(`HttpService`),
	CollectionService = game:GetService(`CollectionService`)
}]]></ProtectedString>
								<string name="ScriptGuid">{0378FD0C-D8C9-420E-A835-FB1F4A7BD9B9}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f2</UniqueId>
								<string name="Name">Services</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c2</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXA91E217158A84205B18CA7718D33C006">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[local Module = {
	TableMethods = {},
}

Module.CleanMethods = {
	["table"] = function(Table: {any})
		
		for _, Function in Module.TableMethods do
			if Function(Table) then
				return
			end
		end
	end,
	
	thread = function(Thread: thread)
		task.cancel(Thread)
	end,
	
	["function"] = function(Function: (any)->(any))
		
	end,
	
	instance = function(Inst: Instance)
		--if Inst then 
			Inst:Destroy()
		--end
	end,
	
	rbxscriptconnection = function(Connect: RBXScriptConnection)
		if Connect and Connect.Connected then
			Connect:Disconnect()
		end
	end,
}

function Module.Destroy(Any: any)
	local Destroy = Module.CleanMethods[string.lower(typeof(Any))]
	if Destroy then
		Destroy(Any)
	end
end

function Module.AddTableDestroyMethod(Index: any, Function: (Table: {[any]: any})-> ())
	Module.TableMethods[Index] = Function
end

return Module
]]></ProtectedString>
								<string name="ScriptGuid">{11C99FBC-18F2-44EA-8E22-0086BE11BC91}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f3</UniqueId>
								<string name="Name">Destroyer</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c3</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX975BC5277C86433C802D5E259B02C9AD">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[
--Types

--

--Modules
local Utils = require(`./Utils`)
local Destroyer = require(`./Destroyer`)
local Services = require(`./Services`)
--

--Types
export type DisconnectFunction = ()-> ()

export type Unlim_Bindable = {
	
	Connect: (self: Unlim_Bindable, Function: (...any)-> ())-> (string, DisconnectFunction),
	Once: (self: Unlim_Bindable, Function: (...any)-> ())-> (string, DisconnectFunction),
	Wait: (self: Unlim_Bindable)-> (...any),
	
	Disconnect: (self: Unlim_Bindable, Key: string)-> (),
	DisconnectAll: (self: Unlim_Bindable)-> (),
	
	Fire: (self: Unlim_Bindable, Key: string, ...any)-> (),
	Fires: (self: Unlim_Bindable, ...any)-> (),
	Invoke: (self: Unlim_Bindable, Key: string, ...any)-> (...any),
	
	Destroy: (self: Unlim_Bindable)-> (),
	
	__index: Unlim_Bindable
}
--

local Bindables = {}
local Bindable = {} :: Unlim_Bindable
Bindable.__index = Bindable

function Bindable:Connect(Function: (...any) -> ())
	local Key
	repeat
		Key = Utils.GetUnique()
	until not self.Connects[Key]
	
	self.Connects[Key] = Function
	return Key, function() self.Connects[Key] = nil end
end

function Bindable:Once(Function: (...any) -> ())
	local Key, DisconnectFunction
	Key, DisconnectFunction = self:Connect(function(...: any)
		--print(self)
		--print(getmetatable(self))
		if getmetatable(self) then
			DisconnectFunction()
			task.spawn(Function, ...)
		end
	end)
	
	return Key, DisconnectFunction
end

function Bindable:Disconnect(Key: string)
	self.Connects[Key] = nil
end

function Bindable:DisconnectAll()
	for Key in self.Connects do
		self.Connects[Key] = nil
	end
end

function Bindable:Wait()
	local This_Thread = coroutine.running()
	self:Once(function(...)
		--print(coroutine.status(This_Thread))
		local Status = coroutine.status(This_Thread)
		
		if Status == `normal` or `suspended` then
			pcall(task.spawn, This_Thread, ...)
			--task.defer(This_Thread, ...)
		else
			warn(`[Unlim_Bindable] {This_Thread} is {Status}`)
		end
		
	end)
	return coroutine.yield()
end

function Bindable:Fire(Key: string, ...: any)
	local Function = self.Connects[Key]
	if Function then
		task.spawn(Function, ...)
	else
		warn(`[Unlim_Bindable] Connect with key: {Key} don't exist {self.Identifier} \n {debug.traceback()}`)
	end
end

function Bindable:Fires(...: any)
	for _, Function in self.Connects do
		task.spawn(Function, ...)
	end
end

function Bindable:Invoke(Key: string, ...: any)
	local Function = self.Connects[Key]
	if not Function then return end
	return Function(...)
end

function Bindable:Destroy()
	self:DisconnectAll()
	Bindables[self.Identifier] = nil
	setmetatable(self, nil)
end

Destroyer.AddTableDestroyMethod(`{script}`, function(Table)
	if getmetatable(Table) == Bindable then
		return true, (Table :: Unlim_Bindable):Destroy()
	end
end)

return {
	New = function(Identifier: string?): Unlim_Bindable
		if not Identifier then
			Identifier = Utils.GetUnique()
			while Bindables[Identifier] do
				Identifier = Utils.GetUnique()
			end
		end

		Utils.Assert(typeof(Identifier) == "string", `[{script}]: Identifier must be a string type, got {typeof(Identifier)}`)
		if not Bindables[Identifier] then
			local self = setmetatable({
				Identifier = Identifier,
				Connects = {},
			}, Bindable)
			Bindables[Identifier] = self
			return self
		end

		return Bindables[Identifier]
	end,
}]]></ProtectedString>
								<string name="ScriptGuid">{6CBBCAA0-C534-40EE-9CEB-DC6E82E1A887}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">159a95d72600cfa607c3945a00019ff2</UniqueId>
								<string name="Name">Unlim_Bindable</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c4</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="BillboardGui" referent="RBXEE341CFEA98445049224E5BB7877E40C">
						<Properties>
							<bool name="Active">true</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">false</bool>
							<float name="Brightness">1</float>
							<bool name="ClipsDescendants">true</bool>
							<float name="DistanceLowerLimit">0</float>
							<float name="DistanceUpperLimit">-1</float>
							<Vector3 name="ExtentsOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="ExtentsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LightInfluence">1</float>
							<float name="MaxDistance">INF</float>
							<Ref name="PlayerToHideFrom">null</Ref>
							<UDim2 name="Size">
								<XS>5</XS>
								<XO>0</XO>
								<YS>3.5</YS>
								<YO>0</YO>
							</UDim2>
							<Vector2 name="SizeOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector3 name="StudsOffset">
								<X>0</X>
								<Y>5.5</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="StudsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<bool name="Enabled">false</bool>
							<bool name="ResetOnSpawn">true</bool>
							<token name="ZIndexBehavior">1</token>
							<bool name="AutoLocalize">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f5</UniqueId>
							<string name="Name">BetterAnimate_Debug</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c5</UniqueId>
						</Properties>
						<Item class="Frame" referent="RBX3C22EE917C2C46798C8FC6E26DACFEB5">
							<Properties>
								<token name="Style">0</token>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
								<bool name="AutoLocalize">true</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f6</UniqueId>
								<string name="Name">Main</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c6</UniqueId>
							</Properties>
							<Item class="TextLabel" referent="RBX5510E4DEAD354CADB040BD7F8EF7E4DE">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Tracks: 0</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f7</UniqueId>
									<string name="Name">Total</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c7</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX74D3C7AD9199492EA8286E7DFBA69BD9">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f8</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c8</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="UIGridLayout" referent="RBXE1E11A52D2FE4920AB12EECB8ADC69B7">
								<Properties>
									<UDim2 name="CellPadding">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<UDim2 name="CellSize">
										<XS>0.333000004</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<int name="FillDirectionMaxCells">0</int>
									<token name="StartCorner">0</token>
									<token name="FillDirection">0</token>
									<token name="HorizontalAlignment">1</token>
									<token name="SortOrder">2</token>
									<token name="VerticalAlignment">1</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008f9</UniqueId>
									<string name="Name">UIGridLayout</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008c9</UniqueId>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX10C5B31A78BB450584832B7066BAEEFA">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Class: Idle</string>
									<Color3 name="TextColor3">
										<R>0.984313786</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Class</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008ca</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXCBAE1C91E79D4C009C6608E06E39CEF3">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008fb</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008cb</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXF12E5D57EC3C45019DCD0305C514B5CD">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Direction: Forward</string>
									<Color3 name="TextColor3">
										<R>0.0666666701</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008fc</UniqueId>
									<string name="Name">Direction</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008cc</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXC1F520FCF1D64F6F8124EEB53FF30BEB">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008cd</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX15A0B543BEF2405EB05560F42A8B539B">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Timer: 0.0</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>1</G>
										<B>0.850980461</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008fe</UniqueId>
									<string name="Name">Timer</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008ce</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX1762033AC2054E4BAB9D988BF137031B">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb1000008ff</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008cf</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX50F14F4CFB0F4638A0BED524DCD584B0">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">ID: 123456789</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0.384313762</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb100000900</UniqueId>
									<string name="Name">ID</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d0</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX0C9537957CA74C5194CC09B58C535B61">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb100000901</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d1</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX71B6AA1BFD814EA09808A6A2B0D9DA46">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Speed: 0</string>
									<Color3 name="TextColor3">
										<R>0.831372619</R>
										<G>0</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cda</UniqueId>
									<string name="Name">Speed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d2</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX202BDDD0989F4B929D2D6D2C09AB8E4D">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cdb</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d3</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX9EFA0BA477684CA1B7E2DDC88CCD54A6">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">State: Test</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb100000904</UniqueId>
									<string name="Name">State</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d4</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXE384396DFC14412983DCDBE1CA93D955">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb100000905</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d5</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXACE8F6163455415390B7AD5BC798A749">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">State: Test</string>
									<Color3 name="TextColor3">
										<R>0.0392156877</R>
										<G>0.48627454</G>
										<B>0.262745112</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb100000906</UniqueId>
									<string name="Name">AnimationSpeed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d6</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX727F8045DD094A58B35D473089D34AAD">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">621d88d8fc68ada808ca1fb100000907</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d7</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="PackageLink" referent="RBX9C16961CAFFC412DA61108FC00114585">
						<Properties>
							<bool name="AutoUpdate">true</bool>
							<string name="DefaultName"></string>
							<int name="ModifiedState">-1</int>
							<Content name="PackageIdSerialize"><url>rbxassetid://135914655079448</url></Content>
							<BinaryString name="SerializedDefaultAttributes"></BinaryString>
							<int64 name="VersionIdSerialize">16</int64>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">1f28bc0680ccde1e08ca4603000007eb</UniqueId>
							<string name="Name">PackageLink</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">26cfd699bef0eb9408d42641000008d8</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBX388EA847CB774A0FA0879E61B9D19760">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000318</UniqueId>
		</Properties>
		<Item class="Tool" referent="RBXA91D8FEB36A949B1A15311A09FDF29E7">
			<Properties>
				<bool name="CanBeDropped">true</bool>
				<bool name="Enabled">true</bool>
				<CoordinateFrame name="Grip">
					<X>0</X>
					<Y>1.20000005</Y>
					<Z>0.699999988</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="ManualActivationOnly">false</bool>
				<bool name="RequiresHandle">true</bool>
				<string name="ToolTip">ToolNone</string>
				<Content name="TextureId"><null></null></Content>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">null</Ref>
				<float name="ScaleFactor">1</float>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>15</X>
						<Y>8</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CFrame>
				</OptionalCoordinateFrame>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Bucket</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100016118</UniqueId>
			</Properties>
			<Item class="Part" referent="RBX5928DF95EC2D4CE2B195CDCBF0250E3E">
				<Properties>
					<token name="shape">1</token>
					<token name="formFactorRaw">1</token>
					<bool name="Anchored">false</bool>
					<bool name="AudioCanCollide">true</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>15</X>
						<Y>8</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">false</bool>
					<bool name="CanTouch">false</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<bool name="EnableFluidForces">true</bool>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<bool name="Massless">true</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="size">
						<X>2</X>
						<Y>2.4000001</Y>
						<Z>2</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Handle</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100016119</UniqueId>
				</Properties>
				<Item class="SpecialMesh" referent="RBXDF37344684124CBB80A74E2889802DAB">
					<Properties>
						<token name="MeshType">5</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=25078175</url></Content>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=25077555</url></Content>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Mesh</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">75b80f531ed98f0306e5af210001611a</UniqueId>
					</Properties>
				</Item>
				<Item class="Sound" referent="RBXC18B31DBE51247AC808957029638CC3F">
					<Properties>
						<bool name="IsMutedForCapture">false</bool>
						<NumberRange name="LoopRegion">0 60000 </NumberRange>
						<bool name="Looped">false</bool>
						<bool name="PlayOnRemove">false</bool>
						<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
						<bool name="PlaybackRegionsEnabled">false</bool>
						<float name="PlaybackSpeed">1</float>
						<bool name="Playing">false</bool>
						<float name="RollOffMaxDistance">10000</float>
						<float name="RollOffMinDistance">10</float>
						<token name="RollOffMode">0</token>
						<Ref name="SoundGroup">null</Ref>
						<Content name="SoundId"><url>http://www.roblox.com/asset/?id=25078999</url></Content>
						<double name="TimePosition">0</double>
						<float name="Volume">0.5</float>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">IHasABucket</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">75b80f531ed98f0306e5af210001611b</UniqueId>
					</Properties>
				</Item>
				<Item class="Sound" referent="RBX0C85815CE2624ECF81DE1E3D8D9E1100">
					<Properties>
						<bool name="IsMutedForCapture">false</bool>
						<NumberRange name="LoopRegion">0 60000 </NumberRange>
						<bool name="Looped">false</bool>
						<bool name="PlayOnRemove">false</bool>
						<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
						<bool name="PlaybackRegionsEnabled">false</bool>
						<float name="PlaybackSpeed">1</float>
						<bool name="Playing">false</bool>
						<float name="RollOffMaxDistance">10000</float>
						<float name="RollOffMinDistance">10</float>
						<token name="RollOffMode">0</token>
						<Ref name="SoundGroup">null</Ref>
						<Content name="SoundId"><url>http://www.roblox.com/asset/?id=25081122</url></Content>
						<double name="TimePosition">0</double>
						<float name="Volume">0.5</float>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">StealingBucket</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">75b80f531ed98f0306e5af210001611c</UniqueId>
					</Properties>
				</Item>
				<Item class="Attachment" referent="RBXAF082DF0BD204C8B9C5A6FD60B376F33">
					<Properties>
						<CoordinateFrame name="CFrame">
							<X>0</X>
							<Y>0.75</Y>
							<Z>1</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<bool name="Visible">false</bool>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">RightGripAttachment</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">75b80f531ed98f0306e5af210001611d</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX7A5F4D257202474EAAB8BB0E4ACC40D9">
				<Properties>
					<ProtectedString name="Source"><![CDATA[Tool = script.Parent
local canStealBucket = 0
local stopStealingBucket = true

function onEquipped()

	if Tool.Handle.IHasABucket.IsPlaying == false and Tool.Handle.StealingBucket.IsPlaying == false then
		Tool.Handle.IHasABucket.Volume = 0.5
		Tool.Handle.IHasABucket:Play()
	end

end

function onUnequipped()

	Tool.Handle.IHasABucket.Volume = 0
	Tool.Handle.IHasABucket:Stop()
	if stopStealingBucket then
		Tool.Handle.StealingBucket:Stop()
	end
end


Tool.Equipped:connect(onEquipped)
Tool.Unequipped:connect(onUnequipped)


function onTouched(part)
	
	wait(0.1)
	humanoid = part.Parent:findFirstChild("Humanoid")

	if humanoid ~= nil and humanoid ~= Tool.Parent:FindFirstChild("Humanoid") and canStealBucket == 0 then
		
		objects = humanoid.Parent:getChildren()

		for i = 1,#objects do
			if objects[i].className == "Tool" then
				objects[i].Parent = game.Workspace
				break
			end
		end

		
			Tool.Handle.IHasABucket:Stop()
			Tool.Handle.StealingBucket.Volume = 0.5
			Tool.Handle.StealingBucket:Play()
			stopStealingBucket = false
			Tool.Parent = humanoid.Parent
			stopStealingBucket = true
			canStealBucket  = 4
			wait(1.3)
			Tool.Handle.StealingBucket:Stop()

			--Tool.Handle.IHasABucket:Play()

	end

end


Tool.Handle.Touched:connect(onTouched)

while true do

	if canStealBucket > 0 then
		canStealBucket = canStealBucket - 1
	else
		Tool.Handle.StealingBucket:Stop()
	end
	wait(1)
end
]]></ProtectedString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{D186F6E8-CA5E-4CF2-8908-9C1AA52D1556}</string>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">StealBucketScript</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af210001611e</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="StarterGui" referent="RBXB08EAFFC02444015B2FD0533855F505E">
		<Properties>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="RtlTextSupport">0</token>
			<token name="ScreenOrientation">4</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<Ref name="StudioDefaultStyleSheet">null</Ref>
			<Ref name="StudioInsertWidgetLayerCollectorAutoLinkStyleSheet">null</Ref>
			<token name="VirtualCursorMode">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">StarterGui</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000319</UniqueId>
		</Properties>
		<Item class="ScreenGui" referent="RBXACEBF36001634033815BDCB5AFE28A91">
			<Properties>
				<bool name="ClipToDeviceSafeArea">true</bool>
				<int name="DisplayOrder">0</int>
				<token name="SafeAreaCompatibility">1</token>
				<token name="ScreenInsets">2</token>
				<bool name="Enabled">true</bool>
				<bool name="ResetOnSpawn">true</bool>
				<token name="ZIndexBehavior">1</token>
				<bool name="AutoLocalize">true</bool>
				<Ref name="RootLocalizationTable">null</Ref>
				<token name="SelectionBehaviorDown">0</token>
				<token name="SelectionBehaviorLeft">0</token>
				<token name="SelectionBehaviorRight">0</token>
				<token name="SelectionBehaviorUp">0</token>
				<bool name="SelectionGroup">false</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Shiftlock</string>
				<int64 name="SourceAssetId">3638567355</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100008a61</UniqueId>
			</Properties>
			<Item class="ImageButton" referent="RBX0271342CD0B54760839C643DB297BED2">
				<Properties>
					<Content name="HoverImage"><null></null></Content>
					<Content name="Image"><null></null></Content>
					<Color3 name="ImageColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<Vector2 name="ImageRectOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector2 name="ImageRectSize">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<float name="ImageTransparency">0</float>
					<Content name="PressedImage"><null></null></Content>
					<token name="ResampleMode">0</token>
					<token name="ScaleType">0</token>
					<Rect2D name="SliceCenter">
						<min>
							<X>0</X>
							<Y>0</Y>
						</min>
						<max>
							<X>0</X>
							<Y>0</Y>
						</max>
					</Rect2D>
					<float name="SliceScale">1</float>
					<UDim2 name="TileSize">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<bool name="AutoButtonColor">true</bool>
					<Ref name="HoverHapticEffect">null</Ref>
					<bool name="Modal">false</bool>
					<Ref name="PressHapticEffect">null</Ref>
					<bool name="Selected">false</bool>
					<token name="Style">0</token>
					<bool name="Active">true</bool>
					<Vector2 name="AnchorPoint">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<token name="AutomaticSize">0</token>
					<Color3 name="BackgroundColor3">
						<R>1</R>
						<G>1</G>
						<B>1</B>
					</Color3>
					<float name="BackgroundTransparency">1</float>
					<Color3 name="BorderColor3">
						<R>0.105882362</R>
						<G>0.164705887</G>
						<B>0.207843155</B>
					</Color3>
					<token name="BorderMode">0</token>
					<int name="BorderSizePixel">1</int>
					<bool name="ClipsDescendants">false</bool>
					<bool name="Draggable">false</bool>
					<bool name="Interactable">true</bool>
					<int name="LayoutOrder">0</int>
					<Ref name="NextSelectionDown">null</Ref>
					<Ref name="NextSelectionLeft">null</Ref>
					<Ref name="NextSelectionRight">null</Ref>
					<Ref name="NextSelectionUp">null</Ref>
					<UDim2 name="Position">
						<XS>0.800000012</XS>
						<XO>0</XO>
						<YS>0.875</YS>
						<YO>0</YO>
					</UDim2>
					<float name="Rotation">0</float>
					<bool name="Selectable">true</bool>
					<Ref name="SelectionImageObject">null</Ref>
					<int name="SelectionOrder">0</int>
					<UDim2 name="Size">
						<XS>0.0500000007</XS>
						<XO>0</XO>
						<YS>0.0500000007</YS>
						<YO>0</YO>
					</UDim2>
					<token name="SizeConstraint">1</token>
					<bool name="Visible">true</bool>
					<int name="ZIndex">1</int>
					<bool name="AutoLocalize">true</bool>
					<Ref name="RootLocalizationTable">null</Ref>
					<token name="SelectionBehaviorDown">0</token>
					<token name="SelectionBehaviorLeft">0</token>
					<token name="SelectionBehaviorRight">0</token>
					<token name="SelectionBehaviorUp">0</token>
					<bool name="SelectionGroup">false</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">ImageButton</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100008a62</UniqueId>
				</Properties>
				<Item class="LocalScript" referent="RBX4FEC038139104F1E9F36382BA9F27DFB">
					<Properties>
						<ProtectedString name="Source"><![CDATA[local MobileCameraFramework = {}
local players = game:GetService("Players")
local runservice = game:GetService("RunService")
local CAS = game:GetService("ContextActionService")
local player = players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local humanoid = character.Humanoid
local camera = workspace.CurrentCamera
local button = script.Parent

--Visiblity
uis = game:GetService("UserInputService")
ismobile = uis.TouchEnabled
button.Visible = ismobile

local states = {
	OFF = "rbxasset://textures/ui/mouseLock_off@2x.png",
	ON = "rbxasset://textures/ui/mouseLock_on@2x.png"
}
local MAX_LENGTH = 900000
local active = false
local ENABLED_OFFSET = CFrame.new(1.7, 0, 0)
local DISABLED_OFFSET = CFrame.new(-1.7, 0, 0)
local function UpdateImage(STATE)
	button.Image = states[STATE]
end
local function UpdateAutoRotate(BOOL)
	humanoid.AutoRotate = BOOL
end
local function GetUpdatedCameraCFrame(ROOT, CAMERA)
	return CFrame.new(root.Position, Vector3.new(CAMERA.CFrame.LookVector.X * MAX_LENGTH, root.Position.Y, CAMERA.CFrame.LookVector.Z * MAX_LENGTH))
end
local function EnableShiftlock()
	UpdateAutoRotate(false)
	UpdateImage("ON")
	root.CFrame = GetUpdatedCameraCFrame(root, camera)
	camera.CFrame = camera.CFrame * ENABLED_OFFSET
end
local function DisableShiftlock()
	UpdateAutoRotate(true)
	UpdateImage("OFF")
	camera.CFrame = camera.CFrame * DISABLED_OFFSET
	pcall(function()
		active:Disconnect()
		active = nil
	end)
end
UpdateImage("OFF")
active = false
function ShiftLock()
	if not active then
		active = runservice.RenderStepped:Connect(function()
			EnableShiftlock()
		end)
	else
		DisableShiftlock()
	end
end
local ShiftLockButton = CAS:BindAction("ShiftLOCK", ShiftLock, false, "On")
CAS:SetPosition("ShiftLOCK", UDim2.new(0.8, 0, 0.8, 0))
button.MouseButton1Click:Connect(function()
	if not active then
		active = runservice.RenderStepped:Connect(function()
			EnableShiftlock()
		end)
	else
		DisableShiftlock()
	end
end)
return MobileCameraFramework
]]></ProtectedString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{B9073C20-8680-4820-9217-0E5BBD0D2CD4}</string>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">ShiftGUI</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100008a63</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="LocalScript" referent="RBX6D4774F2F0384539864CCA712FF4C498">
				<Properties>
					<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Settings = UserSettings()
local GameSettings = Settings.GameSettings
local ShiftLockController = {}
while not Players.LocalPlayer do
	wait()
end
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local ScreenGui, ShiftLockIcon, InputCn
local IsShiftLockMode = true
local IsShiftLocked = true
local IsActionBound = false
local IsInFirstPerson = false
ShiftLockController.OnShiftLockToggled = Instance.new("BindableEvent")
local function isShiftLockMode()
	return LocalPlayer.DevEnableMouseLock and GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch and LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.ClickToMove and GameSettings.ComputerMovementMode ~= Enum.ComputerMovementMode.ClickToMove and LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.Scriptable
end
if not UserInputService.TouchEnabled then
	IsShiftLockMode = isShiftLockMode()
end
local function onShiftLockToggled()
	IsShiftLocked = not IsShiftLocked
	ShiftLockController.OnShiftLockToggled:Fire()
end
local initialize = function()
	print("Shiftlock enabled")
end
function ShiftLockController:IsShiftLocked()
	return IsShiftLockMode and IsShiftLocked
end
function ShiftLockController:SetIsInFirstPerson(isInFirstPerson)
	IsInFirstPerson = isInFirstPerson
end
local function mouseLockSwitchFunc(actionName, inputState, inputObject)
	if IsShiftLockMode then
		onShiftLockToggled()
	end
end
local function disableShiftLock()
	if ScreenGui then
		ScreenGui.Parent = nil
	end
	IsShiftLockMode = false
	Mouse.Icon = ""
	if InputCn then
		InputCn:disconnect()
		InputCn = nil
	end
	IsActionBound = false
	ShiftLockController.OnShiftLockToggled:Fire()
end
local onShiftInputBegan = function(inputObject, isProcessed)
	if isProcessed then
		return
	end
	if inputObject.UserInputType ~= Enum.UserInputType.Keyboard or inputObject.KeyCode == Enum.KeyCode.LeftShift or inputObject.KeyCode == Enum.KeyCode.RightShift then
	end
end
local function enableShiftLock()
	IsShiftLockMode = isShiftLockMode()
	if IsShiftLockMode then
		if ScreenGui then
			ScreenGui.Parent = PlayerGui
		end
		if IsShiftLocked then
			ShiftLockController.OnShiftLockToggled:Fire()
		end
		if not IsActionBound then
			InputCn = UserInputService.InputBegan:connect(onShiftInputBegan)
			IsActionBound = true
		end
	end
end
GameSettings.Changed:connect(function(property)
	if property == "ControlMode" then
		if GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch then
			enableShiftLock()
		else
			disableShiftLock()
		end
	elseif property == "ComputerMovementMode" then
		if GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove then
			disableShiftLock()
		else
			enableShiftLock()
		end
	end
end)
LocalPlayer.Changed:connect(function(property)
	if property == "DevEnableMouseLock" then
		if LocalPlayer.DevEnableMouseLock then
			enableShiftLock()
		else
			disableShiftLock()
		end
	elseif property == "DevComputerMovementMode" then
		if LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.ClickToMove or LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable then
			disableShiftLock()
		else
			enableShiftLock()
		end
	end
end)
LocalPlayer.CharacterAdded:connect(function(character)
	if not UserInputService.TouchEnabled then
		initialize()
	end
end)
if not UserInputService.TouchEnabled then
	initialize()
	if isShiftLockMode() then
		InputCn = UserInputService.InputBegan:connect(onShiftInputBegan)
		IsActionBound = true
	end
end
enableShiftLock()
return ShiftLockController
]]></ProtectedString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<token name="RunContext">0</token>
					<string name="ScriptGuid">{8F7DE5BD-DFC1-48A0-A64F-60CAD3D8F238}</string>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">Shiflock for mobile</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100008a64</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="LocalizationService" referent="RBX1937BE62C987423C824AD76B62BBD598">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000031b</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBXBADBD16E3D544831A1B1804E077F6E46">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000320</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXEFDE0C15E8974BE8A1CD31EAD2E02C62">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000322</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBX67EE992DAD214FDE9650D80A15667F27">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000323</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBX36B2BFE0C0BC4F0B9D5597915FEF9B57">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000327</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBX575CD47B0C43414892D38BAE7785324A">
			<Properties>
				<string name="Value">{5228093E-0F12-434B-B7CC-D8879F03AA76}</string>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000377</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBX47A5E292D2C24B6B8BE36744D8346228">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000328</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX88D8D7A9F8634A50BADE101A7672517E">
		<Properties>
			<int name="MaxItems">1000</int>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000329</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX0F999F16940746309F8ACEBE5E1DF97E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000032a</UniqueId>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXCCB82E5D3BB84432AA7309FFF18B4633">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000032c</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBX9B088FAE7DEB42EDB0C7F58528FDE6AC">
		<Properties>
			<token name="AutomaticScaling">0</token>
			<bool name="AvatarGestures">false</bool>
			<token name="ControllerModels">1</token>
			<bool name="FadeOutViewOnCollision">true</bool>
			<token name="LaserPointer">1</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000330</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBXF3802197A64C4BCB9DDE681E4BE027B6">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000331</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBXD489DB00CABC4A169C897D8E824C9862">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000332</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX0930D3E17AA541EC904618C5CD770DCC">
		<Properties>
			<bool name="AllowInsertFreeAssets">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000333</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBXC87E1FED78E446A8A2C1B02664EF0603">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000334</UniqueId>
		</Properties>
	</Item>
	<Item class="AvatarSettings" referent="RBX09FF26FCF63B476EB431E37F22A266A9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">AvatarSettings</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">606192736f17902a089e422900000371</UniqueId>
		</Properties>
		<Item class="AvatarRules" referent="RBX91E6FCFF3FD54CC5AF326296676F4096">
			<Properties>
				<token name="AvatarType">2</token>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">DefaultAvatarRules</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">12f1de0cf81fe22e0901c5c600000c4a</UniqueId>
			</Properties>
			<Item class="AvatarBodyRules" referent="RBXB08483DC9F784371ABA81C6AFEA08AE4">
				<Properties>
					<token name="AppearanceMode">0</token>
					<token name="BuildMode">0</token>
					<int64 name="CustomBodyBundleId">0</int64>
					<token name="CustomBodyType">0</token>
					<NumberRange name="CustomBodyTypeScale">0 1 </NumberRange>
					<bool name="CustomEyebrowEnabled">false</bool>
					<int64 name="CustomEyebrowId">0</int64>
					<bool name="CustomEyelashEnabled">false</bool>
					<int64 name="CustomEyelashId">0</int64>
					<bool name="CustomFaceEnabled">false</bool>
					<int64 name="CustomFaceId">0</int64>
					<bool name="CustomHeadEnabled">false</bool>
					<int64 name="CustomHeadId">0</int64>
					<NumberRange name="CustomHeadScale">0.95 1 </NumberRange>
					<NumberRange name="CustomHeight">5.5 5.5 </NumberRange>
					<NumberRange name="CustomHeightScale">0.9 1.05 </NumberRange>
					<bool name="CustomLeftArmEnabled">false</bool>
					<int64 name="CustomLeftArmId">0</int64>
					<bool name="CustomLeftLegEnabled">false</bool>
					<int64 name="CustomLeftLegId">0</int64>
					<bool name="CustomMoodEnabled">false</bool>
					<int64 name="CustomMoodId">0</int64>
					<NumberRange name="CustomProportionsScale">0 1 </NumberRange>
					<bool name="CustomRightArmEnabled">false</bool>
					<int64 name="CustomRightArmId">0</int64>
					<bool name="CustomRightLegEnabled">false</bool>
					<int64 name="CustomRightLegId">0</int64>
					<bool name="CustomTorsoEnabled">false</bool>
					<int64 name="CustomTorsoId">0</int64>
					<NumberRange name="CustomWidthScale">0.7 1 </NumberRange>
					<bool name="KeepPlayerHead">true</bool>
					<token name="ScaleMode">0</token>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">AvatarBodyRules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">12f1de0cf81fe22e0901c5c600000c4b</UniqueId>
				</Properties>
			</Item>
			<Item class="AvatarCollisionRules" referent="RBX3F4C93C84BB8426AB40B04754924E17D">
				<Properties>
					<token name="CollisionMode">0</token>
					<token name="HitAndTouchDetectionMode">0</token>
					<token name="LegacyCollisionMode">1</token>
					<Vector3 name="SingleColliderSize">
						<X>2</X>
						<Y>3</Y>
						<Z>1</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">AvatarCollisionRules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">12f1de0cf81fe22e0901c5c600000c4c</UniqueId>
				</Properties>
			</Item>
			<Item class="AvatarAnimationRules" referent="RBXBA8A4A6679DB41F893B9C7EA6B60CDE4">
				<Properties>
					<token name="AnimationClipsMode">0</token>
					<token name="AnimationPacksMode">0</token>
					<bool name="CustomClimbAnimationEnabled">false</bool>
					<int64 name="CustomClimbAnimationId">0</int64>
					<bool name="CustomFallAnimationEnabled">false</bool>
					<int64 name="CustomFallAnimationId">0</int64>
					<bool name="CustomIdleAlt1AnimationEnabled">false</bool>
					<int64 name="CustomIdleAlt1AnimationId">0</int64>
					<bool name="CustomIdleAlt2AnimationEnabled">false</bool>
					<int64 name="CustomIdleAlt2AnimationId">0</int64>
					<bool name="CustomIdleAnimationEnabled">false</bool>
					<int64 name="CustomIdleAnimationId">0</int64>
					<bool name="CustomJumpAnimationEnabled">false</bool>
					<int64 name="CustomJumpAnimationId">0</int64>
					<bool name="CustomRunAnimationEnabled">false</bool>
					<int64 name="CustomRunAnimationId">0</int64>
					<bool name="CustomSwimAnimationEnabled">false</bool>
					<int64 name="CustomSwimAnimationId">0</int64>
					<bool name="CustomSwimIdleAnimationEnabled">false</bool>
					<int64 name="CustomSwimIdleAnimationId">0</int64>
					<bool name="CustomWalkAnimationEnabled">false</bool>
					<int64 name="CustomWalkAnimationId">0</int64>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">AvatarAnimationRules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">12f1de0cf81fe22e0901c5c600000c4d</UniqueId>
				</Properties>
			</Item>
			<Item class="AvatarAccessoryRules" referent="RBXDF1AA23613CD40F5B66E4A45D77A5C81">
				<Properties>
					<token name="AccessoryMode">0</token>
					<token name="CustomAccessoryMode">0</token>
					<bool name="CustomBackAccessoryEnabled">false</bool>
					<int64 name="CustomBackAccessoryId">0</int64>
					<bool name="CustomFaceAccessoryEnabled">false</bool>
					<int64 name="CustomFaceAccessoryId">0</int64>
					<bool name="CustomFrontAccessoryEnabled">false</bool>
					<int64 name="CustomFrontAccessoryId">0</int64>
					<bool name="CustomHairAccessoryEnabled">false</bool>
					<int64 name="CustomHairAccessoryId">0</int64>
					<bool name="CustomHeadAccessoryEnabled">false</bool>
					<int64 name="CustomHeadAccessoryId">0</int64>
					<bool name="CustomNeckAccessoryEnabled">false</bool>
					<int64 name="CustomNeckAccessoryId">0</int64>
					<bool name="CustomShoulderAccessoryEnabled">false</bool>
					<int64 name="CustomShoulderAccessoryId">0</int64>
					<bool name="CustomWaistAccessoryEnabled">false</bool>
					<int64 name="CustomWaistAccessoryId">0</int64>
					<bool name="EnableSound">true</bool>
					<bool name="EnableVFX">true</bool>
					<Vector3 name="LimitBounds">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="LimitMethod">1</token>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">AvatarAccessoryRules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">12f1de0cf81fe22e0901c5c600000c4e</UniqueId>
				</Properties>
			</Item>
			<Item class="AvatarClothingRules" referent="RBXE96E1B683F4548D9AB3AC6719C78C404">
				<Properties>
					<token name="ClothingMode">0</token>
					<bool name="CustomClassicPantsAccessoryEnabled">false</bool>
					<int64 name="CustomClassicPantsAccessoryId">0</int64>
					<bool name="CustomClassicShirtsAccessoryEnabled">false</bool>
					<int64 name="CustomClassicShirtsAccessoryId">0</int64>
					<bool name="CustomClassicTShirtsAccessoryEnabled">false</bool>
					<int64 name="CustomClassicTShirtsAccessoryId">0</int64>
					<token name="CustomClothingMode">0</token>
					<bool name="CustomDressSkirtAccessoryEnabled">false</bool>
					<int64 name="CustomDressSkirtAccessoryId">0</int64>
					<bool name="CustomJacketAccessoryEnabled">false</bool>
					<int64 name="CustomJacketAccessoryId">0</int64>
					<bool name="CustomLeftShoesAccessoryEnabled">false</bool>
					<int64 name="CustomLeftShoesAccessoryId">0</int64>
					<bool name="CustomPantsAccessoryEnabled">false</bool>
					<int64 name="CustomPantsAccessoryId">0</int64>
					<bool name="CustomRightShoesAccessoryEnabled">false</bool>
					<int64 name="CustomRightShoesAccessoryId">0</int64>
					<bool name="CustomShirtAccessoryEnabled">false</bool>
					<int64 name="CustomShirtAccessoryId">0</int64>
					<bool name="CustomShortsAccessoryEnabled">false</bool>
					<int64 name="CustomShortsAccessoryId">0</int64>
					<bool name="CustomSweaterAccessoryEnabled">false</bool>
					<int64 name="CustomSweaterAccessoryId">0</int64>
					<bool name="CustomTShirtAccessoryEnabled">false</bool>
					<int64 name="CustomTShirtAccessoryId">0</int64>
					<Vector3 name="LimitBounds">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">AvatarClothingRules</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">12f1de0cf81fe22e0901c5c600000c4f</UniqueId>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBX0C2054F43CFA4AA4857731D13C597753">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">LuaWebService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">12f1de0cf81fe22e0901c5c600000d3e</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBX28FDAF5DDBF8403B86F70271F50A1AA7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">76dd625821fb95000901d48e00000376</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBX47559D807DE84332BE2488E777A5B5C9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000345</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBX007269A16A084BA08B2D5E9AC1FC35BE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">BetterAnimate [Deprecated]</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008897</UniqueId>
			</Properties>
			<Item class="Folder" referent="RBX515A973821E64962B5D2E019B64B8DA6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">1.1.3.3</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000c877</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBX1E9F539E6C1D475095609989F4ED2A57">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Archive</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000c878</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBX87005E57FADA4EFEAA83913FE462EF2F">
					<Properties>
						<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, Task
local CurrentAnimSpeed = 1
local Current_PlayingEmote, Jumping = false, false
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}
local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function OnDied() Pose = "dead" DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() end

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
	end
	return Num
end

function AnimEnded() -- ForDances
	Current_PlayingEmote = false
	RepeatPose("idle")
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	-- switch animation		
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1))
	return AnimationLength
end

function RepeatPose(RepeatPose : string) -- Using for idle animation switch, you can use this for swimidle, sit and ect (if you know how)
	Pose = RepeatPose
	if RepeatAnims[RepeatPose] then task.cancel(RepeatAnims[RepeatPose]) end
	RepeatAnims[RepeatPose] = task.spawn(function()
		while Pose == RepeatPose do
			local AnimChangeSpeed = PlayAnimation(RepeatPose, 0.2)
			task.wait(AnimChangeSpeed)
		end 
	end)
end

function StopRepeatingAnims() for _, Task in RepeatAnims :: {thread} do task.cancel(Task) end end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight
			AnimClassTable.TotalWeight += Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						PlayAnimation("temp")
						PlayAnimation(Name)
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					AnimClassTable.TotalWeight -= Weight
					Table.Weight = UpdatedWeight
					AnimClassTable.TotalWeight += UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
	Current_PlayingEmote = true
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	script:SetAttribute("RunSpeed", Speed)
	local HeightScale = GetHeightScale()
	local MovedDuringEmote = Current_PlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local SpeedThreshold = MovedDuringEmote and (Humanoid.WalkSpeed / HeightScale) or 0.75
	if Speed > SpeedThreshold * HeightScale then
		if Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
		else PlayAnimation("run", 0.2, Speed)
		end
	else
		if not EmoteNames[CurrentAnimation] and not Current_PlayingEmote then
			RepeatPose("idle")
		end
	end
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.05) until JumpAnimTime <= 0
	if Pose == "fall" then PlayAnimation("fall", 0.1) end
end

function OnJumping()
	Jumping = true
	PlayAnimation("jump", 0.1)
	FallDelta(0.31)
	Jumping = false
end

function OnFreeFall()
	Pose = "fall"
	if not Jumping then FallDelta(0.07) end
end

function OnClimbing(Speed : number) PlayAnimation("climb", 0.1, Speed) end

function OnGettingUp() Pose = "gettingup" StopAllPosesAnimations() end

function OnFallingDown() Pose = "falldown" StopAllPosesAnimations() end

function OnSeated() PlayAnimation("sit", 0.5) end

function OnPlatformStanding() Pose = "platformstanding" StopAllPosesAnimations() end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function OnSwimming(Speed : number)
	if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
	else PlayAnimation("swimidle", 0.4)
	end
end

function AdjustSpeed(Speed : number)
	while true do
		local RunSpeed = Speed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(0.15)
	end
end

function SetAnimationSpeed(Speed : number)
	if Task then task.cancel(Task) end
	Task = task.spawn(AdjustSpeed, Speed)
end

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
Humanoid.Died:Once(OnDied)
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.GettingUp:Connect(OnGettingUp))
table.insert(Events, Humanoid.FreeFalling:Connect(OnFreeFall))
table.insert(Events, Humanoid.FallingDown:Connect(OnFallingDown))
table.insert(Events, Humanoid.Seated:Connect(OnSeated))
table.insert(Events, Humanoid.PlatformStanding:Connect(OnPlatformStanding))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if Pose == "idle" then -- Only play Emotes when idling
		StopRepeatingAnims()
		if EmoteNames[EmoteInvoke] then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

RepeatPose("idle")]]></ProtectedString>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{CAEE033C-DC3E-4D0B-8FF0-32BF89DF5CC3}</string>
						<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Animate</string>
						<int64 name="SourceAssetId">16697831083</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000e7a9</UniqueId>
					</Properties>
					<Item class="BindableFunction" referent="RBX5E9A654BFB3946929C2C3D3F3484BB2F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PlayEmote</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000e7aa</UniqueId>
						</Properties>
					</Item>
					<Item class="Script" referent="RBXA8F7E17E4E794A728C5F8651B986607E">
						<Properties>
							<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{137261D1-B5BF-4DC4-B305-519A620048CD}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">AnimSet</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000e7ab</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBXF3C7409F758A41EC9139621BE1DFEADA">
					<Properties>
						<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"

local Current_AnimationTrack, Current_AnimationInstance, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnim, ToolAnimationName, Emote, Task, Jumping
local LastTick, NonRepeatingNumberm = 0, 0
local Current_PlayingEmote = false
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnimations, FastAnimationLink = {}, {}, {}, {}, {}
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}
local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

local AnimNames = {

	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation

				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		} :: {},

	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event in Events do Event:Disconnect() end end 

function OnDied() Pose = "dead" DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() end

function StopPlayingAnimations()
	for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end 
end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnim = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
		Num += 1
	end
	return Num
end

function AnimEnded() -- ForDances
	Current_PlayingEmote = false
	RepeatPose("idle")
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	-- switch animation		
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnim = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1))
	return AnimationLength
end

function RepeatPose(RepeatPose : string)
	Pose = RepeatPose
	if RepeatAnimations[RepeatPose] then task.cancel(RepeatAnimations[RepeatPose]) end
	RepeatAnimations[RepeatPose] = task.spawn(function()
		while Pose == RepeatPose do
			local AnimChangeSpeed = PlayAnimation(RepeatPose, 0.2)
			task.wait(AnimChangeSpeed)
		end 
	end)
end

function StopRepeatingAnims() for _, Task in RepeatAnimations :: {thread} do task.cancel(Task) end end

function AdjustSpeed(Speed : number)
	while true do
		local RunSpeed = Speed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		Current_AnimationTrack:AdjustSpeed(RunSpeed)
		task.wait(0.15)
	end
end

function SetAnimationSpeed(Speed : number)
	if Task then task.cancel(Task) end
	Task = task.spawn(AdjustSpeed, Speed)
end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string, FileList : {{Id : string, Weight : number}})
	
	local Config = script:FindFirstChild(Name)
	local Folder
	if Config then
		Folder = Instance.new("Folder", script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		Folder = Instance.new("Folder", script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
	
	
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	Config = Folder -- Look for Animation Folder / StringValue

	local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
		local Table = {}
		local AnimationName = Animation.Name
		local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
		Animation:SetAttribute("ChangeTo", "")
		PreLoadAnim(Animation)

		while AnimTable[Name][Index] do Index += 1 end -- Get unused number
		FastAnimationLink[Animation] = Index
		AnimTable[Name][Index] = Table
		Table.Anim = Animation
		Table.Weight = Weight
		AnimClassTable.TotalWeight += Weight


		table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

			---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

			if AttrbuteName == "ChangeTo" then
				local AnimationId = Animation:GetAttribute("ChangeTo")			
				local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
				local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
				CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")

				PreLoadAnim(CreatedAnimation)
				Table.Anim = CreatedAnimation
				if Current_AnimationInstance == Animation then
					PlayAnimation("temp")
					PlayAnimation(Name)
				end
				------------------------------------------------------------------------

			elseif AttrbuteName == "Weight" then
				local UpdatedWeight = Animation:GetAttribute("Weight") or 1
				AnimClassTable.TotalWeight -= Weight
				Table.Weight = UpdatedWeight
				AnimClassTable.TotalWeight += UpdatedWeight
			end				
		end))

	end

	table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
		if Added:IsA("Animation") then
			if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
			AnimationConfiguration(Config, Added, 1)
		end
	end))

	table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
		if Removed:IsA("Animation") then
			local Index = FastAnimationLink[Removed]
			FastAnimationLink[Removed] = nil
			AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
			AnimTable[Name][Index] = nil -- Removing from AnimTable
		end
	end))

	for I, Animation in Config:GetChildren() do
		if Animation:IsA("Animation") then
			AnimationConfiguration(Config, Animation, I)
		end
	end
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimationName, 0) end

function PlayToolAnimation(AnimtionName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimtionName)
	local Animation = AnimTable[AnimtionName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimationName = AnimtionName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimationName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	script:SetAttribute("RunSpeed", Speed)
	local HeightScale = GetHeightScale()
	local MovedDuringEmote = Current_PlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local SpeedThreshold = MovedDuringEmote and (Humanoid.WalkSpeed / HeightScale) or 0.75
	if Speed > SpeedThreshold * HeightScale then
		if Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
		else PlayAnimation("run", 0.2, Speed)
		end
	else
		if not EmoteNames[CurrentAnim] and not Current_PlayingEmote then
			RepeatPose("idle")
		end
	end
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.05) until JumpAnimTime <= 0
	if Pose == "fall" then PlayAnimation("fall", 0.1) end
end

function OnJumping()
	Jumping = true
	PlayAnimation("jump", 0.1)
	FallDelta(0.31)
	Jumping = false
end

function OnFreeFall()
	Pose = "fall"
	if not Jumping then FallDelta(0.07) end
end

function OnClimbing(Speed : number) PlayAnimation("climb", 0.1, Speed) end

function OnGettingUp() Pose = "gettingup" StopAllPosesAnimations() end

function OnFallingDown() Pose = "falldown" StopAllPosesAnimations() end

function OnSeated() PlayAnimation("sit", 0.5) end

function OnPlatformStanding() Pose = "platformstanding" StopAllPosesAnimations() end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function OnSwimming(Speed : number)
	if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
	else PlayAnimation("swimidle", 0.4)
	end
end


repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name :: string, FileList :: {{Id : string, Weight : number}}) end

-- Connect events
Humanoid.Died:Once(OnDied)
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.GettingUp:Connect(OnGettingUp))
table.insert(Events, Humanoid.FreeFalling:Connect(OnFreeFall))
table.insert(Events, Humanoid.FallingDown:Connect(OnFallingDown))
table.insert(Events, Humanoid.Seated:Connect(OnSeated))
table.insert(Events, Humanoid.PlatformStanding:Connect(OnPlatformStanding))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

RepeatPose("idle")]]></ProtectedString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{2F544A2A-5144-4227-B326-109E07EDBE34}</string>
						<BinaryString name="AttributesSerialize">AgAAAA4AAABBbmltYXRpb25TcGVlZAYAAAAAAAAAAAgAAABSdW5TcGVlZAYAAAAAAAAAAA==</BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Animate</string>
						<int64 name="SourceAssetId">18990422140</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000e7e5</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX20D6B610F1F0414CB48E16CF62ABFF8A">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">1.1.4</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000c879</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBX81C0027D7D5C40C1AEF399069596700B">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Archive</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000c87a</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBXAC6DDD75A407426CA9269BA09DC4A56F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">V7 (BEST)</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000dbad</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBX15B260F03E9845459DC1CB61615A9686">
							<Properties>
								<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.035 -- Bigger value = less script activity + more unstable
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31
local WaitBeforeFallAnimation = 0.1

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, GetStateHelper
local Current_AnimationSpeed = 1
local Current_PlayingEmote, Alive = false, true
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}

local Class_Speed = 
	{
		climb = 0,
		run = 0,
		swim = 0,
	}

local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
	end
	return Num
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function AdjustSpeed()
	while Alive do
		local RunSpeed = Current_AnimationSpeed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	Current_AnimationSpeed = (Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1)
	return AnimationLength
end

function AnimEnded() Current_PlayingEmote = false end -- ForDances 

function StopRepeatingAnims() for _, Task in RepeatAnims :: {thread} do task.cancel(Task) end end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight
			AnimClassTable.TotalWeight += Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						GetStateHelper = Enum.HumanoidStateType.None
						--PlayAnimation("temp")
						--PlayAnimation(Name)
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					AnimClassTable.TotalWeight -= Weight
					Table.Weight = UpdatedWeight
					AnimClassTable.TotalWeight += UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
	Current_PlayingEmote = true
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	script:SetAttribute("RunSpeed", Speed)
	Class_Speed.run = Speed
end

function FallDelta(JumpAnimTime : number)
	repeat  JumpAnimTime -= task.wait(0.035) until JumpAnimTime <= 0
	if Humanoid:GetState() == Enum.HumanoidStateType.Freefall then PlayAnimation("fall", 0.1) end
end

function OnJumping() GetStateHelper = Enum.HumanoidStateType.Jumping end
function OnClimbing(Speed : number) Class_Speed.climb = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed) end
function OnSwimming(Speed : number) Class_Speed.swim = math.clamp(Speed, 0, Humanoid.WalkSpeed) end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if Pose == "idle" then -- Only play Emotes when idling
		StopRepeatingAnims()
		if EmoteNames[EmoteInvoke] then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

local PosesLogic = 
	{
		
		[Enum.HumanoidStateType.Jumping] = function()
			PlayAnimation("jump", 0.1)
			FallDelta(WaitBeforeFallAnimationPlayAfterJump)
			repeat task.wait(0.02) until Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall
			GetStateHelper = false
		end,
		
		[Enum.HumanoidStateType.Freefall] = function() FallDelta(WaitBeforeFallAnimation) end,
		
		[Enum.HumanoidStateType.GettingUp] = function() StopAllPosesAnimations() end,	
		[Enum.HumanoidStateType.FallingDown] = function() StopAllPosesAnimations() end,	
		[Enum.HumanoidStateType.PlatformStanding] = function() StopAllPosesAnimations() end,
		
		[Enum.HumanoidStateType.Running] = function()
			local Speed = Class_Speed.run
			if Speed < 0.4 then if not EmoteNames[CurrentAnimation] and not Current_PlayingEmote then PlayAnimation("idle", 0.2) end
			elseif Speed >= 0.4 and Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
			else PlayAnimation("run", 0.2, Speed)
			end
		end,
		
		[Enum.HumanoidStateType.Seated] = function() PlayAnimation("sit", 0.5) end,
		
		[Enum.HumanoidStateType.Dead] = function() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() Alive = false end,
		
		[Enum.HumanoidStateType.Swimming] = function()
			local Speed = Class_Speed.swim
			if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
			else PlayAnimation("swimidle", 0.4)
			end
		end,
		
		[Enum.HumanoidStateType.Climbing] = function()
			PlayAnimation("climb", 0.2, Class_Speed.climb)
		end,
		
		[Enum.HumanoidStateType.None] = function()
			PlayAnimation("temp")
			GetStateHelper = false
		end,
	}	

function PoseUpdater()
	while Alive do -- yes i know i can use task.wait(), not "true"
		local State = Humanoid:GetState()
		if GetStateHelper then PosesLogic[GetStateHelper]()
		elseif PosesLogic[State] then PosesLogic[State]()
		end
		--PosesLogic[GetStateHelper or Humanoid:GetState()]()
		task.wait(WaitBeforeUpdatePose)
	end
end

task.delay(1, AdjustSpeed)
PoseUpdater()]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{C84D5EA2-D983-4574-AE09-BA88A04E4752}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000dbae</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBX2639543A66D64639B5E5F2BB32C0EE8B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000dbaf</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBX9616BC6127184E41916B05BE30C22AF5">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{2AF452B9-D399-4C8D-B27D-F6AF200985AE}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000dbb0</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX63EEF4B87C4A430D99497FD13DF92D02">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">V6 (Like V5)</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000ad8a</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBXB5E78BC7A7FB49C1BFBA7EDC2E2BF675">
							<Properties>
								<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.03
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31
local WaitBeforeFallAnimation = 0.09

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, AdjustSpeedTask, UpdatePoseTask
local CurrentAnimSpeed = 1
local Current_PlayingEmote = false
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}
local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
	end
	return Num
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	-- switch animation		
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function AdjustSpeed(Speed : number)
	while true do
		local RunSpeed = Speed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function SetAnimationSpeed(Speed : number)
	if AdjustSpeedTask then task.cancel(AdjustSpeedTask) end
	AdjustSpeedTask = task.spawn(AdjustSpeed, Speed)
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	if Pose == AnimClassName and AnimationSpeedAdjust[AnimClassName] then SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1)) return end -- if its playing just change animation speed
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1))
	return AnimationLength
end

local NextToPlay = function() PlayAnimation("idle", 0.2) end

function OnDied() NextToPlay = function() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() task.cancel(UpdatePoseTask) end end

function AnimEnded() -- ForDances
	Current_PlayingEmote = false
	NextToPlay = function() PlayAnimation("idle", 0.2) end
end

function StopRepeatingAnims() for _, Task in RepeatAnims :: {thread} do task.cancel(Task) end end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight
			AnimClassTable.TotalWeight += Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						NextToPlay = function()
							PlayAnimation("temp")
							PlayAnimation(Name)
						end
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					AnimClassTable.TotalWeight -= Weight
					Table.Weight = UpdatedWeight
					AnimClassTable.TotalWeight += UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
	Current_PlayingEmote = true
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	warn(Speed)
	script:SetAttribute("RunSpeed", Speed)
	local HeightScale = GetHeightScale()
	local MovedDuringEmote = Current_PlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local SpeedThreshold = MovedDuringEmote and (Humanoid.WalkSpeed / HeightScale) or 0.75
	if Speed > SpeedThreshold * HeightScale then
		if Speed <= 9 then NextToPlay = function() PlayAnimation("walk", 0.2, Speed) end
		else NextToPlay = function() PlayAnimation("run", 0.2, Speed) end
		end
	else
		if not EmoteNames[CurrentAnimation] and not Current_PlayingEmote then NextToPlay = function() PlayAnimation("idle", 0.2) end end
	end
end

function FallDelta(JumpAnimTime : number, UntilPose : string)
	repeat 
		JumpAnimTime -= task.wait(0.035)
		if JumpAnimTime <= 0 then NextToPlay = function() PlayAnimation("fall", 0.1) end break end
	until Pose ~= UntilPose
end

function OnJumping()
	if Pose == "jump" then return end Pose = "jump"
	NextToPlay = function() PlayAnimation("jump", 0.1) end
	FallDelta(WaitBeforeFallAnimationPlayAfterJump, "jump")
end

function OnFreeFall()
	if Pose == "jump" or Pose == "fall" then return end 
	warn("+++++++++++++++++++++++++++++++++++++++++++")
	NextToPlay = function() Pose = "fall" end
	FallDelta(WaitBeforeFallAnimation, "fall")
end

function OnClimbing(Speed : number) warn("=============================================================") NextToPlay = function() PlayAnimation("climb", 0.1, Speed) end end

function OnGettingUp() NextToPlay = function() Pose = "gettingup" StopAllPosesAnimations() end end

function OnFallingDown() NextToPlay = function() Pose = "falldown" StopAllPosesAnimations() end end

function OnSeated() NextToPlay = function() PlayAnimation("sit", 0.5) end end

function OnPlatformStanding() NextToPlay = function() Pose = "platformstanding" StopAllPosesAnimations() end end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function OnSwimming(Speed : number)
	if Speed > 3 then NextToPlay = function() PlayAnimation("swim", 0.4, Speed) end -- Special (if player jump in water his speed multiples by 5)
	else NextToPlay = function() PlayAnimation("swimidle", 0.4) end
	end
end

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
Humanoid.Died:Once(OnDied)
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.GettingUp:Connect(OnGettingUp))
table.insert(Events, Humanoid.FreeFalling:Connect(OnFreeFall))
table.insert(Events, Humanoid.FallingDown:Connect(OnFallingDown))
table.insert(Events, Humanoid.Seated:Connect(OnSeated))
table.insert(Events, Humanoid.PlatformStanding:Connect(OnPlatformStanding))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if Pose == "idle" then -- Only play Emotes when idling
		StopRepeatingAnims()
		if EmoteNames[EmoteInvoke] then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

function PoseUpdater()
	local PoseChange : thread = task.delay(WaitBeforeUpdatePose * 99, function() end)
	while true do -- yes i know i can use task.wait(), not "true"
		task.cancel(PoseChange)
		PoseChange = task.spawn(NextToPlay)
		task.wait(WaitBeforeUpdatePose)
	end
end

UpdatePoseTask = task.spawn(PoseUpdater)
]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{4412C343-3AE1-4E26-B9AD-B58308B778CC}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000ad8b</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBXF2B8EF12B84B41EA80C20D1BA2113370">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000ad8c</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBX1BCC9C5E7D5C4A47B4B2A692CD789543">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{88C0316C-5A76-4263-8035-C026F9C4E9A5}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0bbdee1caba14a7f06e743250000ad8d</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX56D5AA1382EB47BA9A217A1C6D637E80">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">V5 (GOOD, NEEDS SOME FIXES)</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000c05c</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBX1B58DE8613A14C99A0EDEEA61427D1E8">
							<Properties>
								<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.03
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, AdjustSpeedTask, UpdatePoseTask
local CurrentAnimSpeed = 1
local Current_PlayingEmote = false
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}
local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function OnDied() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() task.cancel(UpdatePoseTask) end

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
	end
	return Num
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	-- switch animation		
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	warn(AnimClassName)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1))
	return AnimationLength
end

local NextToPlay = function() PlayAnimation("idle", 0.2) end

function AnimEnded() -- ForDances
	Current_PlayingEmote = false
	NextToPlay = function() PlayAnimation("idle", 0.2) end
end

function StopRepeatingAnims() for _, Task in RepeatAnims :: {thread} do task.cancel(Task) end end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight
			AnimClassTable.TotalWeight += Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						NextToPlay = function()
							PlayAnimation("temp")
							PlayAnimation(Name)
						end
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					AnimClassTable.TotalWeight -= Weight
					Table.Weight = UpdatedWeight
					AnimClassTable.TotalWeight += UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
	Current_PlayingEmote = true
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	script:SetAttribute("RunSpeed", Speed)
	local HeightScale = GetHeightScale()
	local MovedDuringEmote = Current_PlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local SpeedThreshold = MovedDuringEmote and (Humanoid.WalkSpeed / HeightScale) or 0.75
	if Speed > SpeedThreshold * HeightScale then
		if Speed <= 9 then NextToPlay = function() PlayAnimation("walk", 0.2, Speed) end
		else NextToPlay = function() PlayAnimation("run", 0.2, Speed) end
		end
	else
		if not EmoteNames[CurrentAnimation] and not Current_PlayingEmote then NextToPlay = function() PlayAnimation("idle", 0.2) end end
	end
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.03) until JumpAnimTime <= 0
	if Pose == "jump" then NextToPlay = function() PlayAnimation("fall", 0.1) end end
end

function OnJumping()
	if Pose == "jump" then return end Pose = "jump"
	NextToPlay = function() warn(2) PlayAnimation("jump", 0.1) end
	FallDelta(WaitBeforeFallAnimationPlayAfterJump)
end

local FallTask = task.spawn(tick)
function OnFreeFall()
	if Pose == "jump" or Pose == "fall" then return end warn(3) Pose = "fall"
	task.cancel(FallTask)
	FallTask = task.delay(0.07, function()
		if Pose == "fall" then NextToPlay = function() warn(1) PlayAnimation("fall", 0.1) end end
	end)
end

function OnClimbing(Speed : number) NextToPlay = function() PlayAnimation("climb", 0.1, Speed) end end

function OnGettingUp() Pose = "gettingup" StopAllPosesAnimations() end

function OnFallingDown() Pose = "falldown" StopAllPosesAnimations() end

function OnSeated() NextToPlay = function() PlayAnimation("sit", 0.5) end end

function OnPlatformStanding() Pose = "platformstanding" StopAllPosesAnimations() end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function OnSwimming(Speed : number)
	if Speed > 3 then NextToPlay = function() PlayAnimation("swim", 0.4, Speed) end -- Special (if player jump in water his speed multiples by 5)
	else NextToPlay = function() PlayAnimation("swimidle", 0.4) end
	end
end

function AdjustSpeed(Speed : number)
	while true do
		local RunSpeed = Speed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function SetAnimationSpeed(Speed : number)
	if AdjustSpeedTask then task.cancel(AdjustSpeedTask) end
	AdjustSpeedTask = task.spawn(AdjustSpeed, Speed)
end

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
Humanoid.Died:Once(OnDied)
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.GettingUp:Connect(OnGettingUp))
table.insert(Events, Humanoid.FreeFalling:Connect(OnFreeFall))
table.insert(Events, Humanoid.FallingDown:Connect(OnFallingDown))
table.insert(Events, Humanoid.Seated:Connect(OnSeated))
table.insert(Events, Humanoid.PlatformStanding:Connect(OnPlatformStanding))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if Pose == "idle" then -- Only play Emotes when idling
		StopRepeatingAnims()
		if EmoteNames[EmoteInvoke] then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

function PoseUpdater()
	local PoseChange : thread = task.delay(WaitBeforeUpdatePose * 99, function() end)
	while true do -- yes i know i can use task.wait(), not "true"
		task.cancel(PoseChange)
		PoseChange = task.spawn(NextToPlay)
		task.wait(WaitBeforeUpdatePose)
	end
end

UpdatePoseTask = task.spawn(PoseUpdater)
]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{FC4C70F4-C26F-439F-8F64-0867DBDB5525}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000c05d</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBX1E200FB9053446A4B36A08C3EBE23432">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000c05e</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBXE2D9CD02C9FB4E1EBEE3758F91ABE3DF">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{CA5266BC-257B-4A47-BB2F-47EE7294D823}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000c05f</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX6291226768B64E55A2A27C47F5D8DA76">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">V4 (Meh)</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000b745</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBXD6FD8683863347F3AA954E6078FD1521">
							<Properties>
								<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, Task
local CurrentAnimSpeed = 1
local Current_PlayingEmote, Jumping = false, false
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}

local PosesDelta = 
	{
		jump = {0, 0.05}, -- Now, Max
		swim = {0, 0.1},
		run = {0, 0.2},
		walk = {0, 0.2},
	}
local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function OnDied() Pose = "dead" DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() end

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
	end
	return Num
end

function AnimEnded() -- ForDances
	Current_PlayingEmote = false
	RepeatPose("idle")
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	-- switch animation		
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	if PosesDelta[AnimClassName] then
		if PosesDelta[AnimClassName][1] > 0 then return end
		PosesDelta[AnimClassName][1] = PosesDelta[AnimClassName][2]
	end
	Pose = AnimClassName
	warn("Pose", Pose)
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1))
	return AnimationLength
end

function RepeatPose(RepeatPose : string) -- Using for idle animation switch, you can use this for swimidle, sit and ect (if you know how)
	Pose = RepeatPose
	if RepeatAnims[RepeatPose] then task.cancel(RepeatAnims[RepeatPose]) end
	RepeatAnims[RepeatPose] = task.spawn(function()
		while Pose == RepeatPose do
			local AnimChangeSpeed = PlayAnimation(RepeatPose, 0.2)
			task.wait(AnimChangeSpeed)
		end 
	end)
end

function StopRepeatingAnims() for _, Task in RepeatAnims :: {thread} do task.cancel(Task) end end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight
			AnimClassTable.TotalWeight += Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						PlayAnimation("temp")
						PlayAnimation(Name)
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					AnimClassTable.TotalWeight -= Weight
					Table.Weight = UpdatedWeight
					AnimClassTable.TotalWeight += UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
	Current_PlayingEmote = true
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	script:SetAttribute("RunSpeed", Speed)
	local HeightScale = GetHeightScale()
	local MovedDuringEmote = Current_PlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local SpeedThreshold = MovedDuringEmote and (Humanoid.WalkSpeed / HeightScale) or 0.75
	if Speed > SpeedThreshold * HeightScale then
		if Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
		else PlayAnimation("run", 0.2, Speed)
		end
	else
		if not EmoteNames[CurrentAnimation] and not Current_PlayingEmote then
			RepeatPose("idle")
		end
	end
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.05) until JumpAnimTime <= 0
	if Pose == "fall" then PlayAnimation("fall", 0.1) end
end

function OnJumping()
	if Jumping then return end
	Jumping = true
	PlayAnimation("jump", 0.1)
	FallDelta(0.31)
	Jumping = false
end

function OnFreeFall()
	Pose = "fall"
	if not Jumping then FallDelta(0.07) end
end

function OnClimbing(Speed : number) PlayAnimation("climb", 0.1, Speed) end

function OnGettingUp() Pose = "gettingup" StopAllPosesAnimations() end

function OnFallingDown() Pose = "falldown" StopAllPosesAnimations() end

function OnSeated() PlayAnimation("sit", 0.5) end

function OnPlatformStanding() Pose = "platformstanding" StopAllPosesAnimations() end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function OnSwimming(Speed : number)
	if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
	else PlayAnimation("swimidle", 0.4)
	end
end

function AdjustSpeed(Speed : number)
	while true do
		local RunSpeed = Speed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(0.15)
	end
end

function SetAnimationSpeed(Speed : number)
	if Task then task.cancel(Task) end
	Task = task.spawn(AdjustSpeed, Speed)
end

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
Humanoid.Died:Once(OnDied)
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.GettingUp:Connect(OnGettingUp))
table.insert(Events, Humanoid.FreeFalling:Connect(OnFreeFall))
table.insert(Events, Humanoid.FallingDown:Connect(OnFallingDown))
table.insert(Events, Humanoid.Seated:Connect(OnSeated))
table.insert(Events, Humanoid.PlatformStanding:Connect(OnPlatformStanding))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if Pose == "idle" then -- Only play Emotes when idling
		StopRepeatingAnims()
		if EmoteNames[EmoteInvoke] then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

RepeatPose("idle")

while true do
	local Delta = task.wait(0.01)
	for Name, TableValue in PosesDelta do TableValue[1] -= Delta  end
end]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{385336E3-0987-4E6D-9A8A-09A2755238D0}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000b3c3</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBX538F4CABFB544AAC9DB0CFCE115DDF6B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000b3c4</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBXA779E52F42BE47F39455933AC422BD74">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{28F43A6F-EF47-4D84-833C-D28D237DE516}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000b3c5</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX7A70BD724BF74D8A9D7B61E7F5FB609C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">V3 (Bad)</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3630fc202116c2c006e6407c00009085</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBX48B42B758BC2432AA8AC15A323B9245F">
							<Properties>
								<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.01
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, AdjustSpeedTask, UpdatePoseTask
local CurrentAnimSpeed = 1
local Current_PlayingEmote, Jumping = false, false
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}
local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function OnDied() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() task.cancel(UpdatePoseTask) end

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
	end
	return Num
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	-- switch animation		
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1))
	return AnimationLength
end

local IdleWhile = function()
	while Pose == "idle" do
		local AnimChangeSpeed = PlayAnimation("idle", 0.2)
		task.wait(AnimChangeSpeed)
	end
end

local NextToPlay = IdleWhile

function AnimEnded() -- ForDances
	Current_PlayingEmote = false
	Pose = "idle"
	NextToPlay = IdleWhile
end

function StopRepeatingAnims() for _, Task in RepeatAnims :: {thread} do task.cancel(Task) end end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight
			AnimClassTable.TotalWeight += Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						NextToPlay = function()
							PlayAnimation("temp")
							PlayAnimation(Name)
						end
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					AnimClassTable.TotalWeight -= Weight
					Table.Weight = UpdatedWeight
					AnimClassTable.TotalWeight += UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
	Current_PlayingEmote = true
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	script:SetAttribute("RunSpeed", Speed)
	local HeightScale = GetHeightScale()
	local MovedDuringEmote = Current_PlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local SpeedThreshold = MovedDuringEmote and (Humanoid.WalkSpeed / HeightScale) or 0.75
	if Speed > SpeedThreshold * HeightScale then
		if Speed <= 9 then NextToPlay = function() PlayAnimation("walk", 0.2, Speed) end
		else NextToPlay = function() PlayAnimation("run", 0.2, Speed) end
		end
	else
		if not EmoteNames[CurrentAnimation] and not Current_PlayingEmote then Pose = "idle" NextToPlay = IdleWhile end
	end
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.05) until JumpAnimTime <= 0
	if Pose == "fall" then NextToPlay = function() PlayAnimation("fall", 0.1) end end
end


local JumpTask = task.spawn(function() end)
function OnJumping()
	task.cancel(JumpTask)
	JumpTask = task.spawn(function()
		Jumping = true
		NextToPlay = function() PlayAnimation("jump", 0.1) end
		warn(1)
		task.wait(WaitBeforeFallAnimationPlayAfterJump - WaitBeforeUpdatePose)
		warn(2)
		Jumping = false
	end)
end

function OnFreeFall()
	if Jumping then return end
	NextToPlay = function() warn("hi") PlayAnimation("fall", 0.1) end 
end

function OnClimbing(Speed : number) NextToPlay = function() PlayAnimation("climb", 0.1, Speed) end end

function OnGettingUp() Pose = "gettingup" StopAllPosesAnimations() end

function OnFallingDown() Pose = "falldown" StopAllPosesAnimations() end

function OnSeated() NextToPlay = function() PlayAnimation("sit", 0.5) end end

function OnPlatformStanding() Pose = "platformstanding" StopAllPosesAnimations() end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function OnSwimming(Speed : number)
	if Speed > 3 then NextToPlay = function() PlayAnimation("swim", 0.4, Speed) end -- Special (if player jump in water his speed multiples by 5)
	else NextToPlay = function() PlayAnimation("swimidle", 0.4) end
	end
end

function AdjustSpeed(Speed : number)
	while true do
		local RunSpeed = Speed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function SetAnimationSpeed(Speed : number)
	if AdjustSpeedTask then task.cancel(AdjustSpeedTask) end
	AdjustSpeedTask = task.spawn(AdjustSpeed, Speed)
end

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
Humanoid.Died:Once(OnDied)
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.GettingUp:Connect(OnGettingUp))
table.insert(Events, Humanoid.FreeFalling:Connect(OnFreeFall))
table.insert(Events, Humanoid.FallingDown:Connect(OnFallingDown))
table.insert(Events, Humanoid.Seated:Connect(OnSeated))
table.insert(Events, Humanoid.PlatformStanding:Connect(OnPlatformStanding))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if Pose == "idle" then -- Only play Emotes when idling
		StopRepeatingAnims()
		if EmoteNames[EmoteInvoke] then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

function PoseUpdater()
	local PoseChange : thread = task.delay(WaitBeforeUpdatePose * 99, function() end)
	while true do -- yes i know i can use task.wait(), not "true"
		task.cancel(PoseChange)
		PoseChange = task.spawn(NextToPlay)
		task.wait(WaitBeforeUpdatePose)
	end
end

UpdatePoseTask = task.spawn(PoseUpdater)
]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{E61F60E2-78E5-4432-B407-7BEF687AFFB9}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008b82</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBX18A97B11DEC94D3BADA1A08A82477ECF">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008b83</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBX98CDFFA7E115400691CB441E1A40BCF1">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{93B3889F-7861-494B-BA30-BEAD80A631EB}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008b84</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXA724932078E5465DB6FE8DA315864551">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">V2</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3630fc202116c2c006e6407c0000889d</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBX1BA2083972F84981AC7095532247B774">
							<Properties>
								<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.03
local WaitBeforeUpdateAnimationSpeed = 0.15

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, AdjustSpeedTask, UpdatePoseTask
local CurrentAnimSpeed = 1
local Current_PlayingEmote, Jumping = false, false
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}
local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function OnDied() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() task.cancel(UpdatePoseTask) end

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
	end
	return Num
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	-- switch animation		
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1))
	return AnimationLength
end

local IdleWhile = function()
	while Pose == "idle" do
		local AnimChangeSpeed = PlayAnimation("idle", 0.2)
		task.wait(AnimChangeSpeed)
	end
end

local NextToPlay = IdleWhile

function AnimEnded() -- ForDances
	Current_PlayingEmote = false
	Pose = "idle"
	NextToPlay = IdleWhile
end

function StopRepeatingAnims() for _, Task in RepeatAnims :: {thread} do task.cancel(Task) end end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight
			AnimClassTable.TotalWeight += Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						NextToPlay = function()
							PlayAnimation("temp")
							PlayAnimation(Name)
						end
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					AnimClassTable.TotalWeight -= Weight
					Table.Weight = UpdatedWeight
					AnimClassTable.TotalWeight += UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
	Current_PlayingEmote = true
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	script:SetAttribute("RunSpeed", Speed)
	local HeightScale = GetHeightScale()
	local MovedDuringEmote = Current_PlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local SpeedThreshold = MovedDuringEmote and (Humanoid.WalkSpeed / HeightScale) or 0.75
	if Speed > SpeedThreshold * HeightScale then
		if Speed <= 9 then NextToPlay = function() PlayAnimation("walk", 0.2, Speed) end
		else NextToPlay = function() PlayAnimation("run", 0.2, Speed) end
		end
	else
		if not EmoteNames[CurrentAnimation] and not Current_PlayingEmote then Pose = "idle" NextToPlay = IdleWhile end
	end
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.05) until JumpAnimTime <= 0
	if Pose == "fall" then NextToPlay = function() PlayAnimation("fall", 0.1) end end
end

function OnJumping()
	Jumping = true
	NextToPlay = function() PlayAnimation("jump", 0.1) end
	FallDelta(0.31)
	Jumping = false
end

function OnFreeFall()
	Pose = "fall"
	if not Jumping then FallDelta(0.07) end
end

function OnClimbing(Speed : number) NextToPlay = function() PlayAnimation("climb", 0.1, Speed) end end

function OnGettingUp() Pose = "gettingup" StopAllPosesAnimations() end

function OnFallingDown() Pose = "falldown" StopAllPosesAnimations() end

function OnSeated() NextToPlay = function() PlayAnimation("sit", 0.5) end end

function OnPlatformStanding() Pose = "platformstanding" StopAllPosesAnimations() end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function OnSwimming(Speed : number)
	if Speed > 3 then NextToPlay = function() PlayAnimation("swim", 0.4, Speed) end -- Special (if player jump in water his speed multiples by 5)
	else NextToPlay = function() PlayAnimation("swimidle", 0.4) end
	end
end

function AdjustSpeed(Speed : number)
	while true do
		local RunSpeed = Speed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function SetAnimationSpeed(Speed : number)
	if AdjustSpeedTask then task.cancel(AdjustSpeedTask) end
	AdjustSpeedTask = task.spawn(AdjustSpeed, Speed)
end

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
Humanoid.Died:Once(OnDied)
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.GettingUp:Connect(OnGettingUp))
table.insert(Events, Humanoid.FreeFalling:Connect(OnFreeFall))
table.insert(Events, Humanoid.FallingDown:Connect(OnFallingDown))
table.insert(Events, Humanoid.Seated:Connect(OnSeated))
table.insert(Events, Humanoid.PlatformStanding:Connect(OnPlatformStanding))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if Pose == "idle" then -- Only play Emotes when idling
		StopRepeatingAnims()
		if EmoteNames[EmoteInvoke] then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

function PoseUpdater()
	local PoseChange : thread = task.delay(WaitBeforeUpdatePose * 99, function() end)
	while true do -- yes i know i can use task.wait(), not "true"
		task.cancel(PoseChange)
		PoseChange = task.spawn(NextToPlay)
		task.wait(WaitBeforeUpdatePose)
	end
end

UpdatePoseTask = task.spawn(PoseUpdater)
]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{FE870708-CD6F-47D8-AFAB-B1F95105B1A9}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008c9e</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBX5D0FFE7A443D47B8834836F723C17CA6">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008c9f</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBX0E8CA36C5E5147358B13477AAE5048FC">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{A1CA2EF4-0A03-4958-8F96-90E6A37DC67A}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008ca0</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX7ED27DFC6FC343179E133A26F2C9D170">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">V1</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">3630fc202116c2c006e6407c00008891</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBX1653FC7D69024CB080F7DF7BE772B41D">
							<Properties>
								<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries = 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.05

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, Task
local CurrentAnimSpeed = 1
local Current_PlayingEmote, Jumping = false, false
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}
local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = false, point = false, dance = true, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function OnDied() Pose = "dead" DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() end

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	Current_PlayingEmote = false
end


function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local Roll = math.random(1, AnimTable[AnimClassName].TotalWeight) 
	local Num = 1
	while not AnimTable[AnimClassName][Num] do Num += 1 end
	while Roll > AnimTable[AnimClassName][Num].Weight do
		Roll -= AnimTable[AnimClassName][Num].Weight
		while not AnimTable[AnimClassName][Num] do Num += 1 end
	end
	return Num
end

function AnimEnded() -- ForDances
	Current_PlayingEmote = false
	RepeatPose("idle")
end

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	-- switch animation		
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims

		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
		if Current_AnimationTrack.Length > 0 then return Current_AnimationTrack.Length * math.random(1, 3) end -- math random if anims not so long
	end
	return 5 -- DefaultAnimationLenght
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	SetAnimationSpeed((Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1))
	return AnimationLength
end

function RepeatPose(RepeatPose : string) -- Using for idle animation switch, you can use this for swimidle, sit and ect (if you know how)
	Pose = RepeatPose
	if RepeatAnims[RepeatPose] then task.cancel(RepeatAnims[RepeatPose]) end
	RepeatAnims[RepeatPose] = task.spawn(function()
		while Pose == RepeatPose do
			local AnimChangeSpeed = PlayAnimation(RepeatPose, 0.2)
			task.wait(AnimChangeSpeed)
		end 
	end)
end

function StopRepeatingAnims() for _, Task in RepeatAnims :: {thread} do task.cancel(Task) end end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	AnimClassTable.TotalWeight = 0
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight
			AnimClassTable.TotalWeight += Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						PlayAnimation("temp")
						PlayAnimation(Name)
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					AnimClassTable.TotalWeight -= Weight
					Table.Weight = UpdatedWeight
					AnimClassTable.TotalWeight += UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimClassTable.TotalWeight -= AnimTable[Name][Index].Weight -- Removing from ClassTable
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
	Current_PlayingEmote = true
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	script:SetAttribute("RunSpeed", Speed)
	local HeightScale = GetHeightScale()
	local MovedDuringEmote = Current_PlayingEmote and Humanoid.MoveDirection == Vector3.new(0, 0, 0)
	local SpeedThreshold = MovedDuringEmote and (Humanoid.WalkSpeed / HeightScale) or 0.75
	if Speed > SpeedThreshold * HeightScale then
		if Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
		else PlayAnimation("run", 0.2, Speed)
		end
	else
		if not EmoteNames[CurrentAnimation] and not Current_PlayingEmote then
			RepeatPose("idle")
		end
	end
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.05) until JumpAnimTime <= 0
	if Pose == "fall" then PlayAnimation("fall", 0.1) end
end

function OnJumping()
	Jumping = true
	PlayAnimation("jump", 0.1)
	FallDelta(0.31)
	Jumping = false
end

function OnFreeFall()
	Pose = "fall"
	if not Jumping then FallDelta(0.07) end
end

function OnClimbing(Speed : number) PlayAnimation("climb", 0.1, Speed) end

function OnGettingUp() Pose = "gettingup" StopAllPosesAnimations() end

function OnFallingDown() Pose = "falldown" StopAllPosesAnimations() end

function OnSeated() PlayAnimation("sit", 0.5) end

function OnPlatformStanding() Pose = "platformstanding" StopAllPosesAnimations() end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function OnSwimming(Speed : number)
	if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
	else PlayAnimation("swimidle", 0.4)
	end
end

function AdjustSpeed(Speed : number)
	while true do
		local RunSpeed = Speed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(0.15)
	end
end

function SetAnimationSpeed(Speed : number)
	if Task then task.cancel(Task) end
	Task = task.spawn(AdjustSpeed, Speed)
end

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
Humanoid.Died:Once(OnDied)
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.GettingUp:Connect(OnGettingUp))
table.insert(Events, Humanoid.FreeFalling:Connect(OnFreeFall))
table.insert(Events, Humanoid.FallingDown:Connect(OnFallingDown))
table.insert(Events, Humanoid.Seated:Connect(OnSeated))
table.insert(Events, Humanoid.PlatformStanding:Connect(OnPlatformStanding))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if Pose == "idle" then -- Only play Emotes when idling
		StopRepeatingAnims()
		if EmoteNames[EmoteInvoke] then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

RepeatPose("idle")]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{7489E09A-1D29-4052-ADE0-60759AAE670D}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">3630fc202116c2c006e6407c000086aa</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBX37ACC7D863724315ACE42F9DCECE4915">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c000086ab</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBX72588917F1E34511975352F6340691DE">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{5A510049-FDC4-4A58-8CDB-B15E270D1067}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">3630fc202116c2c006e6407c000086ac</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX2450280987E7440C80E07480F7421EC5">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">V8</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400005932</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBXD34B95CAD3A449F98FF8406037418B26">
							<Properties>
								<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries, IdleLength, DT = 0, 0, 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.02 -- Bigger value = less script activity + more unstable
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31
local WaitBeforeFallAnimation = 0.07

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, FixForEDancesThatHaveLoop, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, GetStateHelper
local Current_AnimationSpeed, LastDance = 1, 1
local Current_PlayingEmote, Alive = false, true
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local WhenEmotesCantBeUsed = {walk = true, run = true, swim = true, swimidle = true, jump = true, fall = true, climb = true, sit = true}
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}

local Class_Speed = 
	{
		climb = 0,
		run = 0,
		swim = 0,
	}

local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 5,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = true, point = true, dance = false, dance1 = false, dance2 = false, dance3 = false, laugh = true, cheer = true}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	if FixForEDancesThatHaveLoop then FixForEDancesThatHaveLoop:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	--Current_PlayingEmote = false
end

function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local AnimClassTable = AnimTable[AnimClassName]
	local TotalWeight = 0
	
	for _, Table in AnimClassTable do TotalWeight += Table.Weight end
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, SelectedIndex = 0, 1
	for Index, Table in AnimClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			SelectedIndex = Index
			break
		end
	end

	return SelectedIndex
end

function AnimEnded(Keyframe : string?)
	if Keyframe then
		if Keyframe == "End" then Current_PlayingEmote = false GetStateHelper = false end
		return
	end
	Current_PlayingEmote = false GetStateHelper = false
end -- ForDances 

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation) :: AnimationTrack
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims
		if EmoteNames[AnimClassName] then FixForEDancesThatHaveLoop = Current_AnimationTrack.KeyframeReached:Connect(AnimEnded) end -- Using only because old roblox system :/
		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
	end
	return Current_AnimationTrack.Length or 5 -- DefaultAnimationLenght
end

function AdjustSpeed()
	repeat task.wait(0.02) until Current_AnimationTrack
	while Alive do
		local RunSpeed = Current_AnimationSpeed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	Current_AnimationSpeed = (Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1)
	return AnimationLength
end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end


function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						GetStateHelper = "None"
						--PlayAnimation("temp")
						--PlayAnimation(Name)
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					Table.Weight = UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	Current_PlayingEmote = true
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	script:SetAttribute("RunSpeed", Speed)
	Class_Speed.run = Speed
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.015) until Humanoid:GetState().Name ~= "Freefall" or JumpAnimTime <= 0
	if JumpAnimTime <= 0 and Humanoid:GetState().Name == "Freefall" then PlayAnimation("fall", 0.1) end
end

function OnJumping() GetStateHelper = "Jumping" end
function OnClimbing(Speed : number) Class_Speed.climb = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed) end
function OnSwimming(Speed : number) Class_Speed.swim = math.clamp(Speed, 0, Humanoid.WalkSpeed) end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if not WhenEmotesCantBeUsed[Pose] then -- Only play Emotes when idling
		Current_PlayingEmote = true
		task.wait(WaitBeforeUpdatePose)
		if EmoteNames[EmoteInvoke] ~= nil then -- Default Emotes
			if string.find(EmoteInvoke, "dance") then
				if string.len(EmoteInvoke) == 5 then -- Nonrepeating dance
					local RandomNumber = 1
					while RandomNumber == LastDance do RandomNumber = math.random(1, 3) end
					LastDance = RandomNumber
					EmoteInvoke ..= RandomNumber
				else
					LastDance = tonumber(string.sub(EmoteInvoke, -1, -1))
				end
			end
			PlayAnimation(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

local PosesLogic = 
	{
		
		Jumping = function()
			PlayAnimation("jump", 0.1)
			FallDelta(WaitBeforeFallAnimationPlayAfterJump)
			--repeat task.wait(WaitBeforeUpdatePose) until Humanoid:GetState().Name ~= "Freefall"
			GetStateHelper = false
		end,
		
		Freefall = function() FallDelta(WaitBeforeFallAnimation) end,
		
		GettingUp = function() StopAllPosesAnimations() end,	
		FallingDown = function() StopAllPosesAnimations() end,	
		PlatformStanding = function() StopAllPosesAnimations() end,
		
		Running = function()
			local Speed = Class_Speed.run
			if Speed < 0.4 then if IdleLength <= 0 or Pose ~= "idle" then IdleLength = PlayAnimation("idle", 0.2) end -- Idle RNG
			elseif Speed >= 0.4 and Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
			else PlayAnimation("run", 0.2, Speed)
			end
		end,
		
		Seated = function() PlayAnimation("sit", 0.5) end,
		
		Dead = function() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() Alive = false end,
		
		Swimming = function()
			local Speed = Class_Speed.swim
			if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
			else PlayAnimation("swimidle", 0.4)
			end
		end,
		
		Climbing = function()
			PlayAnimation("climb", 0.2, Class_Speed.climb)
		end,
		
		None = function()
			PlayAnimation("temp")
			GetStateHelper = false
		end,
	}	

function PoseUpdater()
	while Alive do
		if not Current_PlayingEmote then
			local State = Humanoid:GetState().Name
			--print(State)
			if GetStateHelper then PosesLogic[GetStateHelper]()
			elseif PosesLogic[State] then PosesLogic[State]()
			end
		end
		if Class_Speed.run > 0 and Current_PlayingEmote then Current_PlayingEmote = false GetStateHelper = false end
		--PosesLogic[GetStateHelper or Humanoid:GetState()]()
		DT = task.wait(WaitBeforeUpdatePose)
		IdleLength -= DT
	end
end

task.spawn(AdjustSpeed)
PoseUpdater()]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{AE9BD258-1DE9-4982-B08E-372196F01CBE}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400005aaf</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBXEE1DBABB9F2E43DF867110C339AFC4CC">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400005ab0</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBX853A85BE917B496EB87A6E5E382BE730">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 800 },
				{ Id = "rbxassetid://180435792", Weight = 200 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 2 },
				{ Id = "rbxassetid://507766951", Weight = 2 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{B5431A27-90EE-4B15-AF6B-FAF8281C429B}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">384ab1c1c60fdd9006e8513400005ab1</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Script" referent="RBXA9938EF27DE64416B9E09635976BD6F8">
					<Properties>
						<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries, IdleLength, DT = 0, 0, 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.02 -- Bigger value = less script activity + more unstable
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31
local WaitBeforeFallAnimation = 0.07
local EmotesSpeed = 0.8

local Current_AnimationTrack, CurrentAnimKeyEndedHandler, FixForEDancesThatHaveLoop, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, GetStateHelper
local Current_AnimationSpeed, LastDance = 1, 1
local Current_PlayingEmote, Alive = false, true
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {

	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation

				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		} :: {},

	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local WhenEmotesCantBeUsed = {walk = true, run = true, swim = true, swimidle = true, jump = true, fall = true, climb = true, sit = true}
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}

local Class_Speed = 
	{
		climb = 0,
		run = 0,
		swim = 0,
	}

local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 12,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = true, point = true, dance = false, dance1 = false, dance2 = false, dance3 = false, laugh = true, cheer = true}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	if FixForEDancesThatHaveLoop then FixForEDancesThatHaveLoop:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	--Current_PlayingEmote = false
end

function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local AnimClassTable = AnimTable[AnimClassName]
	local TotalWeight = 0

	for _, Table in AnimClassTable do TotalWeight += Table.Weight end
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, SelectedIndex = 0, 1
	for Index, Table in AnimClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			SelectedIndex = Index
			break
		end
	end

	return SelectedIndex
end

function AnimEnded(Keyframe : string?)
	if Keyframe then
		if Keyframe == "End" then Current_PlayingEmote = false GetStateHelper = false end
		return
	end
	Current_PlayingEmote = false GetStateHelper = false
end -- ForDances 

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation) :: AnimationTrack
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims
		if EmoteNames[AnimClassName] then FixForEDancesThatHaveLoop = Current_AnimationTrack.KeyframeReached:Connect(AnimEnded) end -- Using only because old roblox system :/
		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
	end
	return Current_AnimationTrack.Length or 5 -- DefaultAnimationLenght
end

function AdjustSpeed()
	repeat task.wait(0.02) until Current_AnimationTrack
	while Alive do
		local RunSpeed = Current_AnimationSpeed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	Current_AnimationSpeed = (Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1)
	return AnimationLength
end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end


function ConfigureAnimationSet(Name : string, FileList : {{Id : string, Weight : number}})
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	local Folder
	
	local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
		local Table = {}
		local AnimationName = Animation.Name
		local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
		Animation:SetAttribute("ChangeTo", "")
		PreLoadAnim(Animation)

		while AnimClassTable[Index] do Index += 1 end -- Get unused number
		FastAnimationLink[Animation] = Index
		AnimClassTable[Index] = Table
		Table.Anim = Animation
		Table.Weight = Weight


		table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

			---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

			if AttrbuteName == "ChangeTo" then
				local AnimationId = Animation:GetAttribute("ChangeTo")			
				local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
				local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
				CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
				PreLoadAnim(CreatedAnimation)
				Table.Anim = CreatedAnimation
				if Current_AnimationInstance == Animation then
					GetStateHelper = "None"
					--PlayAnimation("temp")
					--PlayAnimation(Name)
				end
				------------------------------------------------------------------------

			elseif AttrbuteName == "Weight" then
				local UpdatedWeight = Animation:GetAttribute("Weight") or 1
				Table.Weight = UpdatedWeight
			end				
		end))

	end
	
	if Config then
		Folder = Instance.new("Folder", script)
		Folder.Name = Config.Name
		local ToDestroy = Config
		Config = Folder

		for I, Animation : Animation in ToDestroy:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
				AnimationConfiguration(Config, Animation, I)
			end
			Animation.Parent = Folder
		end
		
		ToDestroy:Destroy()
	else
		Config = Instance.new("Folder", script)
		Config.Name = Name
		for I, Anim in FileList do
			local Animation = Instance.new("Animation", Config)
			Animation.Name = Name .. I
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
			AnimationConfiguration(Config, Animation, I)
		end
	end


	table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
		if Added:IsA("Animation") then
			if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
			AnimationConfiguration(Config, Added, 1)
		end
	end))

	table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
		if Removed:IsA("Animation") then
			local Index = FastAnimationLink[Removed]
			FastAnimationLink[Removed] = nil
			AnimTable[Name][Index] = nil -- Removing from AnimTable
		end
	end))
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	Current_PlayingEmote = true
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	script:SetAttribute("RunSpeed", Speed)
	Class_Speed.run = Speed
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.015) until Humanoid:GetState().Name ~= "Freefall" or JumpAnimTime <= 0
	if JumpAnimTime <= 0 and Humanoid:GetState().Name == "Freefall" then PlayAnimation("fall", 0.1) end
end

function OnJumping() GetStateHelper = "Jumping" end
function OnClimbing(Speed : number) Class_Speed.climb = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed) end
function OnSwimming(Speed : number) Class_Speed.swim = math.clamp(Speed, 0, Humanoid.WalkSpeed) end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

InverseFunction = function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name :: string, FileList :: {{Id : string, Weight : number}}) end

-- Connect events
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

local PosesLogic = 
	{

		Jumping = function()
			PlayAnimation("jump", 0.1)
			FallDelta(WaitBeforeFallAnimationPlayAfterJump)
			--repeat task.wait(WaitBeforeUpdatePose) until Humanoid:GetState().Name ~= "Freefall"
			GetStateHelper = false
		end,

		Freefall = function() FallDelta(WaitBeforeFallAnimation) end,

		GettingUp = function() StopAllPosesAnimations() end,	
		FallingDown = function() StopAllPosesAnimations() end,	
		PlatformStanding = function() StopAllPosesAnimations() end,

		Running = function()
			local Speed = Class_Speed.run
			if Speed < 0.4 then if IdleLength <= 0 or Pose ~= "idle" then IdleLength = PlayAnimation("idle", 0.2) end -- Idle RNG
		elseif Speed >= 0.4 and Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
		else PlayAnimation("run", 0.2, Speed)
		end
		end,

		Seated = function() PlayAnimation("sit", 0.5) end,

		Dead = function() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() Alive = false end,

		Swimming = function()
			local Speed = Class_Speed.swim
			if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
		else PlayAnimation("swimidle", 0.4)
		end
		end,

		Climbing = function()
			PlayAnimation("climb", 0.2, Class_Speed.climb)
		end,

		None = function()
			PlayAnimation("temp")
			GetStateHelper = false
		end,
	}	

function PoseUpdater()
	while Alive do
		if not Current_PlayingEmote then
			local State = Humanoid:GetState().Name
			--print(State)
			if GetStateHelper then PosesLogic[GetStateHelper]()
			elseif PosesLogic[State] then PosesLogic[State]()
			end
		end
		if Class_Speed.run > 0 and Current_PlayingEmote then Current_PlayingEmote = false GetStateHelper = false end
		--PosesLogic[GetStateHelper or Humanoid:GetState()]()
		DT = task.wait(WaitBeforeUpdatePose)
		IdleLength -= DT
	end
end

task.spawn(AdjustSpeed)
PoseUpdater()]]></ProtectedString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{257FA7A3-01D3-4E16-923D-388531638351}</string>
						<BinaryString name="AttributesSerialize">AgAAAA4AAABBbmltYXRpb25TcGVlZAYAAAAAAAAAAAgAAABSdW5TcGVlZAYAAAAAAAAAAA==</BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Animate</string>
						<int64 name="SourceAssetId">18990422140</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">384ab1c1c60fdd9006e851340000c880</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXD600EBA46FEB40A28AA51C3003419EF4">
					<Properties>
						<ProtectedString name="Source"><![CDATA[--!strict
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries, IdleLength, DT = 0, 0, 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10
local Pose = "idle"
local WaitBeforeUpdatePose = 0.02 -- Bigger value = less script activity + more unstable
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31
local WaitBeforeFallAnimation = 0.07
local EmotesSpeed = 0.8

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, FixForEDancesThatHaveLoop, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, GetStateHelper
local Current_AnimationSpeed, LastDance = 1, 1
local Current_PlayingEmote, Alive = false, true
local PreloadedAnims, AnimTable, Events : {RBXScriptConnection}, RepeatAnims, FastAnimationLink = {}, {}, {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local WhenEmotesCantBeUsed = {walk = true, run = true, swim = true, swimidle = true, jump = true, fall = true, climb = true, sit = true}
local InverseAnimsNames = {walk = true, run = true, swim = true} -- climb using own logic
local InverseOnWork = {BackwardRight = true, BackwardLeft = true, Backward = true}

local Class_Speed = 
	{
		climb = 0,
		run = 0,
		swim = 0,
	}

local AnimationSpeedAdjust = 
	{
		walk = 9,
		run = 16,
		climb = 12,
		swim = 10,
	}

-- Existance in this list signifies that it is an Emote, the value indicates if it is a looping Emote
local EmoteNames = { wave = true, point = true, dance = false, dance1 = false, dance2 = false, dance3 = false, laugh = true, cheer = true}

function DisconnectEvents() for _, Event : RBXScriptConnection in Events do Event:Disconnect() end end 

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation : Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	if FixForEDancesThatHaveLoop then FixForEDancesThatHaveLoop:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	--Current_PlayingEmote = false
end

function RollAnimation(AnimClassName : string) -- Sol's RNG lol
	local AnimClassTable = AnimTable[AnimClassName]
	local TotalWeight = 0
	
	for _, Table in AnimClassTable do TotalWeight += Table.Weight end
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, SelectedIndex = 0, 1
	for Index, Table in AnimClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			SelectedIndex = Index
			break
		end
	end

	return SelectedIndex
end

function AnimEnded(Keyframe : string?)
	if Keyframe then
		if Keyframe == "End" then Current_PlayingEmote = false GetStateHelper = false end
		return
	end
	Current_PlayingEmote = false GetStateHelper = false
end -- ForDances 

function SwitchToAnim(Animation : Animation, AnimClassName : string, TransitionTime : number, HotChange : number?)
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation) :: AnimationTrack
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims
		if EmoteNames[AnimClassName] then FixForEDancesThatHaveLoop = Current_AnimationTrack.KeyframeReached:Connect(AnimEnded) end -- Using only because old roblox system :/
		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
	end
	return Current_AnimationTrack.Length or 5 -- DefaultAnimationLenght
end

function AdjustSpeed()
	repeat task.wait(0.02) until Current_AnimationTrack
	while Alive do
		local RunSpeed = Current_AnimationSpeed * 1.25 / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * InverseFunction() * ((Pose == "climb" and InverseFunction()) or 1) -- Climb using negative numbers, its just a fix
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function PlayAnimation(AnimClassName : string, TransitionTime : number?, Speed : number?, HotChange : number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	Current_AnimationSpeed = (Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1)
	return AnimationLength
end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end

function CreateInstance(Where : Instance, ClassName : string, Name : string, DeleteOnFind : boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table : {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end


function ConfigureAnimationSet(Name : string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder : Folder, Animation : Animation, Index : number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName : string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(TempAnimFoldier, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						GetStateHelper = "None"
						--PlayAnimation("temp")
						--PlayAnimation(Name)
					end
					------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					Table.Weight = UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	Current_PlayingEmote = true
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	script:SetAttribute("RunSpeed", Speed)
	Class_Speed.run = Speed
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.015) until Humanoid:GetState().Name ~= "Freefall" or JumpAnimTime <= 0
	if JumpAnimTime <= 0 and Humanoid:GetState().Name == "Freefall" then PlayAnimation("fall", 0.1) end
end

function OnJumping() GetStateHelper = "Jumping" end
function OnClimbing(Speed : number) Class_Speed.climb = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed) end
function OnSwimming(Speed : number) Class_Speed.swim = math.clamp(Speed, 0, Humanoid.WalkSpeed) end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return false end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true)
	else script:SetAttribute("LockCenter", false)
	end
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if not WhenEmotesCantBeUsed[Pose] then -- Only play Emotes when idling
		Current_PlayingEmote = true
		task.wait(WaitBeforeUpdatePose)
		if EmoteNames[EmoteInvoke] ~= nil then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			Current_AnimationSpeed = EmotesSpeed
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			Current_AnimationSpeed = EmotesSpeed
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

local PosesLogic = 
	{
		
		Jumping = function()
			PlayAnimation("jump", 0.1)
			FallDelta(WaitBeforeFallAnimationPlayAfterJump)
			--repeat task.wait(WaitBeforeUpdatePose) until Humanoid:GetState().Name ~= "Freefall"
			GetStateHelper = false
		end,
		
		Freefall = function() FallDelta(WaitBeforeFallAnimation) end,
		
		GettingUp = function() StopAllPosesAnimations() end,	
		FallingDown = function() StopAllPosesAnimations() end,	
		PlatformStanding = function() StopAllPosesAnimations() end,
		
		Running = function()
			local Speed = Class_Speed.run
			if Speed < 0.4 then if IdleLength <= 0 or Pose ~= "idle" then IdleLength = PlayAnimation("idle", 0.2) end -- Idle RNG
			elseif Speed >= 0.4 and Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
			else PlayAnimation("run", 0.2, Speed)
			end
		end,
		
		Seated = function() PlayAnimation("sit", 0.5) end,
		
		Dead = function() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() Alive = false end,
		
		Swimming = function()
			local Speed = Class_Speed.swim
			if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
			else PlayAnimation("swimidle", 0.4)
			end
		end,
		
		Climbing = function()
			PlayAnimation("climb", 0.2, Class_Speed.climb)
		end,
		
		None = function()
			PlayAnimation("temp")
			GetStateHelper = false
		end,
	}	

function PoseUpdater()
	while Alive do
		if not Current_PlayingEmote then
			local State = Humanoid:GetState().Name
			--print(State)
			if GetStateHelper then PosesLogic[GetStateHelper]()
			elseif PosesLogic[State] then PosesLogic[State]()
			end
		end
		if Class_Speed.run > 0 and Current_PlayingEmote then Current_PlayingEmote = false GetStateHelper = false end
		--PosesLogic[GetStateHelper or Humanoid:GetState()]()
		DT = task.wait(WaitBeforeUpdatePose)
		IdleLength -= DT
	end
end

task.spawn(AdjustSpeed)
PoseUpdater()]]></ProtectedString>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{CFF1882E-E28D-4756-89B0-68CEA03B0689}</string>
						<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Animate</string>
						<int64 name="SourceAssetId">16697831083</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca2000074e0</UniqueId>
					</Properties>
					<Item class="BindableFunction" referent="RBXA245C3879297446788CA24AF3DAF2741">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PlayEmote</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca2000074e1</UniqueId>
						</Properties>
					</Item>
					<Item class="Script" referent="RBX5564224003FA4DE2BB05CDD94336B0C9">
						<Properties>
							<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 800 },
				{ Id = "rbxassetid://180435792", Weight = 200 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 2 },
				{ Id = "rbxassetid://507766951", Weight = 2 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{987759CF-E34A-416A-8ADA-AF95AC40B928}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">AnimSet</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca2000074e2</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXD29A0616F6A548ED8C43DD43343579EE">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">1.1.4.1</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca2000051df</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBX2F00D765804C4055906DAE683B2DF4E7">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Archive</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca200007502</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBX33B44DB18F6A4DDE8DA9FCAC888FA346">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Test</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca200007503</UniqueId>
						</Properties>
						<Item class="LocalScript" referent="RBXC071B423CBB041658DC9D806E5F6227A">
							<Properties>
								<ProtectedString name="Source"><![CDATA[
--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries, IdleLength, DT = 0, 0, 0
local Humanoid: Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator: Animator? repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10

----------Settings-----------

local AnimationsAnimationSpeedMultiplier = 1 --// Current_AnimationSpeed (2) * AnimationsAnimationSpeedMultiplier (2) = 4
local WaitBeforeUpdatePose = 0.02 -- Bigger value = less script activity + more unstable
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31 -- Wait if character jumped
local WaitBeforeFallAnimation = 0.07 -- Default wait (no jump)
local EmotesSpeed = 0.8 -- Dance anims must be slower

local WhenEmotesCantBeUsed = {  -- self explaining
		walk = true, 
		run = true, 
		swim = true, 
		swimidle = true, 
		jump = true, 
		fall = true, 
		climb = true, 
		sit = true
	}

local InverseOnWork = { -- Determines when animations will play backwards ( function Direction() )
	BackwardRight = true, 
	BackwardLeft = true, 
	Backward = true
}

local AnimationSpeedAdjust = { -- Example: AnimationSpeed (2) = RunSpeed (32) / AnimationSpeedAdjust.run (16)
		walk = 9,
		run = 16,
		climb = 12,
		swim = 10,
	}

local EmoteNames = { -- False = loop, true = no loop (not recommended to change anything)
	wave = true, 
	point = true, 
	dance = false, 
	dance1 = false, 
	dance2 = false, 
	dance3 = false, 
	laugh = true, 
	cheer = true
}

local InverseAnimsNames = {
	walk = true, 
	run = true, 
	swim = true
} -- climb using own logic

-----------------------------

------Function for help------

function CreateInstance(Where: Instance, ClassName: string, Name: string, DeleteOnFind: boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table: {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

-----------------------------

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, FixForEDancesThatHaveLoop, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, GetStateHelper
local Current_AnimationSpeed = 1
local Current_PlayingEmote, Alive = false, true
local AnimTable, Events: {RBXScriptConnection}, FastAnimationLink = {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local Class_Speed = 
	{
		climb = 0,
		run = 0,
		swim = 0,
	}

function DisconnectEvents() for _, Event: RBXScriptConnection in Events do Event:Disconnect() end end 

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation: Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	if FixForEDancesThatHaveLoop then FixForEDancesThatHaveLoop:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	--Current_PlayingEmote = false
end

function RollAnimation(AnimClassName: string) -- Sol's RNG lol
	local AnimClassTable = AnimTable[AnimClassName]
	local TotalWeight = 0
	
	for _, Table in AnimClassTable do TotalWeight += Table.Weight end
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, SelectedIndex = 0, 1
	for Index, Table in AnimClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			SelectedIndex = Index
			break
		end
	end

	return SelectedIndex
end

function AnimEnded(Keyframe: string?)
	if Keyframe then
		if Keyframe == "End" then Current_PlayingEmote = false GetStateHelper = false end
		return
	end
	Current_PlayingEmote = false GetStateHelper = false
end -- ForDances 

function SwitchToAnim(Animation: Animation, AnimClassName: string, TransitionTime: number, HotChange: number?)
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation) :: AnimationTrack
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims
		if EmoteNames[AnimClassName] then FixForEDancesThatHaveLoop = Current_AnimationTrack.KeyframeReached:Connect(AnimEnded) end -- Using only because old roblox system :/
		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
	end
	return Current_AnimationTrack.Length or 5 -- DefaultAnimationLenght
end

function AdjustSpeed()
	repeat task.wait(0.02) until Current_AnimationTrack -- Wait before Adjust
	while Alive do
		local RunSpeed = Current_AnimationSpeed / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * (InverseAnimsNames[Pose] and InverseFunction()) or 1
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function PlayAnimation(AnimClassName: string, TransitionTime: number?, Speed: number?, HotChange: number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	Current_AnimationSpeed = (Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1) * AnimationsAnimationSpeedMultiplier
	return AnimationLength
end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end


function ConfigureAnimationSet(Name: string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder: Folder, Animation: Animation, Index: number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName: string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					--local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(Animation, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						GetStateHelper = "None"
						--PlayAnimation("temp")
						--PlayAnimation(Name)
					end
				------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					Table.Weight = UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	Current_PlayingEmote = true
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed : number)
	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	script:SetAttribute("RunSpeed", Speed)
	Class_Speed.run = Speed
end

function FallDelta(JumpAnimTime : number)
	repeat JumpAnimTime -= task.wait(0.015) until Humanoid:GetState().Name ~= "Freefall" or JumpAnimTime <= 0
	if JumpAnimTime <= 0 and Humanoid:GetState().Name == "Freefall" then PlayAnimation("fall", 0.1) end
end

function OnJumping() GetStateHelper = "Jumping" end
function OnClimbing(Speed : number) Class_Speed.climb = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed) end
function OnSwimming(Speed : number) Class_Speed.swim = math.clamp(Speed, 0, Humanoid.WalkSpeed) end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child : Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child : Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return 1 end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true) return end
	script:SetAttribute("LockCenter", false)
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if not WhenEmotesCantBeUsed[Pose] then -- Only play Emotes when idling
		Current_PlayingEmote = true
		task.wait(WaitBeforeUpdatePose)
		if EmoteNames[EmoteInvoke] ~= nil then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			Current_AnimationSpeed = EmotesSpeed
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			Current_AnimationSpeed = EmotesSpeed
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

local PosesLogic = 
	{
		
		Jumping = function()
			PlayAnimation("jump", 0.1)
			FallDelta(WaitBeforeFallAnimationPlayAfterJump)
			--repeat task.wait(WaitBeforeUpdatePose) until Humanoid:GetState().Name ~= "Freefall"
			GetStateHelper = false
		end,
		
		Freefall = function() FallDelta(WaitBeforeFallAnimation) end,
		
		GettingUp = function() StopAllPosesAnimations() end,	
		FallingDown = function() StopAllPosesAnimations() end,	
		PlatformStanding = function() StopAllPosesAnimations() end,
		
		Running = function()
			local Speed = Class_Speed.run
			if Speed < 0.4 then if IdleLength <= 0 or Pose ~= "idle" then IdleLength = PlayAnimation("idle", 0.2) end -- Idle RNG
			elseif Speed >= 0.4 and Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
			else PlayAnimation("run", 0.2, Speed)
			end
		end,
		
		Seated = function() PlayAnimation("sit", 0.5) end,
		
		Dead = function() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() Alive = false end,
		
		Swimming = function()
			local Speed = Class_Speed.swim
			if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
			else PlayAnimation("swimidle", 0.4)
			end
		end,
		
		Climbing = function()
			PlayAnimation("climb", 0.2, Class_Speed.climb)
		end,
		
		None = function()
			PlayAnimation("temp")
			GetStateHelper = false
		end,
	}	

function PoseUpdater()
	while Alive do
		if not Current_PlayingEmote then
			local State = Humanoid:GetState().Name
			--print(State)
			if GetStateHelper then PosesLogic[GetStateHelper]()
			elseif PosesLogic[State] then PosesLogic[State]()
			end
		end
		if Class_Speed.run > 0 and Current_PlayingEmote then Current_PlayingEmote = false GetStateHelper = false end
		--PosesLogic[GetStateHelper or Humanoid:GetState()]()
		DT = task.wait(WaitBeforeUpdatePose)
		IdleLength -= DT
	end
end

task.spawn(AdjustSpeed)
PoseUpdater()]]></ProtectedString>
								<bool name="Disabled">true</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">0</token>
								<string name="ScriptGuid">{26B36E25-E15F-4B52-AAFE-41FAF569A8C5}</string>
								<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Animate</string>
								<int64 name="SourceAssetId">16697831083</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca2000051e0</UniqueId>
							</Properties>
							<Item class="BindableFunction" referent="RBXDAB5F4EB98EF4EC6A99230352776AB69">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">PlayEmote</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca2000051e1</UniqueId>
								</Properties>
							</Item>
							<Item class="Script" referent="RBXAB0EA938F6C44ED4B8C5A1FC1E5F7C3D">
								<Properties>
									<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 800 },
				{ Id = "rbxassetid://180435792", Weight = 200 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 2 },
				{ Id = "rbxassetid://507766951", Weight = 2 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
									<bool name="Disabled">false</bool>
									<Content name="LinkedSource"><null></null></Content>
									<token name="RunContext">0</token>
									<string name="ScriptGuid">{0FCE9C4C-F3AF-4F60-9F44-B46E833026A4}</string>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimSet</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca2000051e2</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Script" referent="RBXD45339EE5D6344768C220D339CD1A2ED">
					<Properties>
						<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries, IdleLength, DT = 0, 0, 0
local Humanoid : Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator : Animator repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10

----------Settings-----------

local AnimationsAnimationSpeedMultiplier = 1 --// Current_AnimationSpeed (2) * AnimationsAnimationSpeedMultiplier (2) = 4
local WaitBeforeUpdatePose = 0.02 -- Bigger value = less script activity + more unstable
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31 -- Wait if character jumped
local WaitBeforeFallAnimation = 0.07 -- Default wait (no jump)
local EmotesSpeed = 0.8 -- Dance anims must be slower

local WhenEmotesCantBeUsed = {  -- self explaining
	walk = true, 
	run = true, 
	swim = true, 
	swimidle = true, 
	jump = true, 
	fall = true, 
	climb = true, 
	sit = true
}

local InverseOnWork = { -- Determines when animations will play backwards ( function Direction() )
	BackwardRight = true, 
	BackwardLeft = true, 
	Backward = true
}

local AnimationSpeedAdjust = { -- Example: AnimationSpeed (2) = RunSpeed (32) / AnimationSpeedAdjust.run (16)
	walk = 9,
	run = 16,
	climb = (Humanoid.RigType == Enum.HumanoidRigType.R15 and 4) or 12, -- R6 and R15 speed must be different (roblox's skill issue)
	swim = 10,
}

local EmoteNames = { -- False = loop, true = no loop (not recommended to change anything)
	wave = true, 
	point = true, 
	dance = false, 
	dance1 = false, 
	dance2 = false, 
	dance3 = false, 
	laugh = true, 
	cheer = true
}

local InverseAnimsNames = {
	walk = true, 
	run = true, 
	swim = true
} -- climb using own logic

-----------------------------

------Function for help------

function CreateInstance(Where: Instance, ClassName: string, Name: string, DeleteOnFind: boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table: {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function Assert(Condition: (any), ErrorMessage: string?): ()
	if not (Condition) then error(`Animate: {ErrorMessage}`, 2) end
end

-----------------------------

local Current_AnimationTrack, CurrentAnimKeyEndedHandler, FixForEDancesThatHaveLoop, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, GetStateHelper
local Current_AnimationSpeed = 1
local Current_PlayingEmote, Alive = false, true
local AnimTable, Events: {RBXScriptConnection}, FastAnimationLink = {}, {}, {}
local AnimNames = {

	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation

				{ Id = "rbxassetid://180435571", Weight = 9 },
				{ Id = "rbxassetid://180435792", Weight = 1 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		} :: {},

	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 1 },
				{ Id = "rbxassetid://507766951", Weight = 1 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local Class_Speed = 
	{
		climb = 0,
		run = 0,
		swim = 0,
	}

function DisconnectEvents() for _, Event: RBXScriptConnection in Events do Event:Disconnect() end end 

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation: Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	if FixForEDancesThatHaveLoop then FixForEDancesThatHaveLoop:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	--Current_PlayingEmote = false
end

function RollAnimation(AnimClassName: string) -- Sol's RNG lol
	local AnimClassTable = AnimTable[AnimClassName]
	local TotalWeight = 0

	for _, Table in AnimClassTable do TotalWeight += Table.Weight end
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, SelectedIndex = 0, 1
	for Index, Table in AnimClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			SelectedIndex = Index
			break
		end
	end

	return SelectedIndex
end

function AnimEnded(Keyframe: string?)
	if Keyframe then
		if Keyframe == "End" then Current_PlayingEmote = false GetStateHelper = false end
		return
	end
	Current_PlayingEmote = false GetStateHelper = false
end -- ForDances 

function SwitchToAnim(Animation: Animation, AnimClassName: string, TransitionTime: number, HotChange: number?)
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation) :: AnimationTrack
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims
		if EmoteNames[AnimClassName] then FixForEDancesThatHaveLoop = Current_AnimationTrack.KeyframeReached:Connect(AnimEnded) end -- Using only because old roblox system :/
		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
	end
	return Current_AnimationTrack.Length or 5 -- DefaultAnimationLenght
end

function AdjustSpeed()
	repeat task.wait(0.02) until Current_AnimationTrack
	while Alive do
		local RunSpeed = Current_AnimationSpeed / GetHeightScale() -- x1.25 Speed
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * ((InverseAnimsNames[Pose] and InverseFunction()) or 1)
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function PlayAnimation(AnimClassName: string, TransitionTime: number?, Speed: number?, HotChange: number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	Current_AnimationSpeed = (Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1) * AnimationsAnimationSpeedMultiplier
	return AnimationLength
end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end


function ConfigureAnimationSet(Name: string, FileList: {{Id: string, Weight: number}})
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	local Folder
	
	local function AnimationConfiguration(Folder: Folder, Animation: Animation, Index: number)
		local Table = {}
		local AnimationName = Animation.Name
		local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
		Animation:SetAttribute("ChangeTo", "")
		PreLoadAnim(Animation)

		while AnimClassTable[Index] do Index += 1 end -- Get unused number
		FastAnimationLink[Animation] = Index
		AnimClassTable[Index] = Table
		Table.Anim = Animation
		Table.Weight = Weight


		table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName: string)

			---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

			if AttrbuteName == "ChangeTo" then
				local AnimationId = Animation:GetAttribute("ChangeTo")			
				--local TempAnimFolder = CreateInstance(Animation, "Folder", "TempAnimFolder") :: Folder
				local CreatedAnimation = CreateInstance(Animation, "Animation", AnimationName, true) :: Animation
				CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
				PreLoadAnim(CreatedAnimation)
				Table.Anim = CreatedAnimation
				if Current_AnimationInstance == Animation then
					GetStateHelper = "None"
					--PlayAnimation("temp")
					--PlayAnimation(Name)
				end
				------------------------------------------------------------------------

			elseif AttrbuteName == "Weight" then
				local UpdatedWeight = Animation:GetAttribute("Weight") or 1
				local Type = type(UpdatedWeight)
				Assert(Type == "number", `Number expected, got {Type} ({UpdatedWeight})`)
				Table.Weight = UpdatedWeight
			end				
		end))

	end
	
	if Config then
		Folder = Instance.new("Folder", script)
		Folder.Name = Config.Name
		local ToDestroy = Config
		Config = Folder

		for I, Animation: Animation in ToDestroy:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
				AnimationConfiguration(Config, Animation, I)
			end
			Animation.Parent = Folder
		end
		
		ToDestroy:Destroy()
	else
		Config = Instance.new("Folder", script)
		Config.Name = Name
		for I, Anim in FileList do
			local Animation = Instance.new("Animation", Config)
			Animation.Name = Name .. I
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
			AnimationConfiguration(Config, Animation, I)
		end
	end


	table.insert(Events, Config.ChildAdded:Connect(function(Added: Instance)
		if Added:IsA("Animation") then
			if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
			AnimationConfiguration(Config, Added, 1)
		end
	end))

	table.insert(Events, Config.ChildRemoved:Connect(function(Removed: Instance)
		if Removed:IsA("Animation") then
			local Index = FastAnimationLink[Removed]
			FastAnimationLink[Removed] = nil
			AnimTable[Name][Index] = nil -- Removing from AnimTable
		end
	end))
end

function PlayEmote(EmoteAnimation: Animation, TransitionTime: number)
	Current_PlayingEmote = true
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName: string, TransitionTime: number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed: number)
	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	script:SetAttribute("RunSpeed", Speed)
	Class_Speed.run = Speed
end

function FallDelta(JumpAnimTime: number)
	repeat JumpAnimTime -= task.wait(0.015) until Humanoid:GetState().Name ~= "Freefall" or JumpAnimTime <= 0
	if JumpAnimTime <= 0 and Humanoid:GetState().Name == "Freefall" then PlayAnimation("fall", 0.1) end
end

function OnJumping() GetStateHelper = "Jumping" end
function OnClimbing(Speed: number) Class_Speed.climb = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed) end
function OnSwimming(Speed: number) Class_Speed.swim = math.clamp(Speed, 0, Humanoid.WalkSpeed) end

function AnimateTool(UseToolNone : boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child: Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child: Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

InverseFunction = function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name :: string, FileList :: {{Id: string, Weight: number}}) end

-- Connect events
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

local PosesLogic = 
	{

		Jumping = function()
			PlayAnimation("jump", 0.1)
			FallDelta(WaitBeforeFallAnimationPlayAfterJump)
			--repeat task.wait(WaitBeforeUpdatePose) until Humanoid:GetState().Name ~= "Freefall"
			GetStateHelper = false
		end,

		Freefall = function() FallDelta(WaitBeforeFallAnimation) end,

		GettingUp = function() StopAllPosesAnimations() end,	
		FallingDown = function() StopAllPosesAnimations() end,	
		PlatformStanding = function() StopAllPosesAnimations() end,

		Running = function()
			local Speed = Class_Speed.run
			if Speed < 0.4 then if IdleLength <= 0 or Pose ~= "idle" then IdleLength = PlayAnimation("idle", 0.2) end -- Idle RNG
		elseif Speed >= 0.4 and Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
		else PlayAnimation("run", 0.2, Speed)
		end
		end,

		Seated = function() PlayAnimation("sit", 0.5) end,

		Dead = function() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() Alive = false end,

		Swimming = function()
			local Speed = Class_Speed.swim
			if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
		else PlayAnimation("swimidle", 0.4)
		end
		end,

		Climbing = function()
			PlayAnimation("climb", 0.2, Class_Speed.climb)
		end,

		None = function()
			PlayAnimation("temp")
			GetStateHelper = false
		end,
	}	

function PoseUpdater()
	while Alive do
		if not Current_PlayingEmote then
			local State = Humanoid:GetState().Name
			--print(State)
			if GetStateHelper then PosesLogic[GetStateHelper]()
			elseif PosesLogic[State] then PosesLogic[State]()
			end
		end
		--if Class_Speed.run > 0 and Current_PlayingEmote then Current_PlayingEmote = false GetStateHelper = false end
		--PosesLogic[GetStateHelper or Humanoid:GetState()]()
		DT = task.wait(WaitBeforeUpdatePose)
		IdleLength -= DT
	end
end

task.spawn(AdjustSpeed)
PoseUpdater()]]></ProtectedString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{1D29F6D0-C7FB-4CB4-887D-1647A49939E9}</string>
						<BinaryString name="AttributesSerialize">AgAAAA4AAABBbmltYXRpb25TcGVlZAYAAAAAAAAAAAgAAABSdW5TcGVlZAYAAAAAAAAAAA==</BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Animate</string>
						<int64 name="SourceAssetId">18990422140</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca2000078ec</UniqueId>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXA1C0DECAF4CD4711929CA80CBC24FF79">
					<Properties>
						<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

-- Made By NOTEKAMI
-- DevForum post: https://devforum.roblox.com/t/better-roblox-animate-script-r15/2871306
local Character = script.Parent
local Tries, IdleLength, DT = 0, 0, 0
local Humanoid: Humanoid repeat Humanoid = Character:FindFirstChildOfClass("Humanoid") task.wait() until Humanoid
local Animator: Animator? repeat Animator = Humanoid:FindFirstChildOfClass("Animator") task.wait() Tries += 1 until Animator or Tries >= 10

----------Settings-----------

local AnimationsAnimationSpeedMultiplier = 1 --// Current_AnimationSpeed (2) * AnimationsAnimationSpeedMultiplier (2) = 4
local WaitBeforeUpdatePose = 0.02 -- Bigger value = less script activity + more unstable
local WaitBeforeUpdateAnimationSpeed = 0.15
local WaitBeforeFallAnimationPlayAfterJump = 0.31 -- Wait if character jumped
local WaitBeforeFallAnimation = 0.07 -- Default wait (no jump)
local EmotesSpeed = 1 -- Emotes speed

local WhenEmotesCantBeUsed = {  -- self explaining
		walk = true, 
		run = true, 
		swim = true, 
		swimidle = true, 
		jump = true, 
		fall = true, 
		climb = true, 
		sit = true
	}

local InverseOnWork = { -- Determines when animations will play backwards ( function Direction() )
	BackwardRight = true, 
	BackwardLeft = true, 
	Backward = true
}

local AnimationSpeedAdjust = { -- Example: AnimationSpeed (2) = RunSpeed (32) / AnimationSpeedAdjust.run (16)
		walk = 9,
		run = 16,
		climb = (Humanoid.RigType == Enum.HumanoidRigType.R15 and 4) or 12, -- R6 and R15 speed must be different (roblox's skill issue)
		swim = 10,
	}

local EmoteNames = { -- False = loop, true = no loop (not recommended to change anything)
	wave = true, 
	point = true, 
	dance = false, 
	dance1 = false, 
	dance2 = false, 
	dance3 = false, 
	laugh = true, 
	cheer = true
}

local InverseAnimsNames = {
	walk = true, 
	run = true, 
	swim = true
} -- climb using own logic

-----------------------------

------Function for help------

function CreateInstance(Where: Instance, ClassName: string, Name: string, DeleteOnFind: boolean?)
	local Inst = Where:FindFirstChild(Name)
	if Inst and Inst:IsA(ClassName) then
		if DeleteOnFind then Inst:Destroy() return CreateInstance(Where, ClassName, Name) end
		return Inst
	end
	Inst = Instance.new(ClassName, Where) Inst.Name = Name
	return Inst :: Instance
end

function HowMuchInTable(Table: {any})
	local Num = 0
	for I, Element in Table do Num += 1 end
	return Num
end

function Assert(Condition: (any), ErrorMessage: string?): ()
	if not (Condition) then error(`Animate: {ErrorMessage}`, 2) end
end

-----------------------------

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local ControlModule = require(Player:WaitForChild("PlayerScripts").PlayerModule:WaitForChild("ControlModule"))
local Current_AnimationTrack, CurrentAnimKeyEndedHandler, FixForEDancesThatHaveLoop, ToolAnimationTrack, ToolAnimationInstance, CurrentToolAnimKeyframeHandler, CurrentAnimation, ToolAnimName, Emote, Current_AnimationInstance, InverseFunction, GetStateHelper
local Current_AnimationSpeed = 1
local Current_PlayingEmote, Alive = false, true
local AnimTable, Events: {RBXScriptConnection}, FastAnimationLink = {}, {}, {}
local AnimNames = {"idle", "walk", "run", "swim", "swimidle", "jump", "fall", "climb", "sit", "toolnone", "wave", "point", "dance1", "dance2", "dance3", "laugh", "cheer", "temp" }
local Class_Speed = 
	{
		climb = 0,
		run = 0,
		swim = 0,
	}

function DisconnectEvents() for _, Event: RBXScriptConnection in Events do Event:Disconnect() end end 

function StopPlayingAnimations() for _, Animation in (Animator or Humanoid):GetPlayingAnimationTracks() do Animation:Stop() end end

function PreLoadAnim(Animation: Animation) (Animator or Humanoid):LoadAnimation(Animation) end

function Direction()
	local MoveVector = ControlModule:GetMoveVector()
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	else return "Forward"
	end
end

function StopAllPosesAnimations()
	--------------------- Sometimes without "if" code can break -----------
	if Current_AnimationTrack then Current_AnimationTrack:Stop(0.2) end
	if CurrentAnimKeyEndedHandler then CurrentAnimKeyEndedHandler:Disconnect() end
	if FixForEDancesThatHaveLoop then FixForEDancesThatHaveLoop:Disconnect() end
	CurrentAnimation = ""
	Current_AnimationInstance = nil
	--Current_PlayingEmote = false
end

function RollAnimation(AnimClassName: string) -- Sol's RNG lol
	local AnimClassTable = AnimTable[AnimClassName]
	local TotalWeight = 0
	
	for _, Table in AnimClassTable do TotalWeight += Table.Weight end
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, SelectedIndex = 0, 1
	for Index, Table in AnimClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			SelectedIndex = Index
			break
		end
	end

	return SelectedIndex
end

function AnimEnded(Keyframe: string?)
	if Keyframe then
		if Keyframe == "End" then Current_PlayingEmote = false GetStateHelper = false end
		return
	end
	Current_PlayingEmote = false GetStateHelper = false
end -- ForDances 

function SwitchToAnim(Animation: Animation, AnimClassName: string, TransitionTime: number, HotChange: number?)
	if Animation ~= Current_AnimationInstance or HotChange then
		StopAllPosesAnimations()
		Current_AnimationInstance = Animation
		Current_AnimationTrack = (Animator or Humanoid):LoadAnimation(Animation) :: AnimationTrack
		Current_AnimationTrack.Priority = Enum.AnimationPriority.Core
		CurrentAnimKeyEndedHandler = Current_AnimationTrack.Ended:Connect(AnimEnded) -- for non-looped anims
		if EmoteNames[AnimClassName] then FixForEDancesThatHaveLoop = Current_AnimationTrack.KeyframeReached:Connect(AnimEnded) end -- Using only because old roblox system :/
		Current_AnimationTrack:Play(TransitionTime)
		CurrentAnimation = AnimClassName
	end
	return Current_AnimationTrack.Length or 5 -- DefaultAnimationLenght
end

function AdjustSpeed()
	repeat task.wait(0.02) until Current_AnimationTrack -- Wait before Adjust
	while Alive do
		local RunSpeed = Current_AnimationSpeed / GetHeightScale() 
		script:SetAttribute("AnimationSpeed", RunSpeed) -- Get anim speed, 
		local SpeedTimerwarp = RunSpeed * ((InverseAnimsNames[Pose] and InverseFunction()) or 1)
		Current_AnimationTrack:AdjustSpeed(SpeedTimerwarp)
		task.wait(WaitBeforeUpdateAnimationSpeed)
	end
end

function PlayAnimation(AnimClassName: string, TransitionTime: number?, Speed: number?, HotChange: number?)
	Pose = AnimClassName
	local Anim = AnimTable[AnimClassName][HotChange or RollAnimation(AnimClassName)].Anim
	local AnimationLength = SwitchToAnim(Anim, AnimClassName, TransitionTime or 0, HotChange)
	Current_AnimationSpeed = (Speed or 1) / (AnimationSpeedAdjust[AnimClassName] or 1) * AnimationsAnimationSpeedMultiplier
	return AnimationLength
end

function GetHeightScale()
	if Humanoid and not Humanoid.AutomaticScalingEnabled then return Humanoid.HipHeight / 2 end -- HumanoidHipHeight = 2
	return Character:GetScale() -- else
end


function ConfigureAnimationSet(Name: string)
	local AnimClassTable = {}
	AnimTable[Name] = AnimClassTable
	local Config = script:FindFirstChild(Name) -- Look for Animation Folder / StringValue
	if Config then

		local function AnimationConfiguration(Folder: Folder, Animation: Animation, Index: number)
			local Table = {}
			local AnimationName = Animation.Name
			local Weight = Animation:GetAttribute("Weight") or (Animation:SetAttribute("Weight", 1) or 1)
			Animation:SetAttribute("ChangeTo", "")
			PreLoadAnim(Animation)

			while AnimTable[Name][Index] do Index += 1 end -- Get unused number
			FastAnimationLink[Animation] = Index
			AnimTable[Name][Index] = Table
			Table.Anim = Animation
			Table.Weight = Weight


			table.insert(Events, Animation.AttributeChanged:Connect(function(AttrbuteName: string)

				---------------------Change Animation In Real Time---------------------

				--[[
					              !!!Roblox animation replication is kinda broken!!! 
					Roblox don't like when we change Animation.AnimationId while animation is playing,
					But if another animation is playing (not that you want to change) you can easily change that you want Animation.AnimationId
					
					!!!So im using attribute metod and creating new animation instance its the best way to change animation in real time!!!
				]]

				if AttrbuteName == "ChangeTo" then
					local AnimationId = Animation:GetAttribute("ChangeTo")			
					--local TempAnimFoldier = CreateInstance(Animation, "Folder", "TempAnimFoldier") :: Folder
					local CreatedAnimation = CreateInstance(Animation, "Animation", AnimationName, true) :: Animation
					CreatedAnimation.AnimationId = "rbxassetid://" .. string.gsub(AnimationId, "%a+", "")
					PreLoadAnim(CreatedAnimation)
					Table.Anim = CreatedAnimation
					if Current_AnimationInstance == Animation then
						GetStateHelper = "None"
						--PlayAnimation("temp")
						--PlayAnimation(Name)
					end
				------------------------------------------------------------------------

				elseif AttrbuteName == "Weight" then
					local UpdatedWeight = Animation:GetAttribute("Weight") or 1
					local Type = type(UpdatedWeight)
					Assert(Type == "number", `Number expected, got {Type} ({UpdatedWeight})`)
					Table.Weight = UpdatedWeight
				end				
			end))

		end

		table.insert(Events, Config.ChildAdded:Connect(function(Added : Instance)
			if Added:IsA("Animation") then
				if Added.AnimationId == "" then Added.AnimationId = AnimTable.temp[1].Anim.AnimationId end -- If you somewhy forgot to set AnimationId
				AnimationConfiguration(Config, Added, 1)
			end
		end))

		table.insert(Events, Config.ChildRemoved:Connect(function(Removed : Instance)
			if Removed:IsA("Animation") then
				local Index = FastAnimationLink[Removed]
				FastAnimationLink[Removed] = nil
				AnimTable[Name][Index] = nil -- Removing from AnimTable
			end
		end))

		for I, Animation : Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				AnimationConfiguration(Config, Animation, I)
			end
		end
	else
		warn(Name, "not found")
	end
end

function PlayEmote(EmoteAnimation : Animation, TransitionTime : number)
	Current_PlayingEmote = true
	SwitchToAnim(EmoteAnimation, EmoteAnimation.Name, TransitionTime)
end

function ToolAnimEnded() PlayToolAnimation(ToolAnimName, 0) end

function PlayToolAnimation(AnimationName : string, TransitionTime : number)	 		
	local Idx = RollAnimation(AnimationName)
	local Animation = AnimTable[AnimationName][Idx].Anim
	if ToolAnimationInstance ~= Animation then
		if ToolAnimationTrack then
			ToolAnimationTrack:Stop()
			ToolAnimationTrack = nil
			TransitionTime = 0
		end
		ToolAnimationTrack = (Animator or Humanoid):LoadAnimation(Animation)
		ToolAnimationTrack.Priority = Enum.AnimationPriority.Idle
		ToolAnimationTrack:Play(TransitionTime)
		ToolAnimName = AnimationName
		ToolAnimationInstance = Animation
		CurrentToolAnimKeyframeHandler = ToolAnimationTrack.Ended:Connect(ToolAnimEnded)
	end
end

function StopToolAnimations()
	if CurrentToolAnimKeyframeHandler then CurrentToolAnimKeyframeHandler:Disconnect() end
	ToolAnimName = ""
	ToolAnimationInstance = nil
	if ToolAnimationTrack then
		ToolAnimationTrack:Stop()
		ToolAnimationTrack = nil
	end
end

function OnRunning(Speed: number)
	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	script:SetAttribute("RunSpeed", Speed)
	Class_Speed.run = Speed
end

function FallDelta(JumpAnimTime: number)
	repeat JumpAnimTime -= task.wait(0.015) until Humanoid:GetState().Name ~= "Freefall" or JumpAnimTime <= 0
	if JumpAnimTime <= 0 and Humanoid:GetState().Name == "Freefall" then PlayAnimation("fall", 0.1) end
end

function OnJumping() GetStateHelper = "Jumping" end
function OnClimbing(Speed: number) Class_Speed.climb = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed) end
function OnSwimming(Speed: number) Class_Speed.swim = math.clamp(Speed, 0, Humanoid.WalkSpeed) end

function AnimateTool(UseToolNone: boolean) if not UseToolNone then PlayToolAnimation("toolnone", 0.1) end end

function OnChildAdded(Child: Instance) if Child:IsA("Tool") and Child:FindFirstChild("Handle") then
		local Root = Character:FindFirstChild("HumanoidRootPart") or Character.PrimaryPart
		if Root then	
			------------------------------------Anti Tool Speed glitch--------------------------------------------
			local Phys = Root.CurrentPhysicalProperties
			Root.CustomPhysicalProperties = PhysicalProperties.new(Phys.Density - 0.01, Phys.Friction, Phys.Elasticity, Phys.FrictionWeight, Phys.ElasticityWeight)
			task.wait()
			Root.CustomPhysicalProperties = Phys
			--------------------------------------------------------------------------------
			AnimateTool(Child:GetAttribute("NoToolNone")) 
		end
	end 
end -- Look for tool animation

function OnChildRemoved(Child: Instance) if Child:IsA("Tool") then StopToolAnimations() end end -- StopToolAnimations

function PlayInverse()
	script:SetAttribute("Direction", Direction())
	if script:GetAttribute("LockCenter") and InverseOnWork[script:GetAttribute("Direction")] then return -1 end
	return 1
end

InverseFunction = (script:GetAttribute("UseDynamicWalk") and PlayInverse) or function() return 1 end
repeat task.wait(0.05) until not script:FindFirstChild("AnimSet") -- if you somewhy wanted to enable animate script
StopPlayingAnimations() -- if you delete animate script and paste again you need this

for _, Name in AnimNames do task.wait() ConfigureAnimationSet(Name) end

-- Connect events
table.insert(Events, Humanoid.Running:Connect(OnRunning))
table.insert(Events, Humanoid.Jumping:Connect(OnJumping))
table.insert(Events, Humanoid.Climbing:Connect(OnClimbing))
table.insert(Events, Humanoid.Swimming:Connect(OnSwimming))
table.insert(Events, Character.ChildAdded:Connect(OnChildAdded))
table.insert(Events, Character.ChildRemoved:Connect(OnChildRemoved))

table.insert(Events, script:GetAttributeChangedSignal("UseDynamicWalk"):Connect(function()
	if script:GetAttribute("UseDynamicWalk") then InverseFunction = PlayInverse
	else
		InverseFunction = function() return 1 end
		script:SetAttribute("Direction", "")
	end
end))

table.insert(Events, UIS:GetPropertyChangedSignal("MouseBehavior"):Connect(function() -- For Dynamic movement
	if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then script:SetAttribute("LockCenter", true) return end
	script:SetAttribute("LockCenter", false)
end))

-- Emote bindable hook
script:WaitForChild("PlayEmote").OnInvoke = function(EmoteInvoke)
	if not WhenEmotesCantBeUsed[Pose] then -- Only play Emotes when idling
		Current_PlayingEmote = true
		task.wait(WaitBeforeUpdatePose)
		if EmoteNames[EmoteInvoke] ~= nil then -- Default Emotes
			PlayAnimation(EmoteInvoke, 0.1)
			Current_AnimationSpeed = EmotesSpeed
			return true, Current_AnimationTrack
		elseif typeof(EmoteInvoke) == "Instance" and EmoteInvoke:IsA("Animation") then -- Non-default Emotes
			PlayEmote(EmoteInvoke, 0.1)
			Current_AnimationSpeed = EmotesSpeed
			return true, Current_AnimationTrack
		end
	end
	return false, nil -- Return false to indicate that the Emote could not be played
end

local PosesLogic = 
	{
		
		Jumping = function()
			PlayAnimation("jump", 0.1)
			FallDelta(WaitBeforeFallAnimationPlayAfterJump)
			--repeat task.wait(WaitBeforeUpdatePose) until Humanoid:GetState().Name ~= "Freefall"
			GetStateHelper = false
		end,
		
		Freefall = function() FallDelta(WaitBeforeFallAnimation) end,
		
		GettingUp = function() StopAllPosesAnimations() end,	
		FallingDown = function() StopAllPosesAnimations() end,	
		PlatformStanding = function() StopAllPosesAnimations() end,
		
		Running = function()
			local Speed = Class_Speed.run
			if Speed < 0.4 then if IdleLength <= 0 or Pose ~= "idle" then IdleLength = PlayAnimation("idle", 0.2) end -- Idle RNG
			elseif Speed >= 0.4 and Speed <= 9 then PlayAnimation("walk", 0.2, Speed)
			else PlayAnimation("run", 0.2, Speed)
			end
		end,
		
		Seated = function() PlayAnimation("sit", 0.5) end,
		
		Dead = function() DisconnectEvents() StopAllPosesAnimations() StopToolAnimations() Alive = false end,
		
		Swimming = function()
			local Speed = Class_Speed.swim
			if Speed > 3 then PlayAnimation("swim", 0.4, Speed) -- Special (if player jump in water his speed multiples by 5)
			else PlayAnimation("swimidle", 0.4)
			end
		end,
		
		Climbing = function()
			PlayAnimation("climb", 0.2, Class_Speed.climb)
		end,
		
		None = function()
			PlayAnimation("temp")
			GetStateHelper = false
		end,
	}	

function PoseUpdater()
	while Alive do
		if not Current_PlayingEmote then
			local State = Humanoid:GetState().Name
			--print(State)
			if GetStateHelper then PosesLogic[GetStateHelper]()
			elseif PosesLogic[State] then PosesLogic[State]()
			end
		end
		if Humanoid.MoveDirection.Magnitude ~= 0 and Current_PlayingEmote then Current_PlayingEmote = false GetStateHelper = false end
		--PosesLogic[GetStateHelper or Humanoid:GetState()]()
		DT = task.wait(WaitBeforeUpdatePose)
		IdleLength -= DT
	end
end

task.spawn(AdjustSpeed)
PoseUpdater()]]></ProtectedString>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{F65F9FA5-EAED-4BC0-8DEA-F0EFC18D50C4}</string>
						<BinaryString name="AttributesSerialize"><![CDATA[BQAAAA4AAABBbmltYXRpb25TcGVlZAUAAAAACQAAAERpcmVjdGlvbgIAAAAACgAAAExvY2tD
ZW50ZXIDAAgAAABSdW5TcGVlZAUAAAAADgAAAFVzZUR5bmFtaWNXYWxrAwE=]]></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">Animate</string>
						<int64 name="SourceAssetId">16697831083</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca200007fd6</UniqueId>
					</Properties>
					<Item class="BindableFunction" referent="RBX3F2C9ED2E7A1435EBAC54F5CD9A4F970">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">PlayEmote</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca200007fd7</UniqueId>
						</Properties>
					</Item>
					<Item class="Script" referent="RBXEFAE751E4ACB4AB48DB5C07F598CD209">
						<Properties>
							<ProtectedString name="Source"><![CDATA[local Script = script.Parent
local Character = Script.Parent
local Humanoid = Character:WaitForChild("Humanoid") :: Humanoid

local AnimNames = {
	
	[Enum.HumanoidRigType.R6] = 
		{
			idle = 	{ -- "Random" idle animation
				
				{ Id = "rbxassetid://180435571", Weight = 800 },
				{ Id = "rbxassetid://180435792", Weight = 200 },
			},
			walk = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swim = 	{ { Id = "rbxassetid://180426354", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://180426354", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://125750702", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://180436148", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://180436334", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://178130996", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://182393478", Weight = 10 } },
			wave = { { Id = "rbxassetid://128777973", Weight = 10 } },
			point = { { Id = "rbxassetid://128853357", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://182435998", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://182436842", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://182436935", Weight = 10 } },
			laugh = { { Id = "rbxassetid://129423131", Weight = 10 } },
			cheer = { { Id = "rbxassetid://129423030", Weight = 10 } },
			temp = { { Id = "rbxassetid://15609995579", Weight = 1 } }, -- r15 for r6
		},
	
	[Enum.HumanoidRigType.R15] = 
		{
			idle = 	{ -- "Random" idle animation
				{ Id = "rbxassetid://507766666", Weight = 2 },
				{ Id = "rbxassetid://507766951", Weight = 2 },
				{ Id = "rbxassetid://507766388", Weight = 8 }
			},
			walk = 	{ { Id = "rbxassetid://507777826", Weight = 10 } }, 
			run = 	{ { Id = "rbxassetid://507767714", Weight = 10 } }, 
			swim = 	{ { Id = "rbxassetid://507784897", Weight = 10 } },
			swimidle = 	{ { Id = "rbxassetid://507785072", Weight = 10 } }, 
			jump = 	{ { Id = "rbxassetid://507765000", Weight = 10 } }, 
			fall = 	{ { Id = "rbxassetid://507767968", Weight = 10 } }, 
			climb = { { Id = "rbxassetid://507765644", Weight = 10 } }, 
			sit = 	{ { Id = "rbxassetid://2506281703", Weight = 10 } },	
			toolnone = { { Id = "rbxassetid://507768375", Weight = 10 } },
			wave = { { Id = "rbxassetid://507770239", Weight = 10 } },
			point = { { Id = "rbxassetid://507770453", Weight = 10 } },
			dance1 = { { Id = "rbxassetid://507772104", Weight = 10 } },
			dance2 = { { Id = "rbxassetid://507776879", Weight = 10 } },
			dance3 = { { Id = "rbxassetid://507777623", Weight = 10 } },
			laugh = { { Id = "rbxassetid://507770818", Weight = 10 } },
			cheer = { { Id = "rbxassetid://507770677", Weight = 10 } },
			temp = { { Id = "rbxassetid://27789359", Weight = 1 } }, -- r6 for r15
		},
}

local function ConfigureAnimationSet(Name, FileList)
	local Config = Script:FindFirstChild(Name)
	if Config then
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Config.Name
		for I, Animation in Config:GetChildren() do
			if Animation:IsA("Animation") then
				Animation.Name = Config.Name .. I
				local Weight = Animation:FindFirstChild("Weight")
				if Weight then Animation:SetAttribute("Weight", Weight.Value) Weight:Destroy()
				else Animation:SetAttribute("Weight", 1)
				end
				Animation:SetAttribute("ChangeTo", "")
			end
			Animation.Parent = Folder
		end
		Config:Destroy()
	else
		local Folder = Instance.new("Folder", Script)
		Folder.Name = Name
		for i, Anim in FileList do
			local Animation = Instance.new("Animation", Folder)
			Animation.Name = Name .. i
			Animation.AnimationId = Anim.Id
			Animation:SetAttribute("ChangeTo", "")
			Animation:SetAttribute("Weight", Anim.Weight)
		end
	end
end

for Name, FileList in AnimNames[Humanoid.RigType] do task.wait() ConfigureAnimationSet(Name, FileList) end

Script.Enabled = true
script:Destroy()]]></ProtectedString>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{C0735104-BC33-41E9-B9AB-603A10E6012E}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">AnimSet</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">623c0b4be20c3a5306f56ca200007fd8</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX362BB5BA5EC04533864E5CE74FD437BA">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">1.2</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">6c625a154e184f35075b24d20000a1fa</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX4D074E768D3249E5A252A65DBDEDD014">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local Utils = require(script.Utils)
local Trove = require(script.Trove)
local Types = require(script.Types)

function NotAZero(AnimationTrack: AnimationTrack, DefaultValue: number): number
	local NotAZero = AnimationTrack and AnimationTrack.Length > 0
	return NotAZero and AnimationTrack.Length or DefaultValue
end

local DefaultAnimations = require(script.DefaultAnimations)
local DefaultSettings = require(script.DefaultSettings)

local BetterAnimate = {
	DefaultAnimations = DefaultAnimations,
	DefaultSettings = DefaultSettings,
} :: Types.BetterAnimate

BetterAnimate.__index = BetterAnimate

-----------Other (Outside Animator)
function BetterAnimate:Start()
	local Root = self.PrimaryPart
	local Humanoid = self.Humanoid
	local Character = self.Character
	local Settings = self.Settings

	self.Trove_BetterAnimate:Connect(Character.ChildAdded, function(Child: Instance)
		self:ChildAdded(Child)
	end)

	self.Trove_BetterAnimate:Connect(Character.ChildRemoved, function(Child: Instance)
		self:ChildRemoved(Child)
	end)

	self.Trove_BetterAnimate:Connect(Humanoid.StateChanged, function(Old: Enum.HumanoidStateType, New: Enum.HumanoidStateType)
		local IsDefferedState = Settings.State_Deffered[New.Name]
		if IsDefferedState then
			--warn(New)
			self:ForceState(IsDefferedState)
			--self.State_Forced = IsDefferedState
		end
	end)

	--self.Trove_BetterAnimate:Connect(Humanoid.Climbing, function(Speed: number)
	--	Speed = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed)
	--	Settings.Class_Speed.Climb = Speed
	--	self.MovingSpeed = Speed
	--end)

	--self.Trove_BetterAnimate:Connect(Humanoid.Swimming, function(Speed: number)
	--	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	--	Settings.Class_Speed.Swim = Speed
	--	self.MovingSpeed = Speed
	--end)
	
	--self.Trove_BetterAnimate:Connect(Humanoid.Running, function(Speed: number)
	--	--Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	--	Settings.Class_Speed.Run = Speed
	--	self.MovingSpeed = Speed
	--end)

	self.Trove_BetterAnimate:Add(task.defer(self.AnimationUpdater, self))
end

function BetterAnimate:Destroy() -- Clear everything
	local IsTrove = self.Trove_BetterAnimate
	if IsTrove then
		self.Trove_BetterAnimate:Destroy()
	end
	setmetatable(self, nil)
end

function BetterAnimate:EnableDebug(Enable: boolean?)
	
	if Enable then
		print("[BetterAnimate] Debug enabled", self.Character)
		local C_Frame, Size = self.Character:GetBoundingBox()
		local Height = self:GetHeightScale()

		local PrimaryPartPosition = self.PrimaryPart.CFrame.Position
		local ModelPosition = C_Frame.Position
		local Offset = ModelPosition - PrimaryPartPosition

		local DebugBillboard: BillboardGui = self.Trove_Debug:Clone(script.Debug)
		DebugBillboard.StudsOffset = Vector3.new(0, Size.Y / 2 + Offset.Y + 1.5, 0)
		DebugBillboard.Parent = self.PrimaryPart

		local Main: Frame = DebugBillboard.Main
		local Class: TextLabel = Main.Class
		local Direction: TextLabel = Main.Direction
		local ID: TextLabel = Main.ID
		local Timer: TextLabel = Main.Timer
		local Total: TextLabel = Main.Total
		local Speed: TextLabel = Main.Speed
		local State: TextLabel = Main.State

		self.Trove_Debug:Add(task.defer(function()
			while task.wait(self.Settings.Time_Debug) do
				--print("Check")
				local Current_AnimationClass = self.Current_AnimationClass
				local Tracks = #self.Animator:GetPlayingAnimationTracks()

				Class.Text = `Class {Current_AnimationClass}`
				Direction.Text = `Direction {self.MovingDirection}`
				ID.Text = `ID {self.Current_AnimationTrack and string.gsub(self.Current_AnimationTrack.Animation.AnimationId, "%D", "") or nil}`
				Timer.Text = `Timer {string.format(`%.{2}f`, self.Class_Timer.Current[Current_AnimationClass] or 0)}`
				Total.Text = `Total {Tracks}`
				Speed.Text = `Speed {string.format(`%.{2}f`, self.MovingSpeed or 0)}`
				State.Text = `State {self.Current_State}`

				if Tracks > 2 then
					print(`[BetterAnimate [Debug]] Tracks`, Tracks)
				end
			end
		end))
	else
		self.Trove_Debug:Clear(true)
	end
end

function BetterAnimate:StopPlayingAnimations() -- Why not :)
	self:StopCurrentAnimation()
	for _, Animation in self.Animator:GetPlayingAnimationTracks() do 
		Animation:Stop(self.Settings.Time_AnimationStop)
	end
end

function BetterAnimate:UpdateAnimations(NewClassAnimationsTable: {[string]: Types.AnimationData}, ResetClass: boolean?) --Replace
	for Class, NewAnimationsTable in NewClassAnimationsTable do
		
		if ResetClass then
			local FoundClass = self.Class_Animations[Class]
			if FoundClass then
				for _, AnimationTable in FoundClass do
					self.Trove_BetterAnimate:Remove(AnimationTable.Instance, true)
				end
				self.Class_Animations[Class] = {}
			end
		end
		
		for I, NewAnimationTable in NewAnimationsTable do
			self:AddAnimation(Class, NewAnimationTable, I)
		end
	end
end

function BetterAnimate:ForceState(State: string)
	local State_Functions = self.Settings.State_Functions
	if State_Functions[State] then
		self.State_Forced = `{State}{math.random(10000)}`
	else
		warn(`[BetterAnimate] State {State} not found`, State_Functions)
	end
end

-----------

-----------Main
function BetterAnimate:RollAnimation(AnimationClass: string, ForceIndex: string?) -- Sol's RNG lol
	local AnimationClassTable = self.Class_Animations[AnimationClass]
	local TotalWeight = 0
	
	if ForceIndex then
		local FoundByForce = AnimationClassTable[ForceIndex]
		if FoundByForce then
			return ForceIndex, FoundByForce
		else
			warn(`[BetterAnimate] ForceIndex {ForceIndex} not found`, self.Class_Animations)
		end
	end
	
	for _, Table in AnimationClassTable do 
		TotalWeight += (Table.Weight or 0)
	end

	if TotalWeight == 0 then -- No animations found
		AnimationClass = "Temp"
		AnimationClassTable = self.Class_Animations.Temp
		for _, Table in AnimationClassTable do
			TotalWeight += (Table.Weight or 0)
		end
	end
	
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, ChoosedIndex = 0, 1
	for Index, Table in AnimationClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			ChoosedIndex = Index
			break
		end
	end

	return ChoosedIndex, AnimationClassTable[ChoosedIndex]
end

function BetterAnimate:SwitchAnimation(AnimationClass: string, AnimationTable: Types.AnimationData, TransitionTime: number)
	local Settings = self.Settings

	local AnimationInstance = AnimationTable.Instance :: Animation
	if AnimationInstance ~= self.Current_AnimationInstance or Settings.Class_SwitchIgnore[self.Current_AnimationClass] then
		
		if AnimationInstance == self.Current_AnimationInstance then
			self.Current_AnimationTrack:Play(TransitionTime)
		else
			local AnimationTrack = self.Animator:LoadAnimation(AnimationInstance) --AnimationTable.AnimationTrack
			self:StopCurrentAnimation() -- self.Trove_Animation:Destroy()

			AnimationTrack.Priority = Settings.AnimationPriority

			self.Current_AnimationTrack = AnimationTrack
			self.Current_AnimationInstance = AnimationInstance
			self.Trove_Animation:Connect(AnimationTrack.Ended, function(...) self:AnimationEvent(AnimationClass, AnimationTable, ...) end)
			self.Trove_Animation:Connect(AnimationTrack.KeyframeReached, function(...) self:AnimationEvent(AnimationClass, AnimationTable, ...) end) -- KeyframeReached is NOT bad
			self.Trove_Animation:Add(function() AnimationTrack:Stop(Settings.Time_AnimationStop) end)
			AnimationTrack:Play(TransitionTime)
		end
	end
	return NotAZero(self.Current_AnimationTrack, Settings.DefaultAnimationLenght)
end

function BetterAnimate:Direction(MoveVector: Vector3)
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Y > 0 then return "Up"
	elseif MoveVector.Y < 0 then return "Down"
	else return "None"
	end
end

function BetterAnimate:GetInverse()
	local Settings = self.Settings
	local PrimaryPart = self.PrimaryPart
	local Current_AnimationClass = self.Current_AnimationClass
	
	local Vector3_Direction = self:GetMoveDirection()
	local Direction = self:Direction(Vector3_Direction)

	if self.MovingDirection ~= Direction then
		local Bindable_NewDirection = self.Bindable_NewDirection
		if Bindable_NewDirection then
			Bindable_NewDirection:Fire(Direction, Vector3_Direction)
		end

		self.MovingDirection = Direction
	end

	local NewInverse = Settings.Enabled_Inverse and Settings.InverseOn[Direction] and Settings.Class_Inverse[Current_AnimationClass] and -1 or 1
	return NewInverse
end

function BetterAnimate:AnimationUpdater()
	local Settings = self.Settings
	local Humanoid = self.Humanoid
	local Class_CurrentTimer = self.Class_Timer.Current
	local Passed = 0

	while true do
		if not self.Current_PlayingEmote then
			local ForcedState = self.State_Forced and string.gsub(self.State_Forced, "%d", "") or nil
			local State = ForcedState or Humanoid:GetState().Name
			local SelectedFunction = Settings.State_Functions[State]
			local OldState = self.Current_State
			
			if State ~= OldState then
				local NewState = self.Bindable_NewState
				if NewState then
					NewState:Fire(State)
				end
			end
			
			self.Current_State = State

			SelectedFunction(self)

			if State == ForcedState and ForcedState == string.gsub(self.State_Forced, "%d", "") then -- Check if force state executed
				self.State_Forced = false
			end
		else
			if self:GetMoveDirection().Magnitude ~= 0 then
				self.Current_PlayingEmote = false
				--self.State_Forced = false
			end
		end
		--PosesLogic[GetStateHelper or Humanoid:GetState()]()
		while Passed < Settings.Time_Update do
			self.MovingSpeed = Utils.MaxDecimal(self.PrimaryPart.AssemblyLinearVelocity.Magnitude, 1)
			Passed += task.wait(Settings.Time_DT)
		end

		for Name, Value in Class_CurrentTimer do
			Class_CurrentTimer[Name] -= Passed
		end
		
		self.MovingSpeed = Utils.MaxDecimal(self.PrimaryPart.AssemblyLinearVelocity.Magnitude, 1)
		
		Passed = 0
	end
end

function BetterAnimate:StopCurrentAnimation()
	self.Trove_Animation:Clear(true)
end

function BetterAnimate:GetHeightScale()
	local Humanoid: Humanoid = self.Humanoid
	if Humanoid and not Humanoid.AutomaticScalingEnabled then
		return Humanoid.HipHeight / 2
	else
		return self.Character:GetScale()
	end -- HumanoidHipHeight = 2
end

function BetterAnimate:GetMoveDirection()
	local Settings = self.Settings
	local PrimaryPart = self.PrimaryPart
	local AnimationClass = self.Current_AnimationClass
	
	local Velocity = PrimaryPart.AssemblyLinearVelocity
	local VelocityUnit = Velocity.Unit
	local FixedCFrame: CFrame = PrimaryPart.CFrame * (Settings.Class_DirectionCFrameAdjust[AnimationClass] or CFrame.Angles(0, 0, 0))
	local Multiplier = self.MovingSpeed or 0 --and Utils.MaxDecimal(self.MovingSpeed, 1) or 1
	return Utils.Vector3Round(FixedCFrame:VectorToObjectSpace(VelocityUnit)) * math.abs(Multiplier) 
end
-----------

-----------Class
function BetterAnimate:AnimationEvent(AnimationClass: string, AnimationTable: Types.AnimationData, Keyframe: string?)
	if Keyframe then
		local KeyframeReached = self.Bindable_KeyframeReached
		if KeyframeReached then
			KeyframeReached:Fire(Keyframe, AnimationClass, AnimationTable)
		end
	else
		self.Current_PlayingEmote = false
	end
end

function BetterAnimate:PlayAnimation(AnimationClass: string, TransitionTime: number?, Speed: number?, Index: string?)
	local Settings = self.Settings
	
	local AnimationLength
	local Class_Timer = self.Class_Timer
	local CurrentTimer = Class_Timer.Current
	local MaxTimer = Class_Timer.Max
	
	local OldAnimationClass = self.Current_AnimationClass
	self.Current_AnimationClass = AnimationClass
	
	local function ConfigureAnimation()
		local AnimationName, AnimationTable = self:RollAnimation(AnimationClass, Index)
		local OldAnimationInstance = self.Current_AnimationInstance
		self.Current_AnimationName = AnimationName
		AnimationLength = self:SwitchAnimation(AnimationClass, AnimationTable, TransitionTime or 0)

		local Bindable_NewAnimation = self.Bindable_NewAnimation
		if Bindable_NewAnimation and OldAnimationInstance ~= self.Current_AnimationInstance then
			Bindable_NewAnimation:Fire(AnimationClass, AnimationName, AnimationTable)
		end
	end
	
	local function GetTimer(ClassMaxTimer: number | NumberRange): number
		return typeof(ClassMaxTimer) == "NumberRange" and math.random(ClassMaxTimer.Min * 10, ClassMaxTimer.Max * 10) / 10 or ClassMaxTimer
	end
	
	local ClassMaxTimer: number | NumberRange = MaxTimer[AnimationClass]
	
	if ClassMaxTimer then
		--print(ClassMaxTimer)
		if CurrentTimer[AnimationClass] then
			if CurrentTimer[AnimationClass] <= 0 or OldAnimationClass ~= AnimationClass then
				CurrentTimer[AnimationClass] = GetTimer(ClassMaxTimer)
				ConfigureAnimation()
			else
				AnimationLength = NotAZero(self.Current_AnimationTrack, Settings.DefaultAnimationLenght)
			end
		else
			CurrentTimer[AnimationClass] = GetTimer(ClassMaxTimer)
			ConfigureAnimation()
		end
	else
		ConfigureAnimation()
	end

	self.Current_AnimationSpeed = (Speed or 1) / (Settings.Class_SpeedAdjust[AnimationClass] or 1) * Settings.AnimationSpeedMultiplier
	local AnimationSpeed = (self.Current_AnimationSpeed / self:GetHeightScale()) * self:GetInverse()
	self.Current_AnimationTrack:AdjustSpeed(AnimationSpeed)
	return AnimationLength
end

function BetterAnimate:AddAnimation(AnimationClass: string, AnimationTable: Types.AnimationData, IsIndex: any?)
	local Settings = self.Settings
	local Class_Animations = self.Class_Animations[AnimationClass]
	if not Class_Animations then
		Class_Animations = {}
		self.Class_Animations[AnimationClass] = Class_Animations
	end
	
	local Index: string,
	IDLink: string
	
	if AnimationTable then
	
		local LoadedAnimationData = Utils.DeepCopy(AnimationTable) :: Types.AnimationData
		local IsInstance = AnimationTable.Instance 
		local IsID = AnimationTable.ID
		
		if IsID then
			local NoLeak = AnimationTable.Instance and AnimationTable.Instance:Destroy() or true
			local ID = `{AnimationTable.ID}` --tostring
			IDLink = `rbxassetid://{string.gsub(ID, "%D", "")}`
			Index = IsIndex or AnimationTable.Index or `{AnimationClass}{HttpService:GenerateGUID()}`

			if IDLink ~= "rbxassetid://0" and IDLink ~= "rbxassetid://" then
				local AnimationIstance = self.Trove_BetterAnimate:InstanceNew("Animation")
				AnimationIstance.Name = Index
				AnimationIstance.AnimationId = IDLink
				LoadedAnimationData.Instance = AnimationIstance
			end
			
		elseif IsInstance then
			IDLink = IsInstance.AnimationId
			LoadedAnimationData.ID = IsInstance.AnimationId
			Index = IsIndex or AnimationTable.Index or IsInstance.Name
			self.Trove_BetterAnimate:Add(IsInstance)
		else
			return --error(`[BetterAnimate] ID or Aniamte instance not found`, 2)
		end
		
		local RemoveOnExist = Class_Animations and Class_Animations[Index]
		if RemoveOnExist then
			self.Trove_BetterAnimate:Remove(RemoveOnExist.Instance, true)
		end

		if IDLink == "rbxassetid://0" or IDLink == "rbxassetid://" then
			Class_Animations[Index] = nil -- Disabling that animation
		else
			LoadedAnimationData.Weight = AnimationTable.Weight or Settings.DefaultAnimationWeight
			Class_Animations[Index] = LoadedAnimationData
		end
	end
	
	if Index == self.Current_AnimationName or AnimationClass == self.Current_AnimationClass and Utils.GetTableLength(Class_Animations) == 0 then -- AllowToUpdateCurrentAnimation
		if self.Class_Timer.Current[AnimationClass] then
			self.Class_Timer.Current[AnimationClass] = 0
		end
		--print("Update yea")
		self:PlayAnimation(AnimationClass)
	end
	return Index
end

function BetterAnimate:FallDelta(TimeDelay: number)
	local Settings = self.Settings
	local State = self.Humanoid:GetState().Name
	State = State == "Jumping" and "Freefall" or State
	while State == "Freefall" do
		if TimeDelay <= 0 then
			self:PlayAnimation("Fall", 0.1)
			return true
		end
		TimeDelay -= task.wait(Settings.Time_DT)
		State = self.Humanoid:GetState().Name
	end
	return false
end
-----------

-----------Tool
function BetterAnimate:ToolAnimationEnded(ToolAnimation: Animation, Force: boolean?)
	self:PlayToolAnimation(ToolAnimation, 0, Force)
end

function BetterAnimate:PlayToolAnimation(ToolAnimation: Animation?, TransitionTime: number?, Force: boolean?)
	local Settings = self.Settings

	if self.ToolAnimationInstance ~= ToolAnimation or Force then
		self.Trove_Tool:Clear(true)
		self.ToolAnimationInstance = ToolAnimation

		if not ToolAnimation then return end

		self.Trove_Tool:Add(function()
			self.ToolAnimationTrack:Stop(Settings.Time_AnimationStop)
			self.ToolAnimationTrack = nil
		end)

		local ToolAnimationTrack = self.Animator:LoadAnimation(ToolAnimation)
		self.ToolAnimationTrack = ToolAnimationTrack
		ToolAnimationTrack.Priority = Settings.ToolAnimationPriority
		ToolAnimationTrack:Play(TransitionTime or 0)
		self.Trove_Tool:Connect(ToolAnimationTrack.Ended, function() self:ToolAnimationEnded(ToolAnimation, true) end)
	end
end

function BetterAnimate:StopToolAnimations()
	self.Trove_Tool:Clear(true)
	self.ToolAnimationInstance = nil
end

function BetterAnimate:ChildRemoved(Child: Instance)
	if Child:IsA("Tool") then
		self:StopToolAnimations()
	end
	self:FixCenter() 
end 

function BetterAnimate:ChildAdded(Child: Instance)
	local Settings = self.Settings
	local Handle = Child:FindFirstChild("Handle") or Child:FindFirstChildWhichIsA("BasePart")
	if Child:IsA("Tool")
		--and Handle 
		and not Child:GetAttribute(Settings.ToolAttributeCheck)
		and not Child:HasTag(Settings.ToolTagCheck)
	then
		local _, Table = self:RollAnimation("Toolnone")
		local TooAnimationInstance = Table.Instance
		self:PlayToolAnimation(TooAnimationInstance, 0.1)
	end 
	self:FixCenter()
end

function BetterAnimate:FixCenter()
	local Root = self.PrimaryPart
	local SavedPhysis = self.Settings.PhysicalProperties
	Root.CustomPhysicalProperties = PhysicalProperties.new(
		SavedPhysis.Density - 0.01, 
		SavedPhysis.Friction, 
		SavedPhysis.Elasticity, 
		SavedPhysis.FrictionWeight,
		SavedPhysis.ElasticityWeight
	)
	task.wait()
	Root.CustomPhysicalProperties = SavedPhysis
end

local Module = {}

function Module.New(Character: Model, CustomSettings: Types.BetterAnimateSettings?)

	local DeepCustomSettings = Utils.DeepCopy(CustomSettings or {}) :: Types.BetterAnimateSettings
	local DeepDefaultSettings = Utils.DeepCopy(BetterAnimate.DefaultSettings) :: Types.BetterAnimateSettings

	for I, Value in DeepDefaultSettings do
		if DeepCustomSettings[I] == nil then
			DeepCustomSettings[I] = Value
		end
	end

	local PrimaryPart = Character.PrimaryPart
	local HumanoidRigType, AnimatorInstance
	local Humanoid = Utils.WaitForChildWhichIsA(Character, "Humanoid", true, 1) :: Humanoid?
	if Humanoid then
		HumanoidRigType = Humanoid.RigType
		AnimatorInstance = Utils.WaitForChildWhichIsA(Character, "Animator", true, 1) or Humanoid -- If animator not found
	else
		return warn(`[BetterAnimate] Humanoid not found in {Character}`)
	end

	local Trove_BetterAnimate = Trove.New()
	local Trove_Animation = Trove_BetterAnimate:Extend()
	local Trove_Tool = Trove_BetterAnimate:Extend()
	local Trove_Debug = Trove_BetterAnimate:Extend()

	local NewDirection = DeepCustomSettings.Bindable_NewDirection and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local NewState = DeepCustomSettings.Bindable_NewState and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local NewAnimation = DeepCustomSettings.Bindable_NewAnimation and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local KeyframeReached = DeepCustomSettings.Bindable_KeyframeReached and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil

	local MetaData = {
		Settings = DeepCustomSettings,
		Class_Animations = {},
		
		MovingSpeed = 0,
		
		MovingDirection = "None",

		--Character data
		PrimaryPart = PrimaryPart,
		Character = Character,
		HumanoidRigType = HumanoidRigType,
		Humanoid = Humanoid,
		Animator = AnimatorInstance,
		--

		--Troves
		Trove_BetterAnimate = Trove_BetterAnimate,
		Trove_Animation = Trove_Animation,
		Trove_Tool = Trove_Tool,
		Trove_Debug = Trove_Debug,
		--

		--Bindable
		Bindable_NewDirection = NewDirection,
		Bindable_NewState = NewState,
		Bindable_NewAnimation = NewAnimation,
		Bindable_KeyframeReached = KeyframeReached,
		--

		Class_Timer = {
			Max = DeepCustomSettings.Class_MaxTimer,
			Current = {},
		},

	}

	--------------------------------------------------

	local Metatable = setmetatable(MetaData, BetterAnimate) :: Types.BetterAnimate

	if DeepCustomSettings.Enabled_Emotes then
		local Bindable_PlayEmote = DeepCustomSettings.Bindable_PlayEmote
		if Bindable_PlayEmote then
			Bindable_PlayEmote.OnInvoke = function(Emote: string | Animation)
				--print("test0")
				if DeepCustomSettings.Enabled_Emotes then
					--print("test1")
					local Current_AnimationClass = Metatable.Current_AnimationClass
					
					if not DeepCustomSettings.Class_NoEmotes[Current_AnimationClass] then
						
						if typeof(Emote) == "Instance" and Emote:IsA("Animation") then
							Metatable:UpdateAnimations({
								Emote = {
									{Instance = Emote},
								}
							})

							Metatable:PlayAnimation(`Emote`, 0.1)
							Metatable.Current_PlayingEmote = true
							return true
						else
							local FixedString = Utils.FirstUpper(string.lower(Emote))
							local DanceNumber = string.gsub(FixedString, "%D", "")
							
							Metatable.Current_PlayingEmote = true
							if string.find(FixedString, "Dance") then
								local ExistEmote = Metatable.Class_Animations["Dance"]
								local MaxNumber = Utils.GetTableLength(ExistEmote)
								--print(MaxNumber)
								if DanceNumber ~= "" then
									Metatable:PlayAnimation("Dance", 0.1, nil, `Dance{DanceNumber}`)
								else
									Metatable:PlayAnimation("Dance", 0.1, nil, `Dance{math.random(1, MaxNumber)}`)
								end
								return true
							else
								Metatable:PlayAnimation(FixedString, 0.1)
								return true
							end
						end
					else
						print(`[BetterAnimate] Emote blocked by {Current_AnimationClass}`)
					end
				end

				-- Return false to indicate that the emote could not be played
				return false
			end
		else
			warn(`[BetterAnimate] PlayEmote BindableFunction not found`)
		end
	end

	local DefaultAnimations = Utils.DeepCopy(BetterAnimate.DefaultAnimations[HumanoidRigType])

	for Class, AnimationsList in DefaultAnimations do 
		for I, AnimationData in AnimationsList do
			Metatable:AddAnimation(Class, AnimationData, I)
		end
	end

	--------------------------------------------------
	
	DeepCustomSettings.Class_SpeedAdjust.Climb = (Humanoid.RigType == Enum.HumanoidRigType.R15 and 6) or 12 -- Fix
	
	if DeepCustomSettings.Debug then
		Metatable:EnableDebug(true)
	end

	return Metatable
end

return Module]]></ProtectedString>
						<string name="ScriptGuid">{E6A1A099-B1AD-4517-96AE-97C944B13F5E}</string>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">BetterAnimate</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000581f</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXC4ED3DF3B430437CB6FCEC1DE38692E0">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

local Module = {
	[Enum.HumanoidRigType.R6] = {
			Idle = 	{ -- "Random" idle animation
				Idle1 = { ID = "180435571", Weight = 80 },
				Idle2 = { ID = "180435792", Weight = 20 },
			},
			Walk = 		{ Walk1 =		{ ID = "180426354", Weight = 10 } }, 
			Run = 		{ Run1 =		{ ID = "180426354", Weight = 10 } },
			Swim = 		{ Swim1 =		{ ID = "180426354", Weight = 10 } },
			Swimidle = 	{ Swimidle1 =	{ ID = "180426354", Weight = 10 } }, 
			Jump = 		{ Jump1 =		{ ID = "125750702", Weight = 10 } }, 
			Fall = 		{ Fall1 =	 	{ ID = "180436148", Weight = 10 } }, 
			Climb =		{ Climb1 =		{ ID = "180436334", Weight = 10 } }, 
			Sit = 		{ Sit1 =		{ ID = "178130996", Weight = 10 } },	
			Toolnone = 	{ Toolnone1 = 	{ ID = "182393478", Weight = 10 } },
			Wave = 		{ Wave1 =		{ ID = "128777973", Weight = 10 } },
			Point = 	{ Point1 =		{ ID = "128853357", Weight = 10 } },
			Dance = 	{ 
				Dance1 ={ ID = "182435998", Weight = 10 },
				Dance2 ={ ID = "182436842", Weight = 10 },
				Dance3 ={ ID = "182436935", Weight = 10 },
			},
			Laugh = 	{ Laugh1 =		{ ID = "129423131",   Weight = 10 } },
			Cheer = 	{ Cheer1 =		{ ID = "129423030",   Weight = 10 } },
			Temp = 		{ Temp1 =		{ ID = "15609995579", Weight = 1 } }, -- r15 animation for r6
			Emote =     { { } },
	},

	[Enum.HumanoidRigType.R15] = {
			Idle = 	{ -- "Random" idle animation
				Idle1 = { ID = "507766666", Weight = 20 },
				Idle2 = { ID = "507766951", Weight = 20 },
				Idle3 = { ID = "507766388", Weight = 80 }
			},
			Walk = 		{ Walk1 =		{ ID = "507777826",  Weight = 10 } }, 
			Run = 		{ Run1 =		{ ID = "507767714",  Weight = 10 } }, 
			Swim = 		{ Swim1 =		{ ID = "507784897",  Weight = 10 } },
			Swimidle = 	{ Swimidle1 =	{ ID = "507785072",  Weight = 10 } }, 
			Jump = 		{ Jump1 =		{ ID = "507765000",  Weight = 10 } }, 
			Fall = 		{ Fall1 =	 	{ ID = "507767968",  Weight = 10 } }, 
			Climb = 	{ Climb1 =		{ ID = "507765644",  Weight = 10 } }, 
			Sit = 		{ Sit1 =		{ ID = "2506281703", Weight = 10 } },	
			Toolnone = 	{ Toolnone1 = 	{ ID = "507768375",  Weight = 10 } },
			Wave = 		{ Wave1 =		{ ID = "507770239",  Weight = 10 } },
			Point = 	{ Point1 =		{ ID = "507770453",  Weight = 10 } },
			Dance = 	{
				Dance1 ={ ID = "507772104", Weight = 10 },
				Dance2 ={ ID = "507776879", Weight = 10 },
				Dance3 ={ ID = "507777623", Weight = 10 },
			},
			Laugh = 	{ Laugh1 =		{ ID = "507770818", Weight = 10 } },
			Cheer = 	{ Cheer1 =		{ ID = "507770677", Weight = 10 } },
			Temp = 		{ Temp1 =		{ ID = "27789359",  Weight = 1  } }, -- r6 animation for r15
			Emote =     { { } },
	},
}

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{46A960E9-553F-437E-9FA5-A94B561D8667}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DefaultAnimations</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005820</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX86609A94C3264992B5B44714C03ECC22">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Instance_BetterAnimate = ReplicatedStorage.BetterAnimate
local Types = require(Instance_BetterAnimate.Types)

local Module: Types.BetterAnimateSettings = {
	
	ToolAttributeCheck = "NoToolNone",
	ToolTagCheck = "NoToolNone",
	
	Time_DT = 0.04,
	Time_Debug = 0.06,
	Time_Update = 0.07,
	Time_AnimationStop = 0.1,
	Time_FallOnJump = 0.31,
	Time_Fall = 0.1,
	
	AnimationSpeedMultiplier = 1,

	Class_NoEmotes = {
		Walk = true, 
		Run = true, 
		Swim = true, 
		Swimidle = true, 
		Jump = true, 
		Fall = true, 
		Climb = true, 
		Sit = true,
	},

	Inverse = false,

	InverseOn = {
		BackwardRight = true, 
		BackwardLeft = true, 
		Backward = true,
		Down = true, -- For climb
	},

	Class_Inverse = {
		Walk = true, 
		Run = true, 
		Swim = true,
		Climb = true,
	},
	
	Class_DirectionCFrameAdjust = {
		Swim = CFrame.Angles(math.rad(90), 0, 0),
	},

	Class_SpeedAdjust = {
		Walk = 9,
		Run = 16,
		Climb = 6, -- (Humanoid.RigType == Enum.HumanoidRigType.R15 and 4) or 12, -- R6 and R15 speed must be different (roblox's skill issue)
		Swim = 10,
	},

	--Class_Speed = {
	--	Run = 0,
	--	Climb = 0, 
	--	Swim = 0,
	--},
	
	Class_SwitchIgnore = {
		Jump = true,
	},

	IdleSpeedRange = Vector2.new(-math.huge, 0.4),
	WalkSpeedRange = Vector2.new(0.4, 9),
	RunSpeedRange = Vector2.new(9, math.huge),
	--StopPreviousTime = 0.25,
	
	DefaultAnimationLenght = 5,
	DefaultAnimationWeight = 10,
	
	ToolAnimationPriority = Enum.AnimationPriority.Idle,
	AnimationPriority = Enum.AnimationPriority.Core,
	
	Bindable_NewDirection = false,
	Bindable_NewState = false,
	Bindable_NewAnimation = false,
	Bindable_KeyframeReached = false,
	
	Class_MaxTimer = {
		Idle = 5,
		Walk = 0,
		Run = 0,
		Climb = 0,
		Swim = 0,
		Jump = 0,
		Fall = 0,
		Sit = 0,
	},
	
	PhysicalProperties = PhysicalProperties.new(0.7, 0.5, 1, 0.3, 1), -- Default by roblox

	State_Deffered = {
		--Landed = "Landed",
		Jumping = "Jumping",
	},

	State_Functions = { -- Logic for every state

		Jumping = function(self)
			self:PlayAnimation("Jump", 0.1)
			local Passed = self:FallDelta(self.Settings.Time_FallOnJump)
			--print(1, Passed)
		end,

		Freefall = function(self)
			--if self.Current_AnimationClass ~= "Freefall" then
				local Passed = self:FallDelta(self.Settings.Time_Fall)
				--print(2, Passed)
			--end
		end,

		GettingUp = function(self) 
			self:StopCurrentAnimation()
		end,	

		FallingDown = function(self) 
			self:StopCurrentAnimation()
		end,	

		PlatformStanding = function(self)
			self:StopCurrentAnimation()
		end,

		Running = function(self)
			local Settings = self.Settings
			local Speed = self.MovingSpeed or 0 -- Settings.Class_Speed.Run	

			if Speed >= Settings.IdleSpeedRange.X and Settings.IdleSpeedRange.Y > Speed then
				self:PlayAnimation("Idle", 0.2)
			elseif Speed >= Settings.WalkSpeedRange.X and Settings.WalkSpeedRange.Y > Speed then
				self:PlayAnimation("Walk", 0.2, Speed)
			elseif Speed >= Settings.RunSpeedRange.X and Settings.RunSpeedRange.Y > Speed then
				self:PlayAnimation("Run", 0.2, Speed)
			else
				warn("Over 9000!!!!", Speed) -- Just a meme phrase (that's mean you broke something)
			end
		end,

		Seated = function(self)
			self:PlayAnimation("Sit", 0.3)
		end,

		Dead = function(self)
			task.defer(self.Trove.Destroy, self.Trove, true)
			coroutine.yield()
			--task.wait(999)
		end, --Cleanup on death

		Swimming = function(self)
			local Speed = self.MovingSpeed or 0 -- self.Settings.Class_Speed.Swim
			if Speed > 3 then self:PlayAnimation("Swim", 0.4, Speed) return end
			self:PlayAnimation("Swimidle", 0.4)
		end,

		Climbing = function(self)
			self:PlayAnimation("Climb", 0.2, self.MovingSpeed or 0
				--self.Settings.Class_Speed.Climb
			)
		end,

		None = function(self)
			self:PlayAnimation("Temp")
			--self.ForceState = false
		end,

		Flying = function(self) end,
		Ragdoll = function(self) end,
		Landed = function(self) end,
		RunningNoPhysics = function(self) end,
		StrafingNoPhysics = function(self) end,
		Physics = function(self) end,
	}
}

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{2D693D5C-1CE0-4830-AAAC-F20EC4F9F0EF}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DefaultSettings</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005821</UniqueId>
						</Properties>
					</Item>
					<Item class="BillboardGui" referent="RBXED0D4E24C56847529A45FF913843892A">
						<Properties>
							<bool name="Active">true</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">false</bool>
							<float name="Brightness">1</float>
							<bool name="ClipsDescendants">true</bool>
							<float name="DistanceLowerLimit">0</float>
							<float name="DistanceUpperLimit">-1</float>
							<Vector3 name="ExtentsOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="ExtentsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LightInfluence">1</float>
							<float name="MaxDistance">INF</float>
							<Ref name="PlayerToHideFrom">null</Ref>
							<UDim2 name="Size">
								<XS>5</XS>
								<XO>0</XO>
								<YS>3.5</YS>
								<YO>0</YO>
							</UDim2>
							<Vector2 name="SizeOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector3 name="StudsOffset">
								<X>0</X>
								<Y>5.5</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="StudsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<bool name="Enabled">true</bool>
							<bool name="ResetOnSpawn">true</bool>
							<token name="ZIndexBehavior">1</token>
							<bool name="AutoLocalize">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Debug</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005822</UniqueId>
						</Properties>
						<Item class="Frame" referent="RBXFAB0E3C94A9D4E0CB452DAA0446AB398">
							<Properties>
								<token name="Style">0</token>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
								<bool name="AutoLocalize">true</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Main</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005823</UniqueId>
							</Properties>
							<Item class="TextLabel" referent="RBX9EABC670A52A4843B0E51F39F4CDCD51">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Tracks: 0</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Total</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005824</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX5D850E5E6A6C46948B500CAF75D74EDC">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005825</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="UIGridLayout" referent="RBXE323AA675E72489D909F40647399660A">
								<Properties>
									<UDim2 name="CellPadding">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<UDim2 name="CellSize">
										<XS>0.333000004</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<int name="FillDirectionMaxCells">0</int>
									<token name="StartCorner">0</token>
									<token name="FillDirection">0</token>
									<token name="HorizontalAlignment">1</token>
									<token name="SortOrder">2</token>
									<token name="VerticalAlignment">1</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UIGridLayout</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005826</UniqueId>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBXB57609990B0048008AB769C818715075">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Class: Idle</string>
									<Color3 name="TextColor3">
										<R>0.984313786</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Class</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005827</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX7893B979C6F9425EB63AEF5C5B797A31">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005828</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX6D53EDE0713D49B9B308760BBD854A9C">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Direction: Forward</string>
									<Color3 name="TextColor3">
										<R>0.0666666701</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Direction</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005829</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXC5A58299799F4300A652CE63731A57FC">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000582a</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX947391313F23473F91A6FCE5B572DFD3">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Timer: 0.0</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>1</G>
										<B>0.850980461</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Timer</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000582b</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX7F5ECB7E7E0545408A2A36F2584F126C">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000582c</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXE563608F15DA49FD8215D40A1F508312">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">ID: 123456789</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0.384313762</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">ID</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000582d</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXB6BCE3F3944445E2914B43B8376A5E7F">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000582e</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX589D61C351424271BA52B72780C35A12">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Speed: 0</string>
									<Color3 name="TextColor3">
										<R>0.831372619</R>
										<G>0</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cda</UniqueId>
									<string name="Name">Speed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000582f</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX86FCFC92B00443B8B4774E9AF8E11331">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cdb</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005830</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXE8AABE89BDDE44B0892839C8ED1CFF99">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">State: Test</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cda</UniqueId>
									<string name="Name">State</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005831</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX9D0A3DAC4296490983EBB8A484021288">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cdb</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005832</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX67307E97FCA446D49F1D51FCF3AD55DC">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local CleanAnything = require(script.CleanAnything)
local Parent = script.Parent
local Types = require(Parent.Types)

local Trove = {} :: Types.Trove
Trove.__index = Trove

function Trove.New(Name: string?)
	local self = setmetatable({}, Trove)
	self.Objects = {}
	self.Cleaning = false
	self.Name = Name
	self.UniqueID = HttpService:GenerateGUID()
	self.IsTrove = true
	return self
end

function Trove:Extend(Name: string)
	if self.Cleaning then return error("[Trove] is cleaning Extend()") end
	
	return self:Add(Trove.New(self.Name or HttpService:GenerateGUID()))
end

function Trove:InstanceNew(ClassName: string) -- type ClassName = Part | Mesh | Script ...
	if self.Cleaning then return error("[Trove] is cleaning InstanceNew()") end
	
	return self:Add(Instance.new(ClassName))
end

function Trove:Clone(Inst: Instance)
	if self.Cleaning then return error("[Trove] is cleaning Clone()") end
	
	return self:Add(Inst:Clone())
end

function Trove:Connect(Signal: RBXScriptSignal, Function: ()->(), OnDestroy: ()->()?)
	if self.Cleaning then return error("[Trove] is cleaning Connect()") end
	
	return self:Add(Signal:Connect(Function), OnDestroy)
end

function Trove:Once(Signal: RBXScriptSignal, Function: ()->(), OnDestroy: ()->()?) -- Connect Once
	if self.Cleaning then return error("[Trove] is cleaning ConnectOnce()") end
	
	local Object, Method
	Object, Method = self:Add(Signal:Once(function() Function() self:Remove(Object, true) end), OnDestroy)
	return Object, Method
end

function Trove:BindToRenderStep(Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)
	if self.Cleaning then return error("[Trove] is cleaning BindToRenderStep()") end
	
	local Index = HttpService:GenerateGUID()
	RunService:BindToRenderStep(Index, Priority, Function)
	return self:Add(Index, OnDestroy, function() RunService:UnbindFromRenderStep(Index) end)
end

function Trove:Add(Object: any, ...: any)
	if self.Cleaning then return error("[Trove] is cleaning Add()") end
	
	local CheckExist = self.Objects[Object]
	if CheckExist then
		return warn(`[Trove] Trying to add existing Object`, Object)
	else
		self.Objects[Object] = {...}
		return Object, function() self:Remove(Object) end
	end
end

function Trove:Remove(Object: any, Destroy: boolean?)
	local ObjectTable = self.Objects[Object]
	if ObjectTable then
		
		if Destroy then
			if type(Object) == "function" then
				Object(table.unpack(ObjectTable))
			else
				CleanAnything:Destroy(Object)
				
				for _, Arg in ObjectTable do
					if type(Arg) == "function" then
						Arg()
					end
				end
			end
		end
		
		self.Objects[Object] = nil
		return true
	end
	return false, error(`[Trove] Object not found: {Object} {self.Name} {self.UniqueID}`)
end

function Trove:AttachToInstance(Inst: Instance)
	if self.Cleaning then return error("[Trove] is cleaning AttachToInstance()", 2) end
	
	if not Inst or not Inst:IsDescendantOf(game) then
		error(`Instance expected, got {Inst}`, 2)
	else
		return self:Connect(Inst.Destroying, function() self:Destroy() end)
	end
end

function Trove:Clear(Destroy: boolean?)
	for Object, _ in self.Objects do
		self:Remove(Object, Destroy)
	end
end

function Trove:Destroy()
	self:Clear(true)
	
	setmetatable(self, nil)
end

return Trove]]></ProtectedString>
							<string name="ScriptGuid">{17CA5107-179A-4850-A03C-BC0CD4FD8D05}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Trove</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005833</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXD492724349C14E5FBA0666FD576C60D2">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[local Module = {}

Module.CleanMethods = {
	["table"] = function(Table: {any})
		
		if not Table.IsTrove then -- Check for Trove
			for I, Thing in Table do
				Module:Destroy(Thing)
			end
		else
			Table:Destroy()
		end
	end,
	
	thread = function(Thread: thread)
		task.cancel(Thread)
	end,
	
	["function"] = function(Function: (any)->(any))
		
	end,
	
	instance = function(Inst: Instance)
		--if Inst then 
			Inst:Destroy()
		--end
	end,
	
	rbxscriptconnection = function(Connect: RBXScriptConnection)
		Connect = Connect.Connected and Connect:Disconnect() or nil
	end,
}

function Module:Destroy(Any: any)
	local TypeOf = string.lower(typeof(Any))
	local Destroy = Module.CleanMethods[TypeOf]
	if Destroy then
		Destroy(Any)
	end
end

return Module
]]></ProtectedString>
								<string name="ScriptGuid">{922A1FFD-B51B-42E0-8BF6-4D181ABB7F20}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">CleanAnything</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005834</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX48043041957D409D963BCEE8C725299E">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

local Module = {}

--Trove
export type Trove = {

	New: (Name: string)-> Trove & {
		Objects: {[any]: {any?}},

		Cleaning: boolean,
		Name: string, -- Name of the Trove
		UniqueID: string, -- UniqueID of Trove
		IsTrove: boolean, -- Check if this a Trove
	},
	Extend: (self: Trove, Name: string)-> Trove,
	InstanceNew: (self: Trove, ClassName: string)-> (Instance, ()->()),
	Clone: (self: Trove, Inst: Instance)-> (Instance, ()->()),
	Connect: (self: Trove, Signal: RBXScriptSignal, Function: ()->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	Once: (self: Trove, Signal: RBXScriptSignal, Function: ()->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	BindToRenderStep: (self: Trove, Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)-> (string, ()->()),
	Add: (self: Trove, Object: any, any)-> (any, ()->()),
	Remove: (self: Trove, Object: any, Destroy: boolean?)-> boolean,
	AttachToInstance: (self: Trove, Inst: Instance)-> RBXScriptConnection,
	Clear:(self: Trove, Destroy: boolean?)-> (),
	Destroy: (self: Trove)-> (), -- Destroy == Clear

	__index: Trove,
}

 --Animator
export type Directions = "ForwardRight" | "ForwardLeft" | "BackwardRight" | "BackwardLeft" | "Right" | "Left" | "Backward" | "Forward" | "Up" | "Down" | "None"

export type AnimationClasses = "Walk" | "Run" | "Swim" | "Swimidle" | "Jump" | "Fall" | "Climb" | "Sit" | "Idle" | "Emote" | "Dance" | "Cheer" | "Point" | "Laugh" | "Wave"

export type AnimationData = {
	ID: number | string?,
	Instance: Animation?, -- You can give Animation Instance instead of ID
	Weight: number?,
	Index: string?,
}

export type BetterAnimateSettings = {
	
	--Time
	Time_DT: number?, -- Min value to add (Passed += task.wait(Time_DT))
	Time_Update: number?, -- How fast animation will update
	Time_FallOnJump: number?,
	Time_Fall: number?,
	Time_AnimationStop: number?,
	
	Time_Debug: number?, -- How fast it will update
	--
	
	--Features
	Enabled_Inverse: boolean?, -- Inverse animations on walk, run and swim when moving backwards (hard to explain how it works) (Default = false)
	Enabled_Emotes: boolean?, -- Default = false (You must create)
	--
	
	--Class
	Class_SwitchIgnore: {
		[string]: boolean?,
		Jump: boolean?,
		--[AnimationClasses]: number?
	}?,
	
	Class_NoEmotes: {
		[string]: boolean?,
		--[AnimationClasses]: boolean?
	}?,
	
	Class_Inverse: { -- Classes that support Inverse feature
		[string]: boolean?,
		--[AnimationClasses]: boolean?
	}?,
	
	Class_DirectionCFrameAdjust: { -- Used to fix swimming direction (HumanoidRootPart problem)
		[string]: CFrame?,
		--[AnimationClasses]: CFrame?
	}?,
	
	Class_SpeedAdjust: { -- Used to adjust animation speed
		[string]: number?,
		--[AnimationClasses]: number?
	}?,
	
	--Class_Speed: { -- Deprecated
	--	[AnimationClasses]: number?,
	--	Run: number?,   -- Humanoid.Running:Connect(Speed: number) end
	--	Climb: number?, -- Humanoid.Climbing:Connect(Speed: number) end
	--	Swim: number?,  -- Humanoid.Swimming:Connect(Speed: number) end
	--}?,
	
	Class_MaxTimer: {
		[string]: number | NumberRange?,
		--[AnimationClasses]: number | NumberRange?,
	}?,
	--
	
	--State
	State_Deffered: { -- Will play on trigger
		--Landed: "Landed"?,
		Jumping: "Jumping"?,
		[string]: string?,  -- If you want to add your own
	}?,
	
	State_Functions: {
		[string]: (BetterAnimate)-> ()?,
	}?,

	--Bindable
	Bindable_NewDirection: boolean?, -- Create Bindable for NewDirection event (Default = false)
	Bindable_NewState: boolean?, -- Create Bindable for NewState event (Default = false)
	Bindable_KeyframeReached: boolean?, -- Create Bindable for KeyframeReached event (Default = false)
	Bindable_NewAnimation: boolean?, -- Create Bindable for KeyframeReached event (Default = false)
	
	Bindable_PlayEmote: BindableFunction?, -- Using when Enabled_Emotes is true 
	--
	
	--Animation
	DefaultAnimationLenght: number?, -- If lenght of animation == 0 it will return DefaultAnimationLenght (Default = 5)
	DefaultAnimationWeight: number?, -- Weight = AnimationTable.Weight or DefaultAnimationWeight
	AnimationPriority:  Enum.AnimationPriority?, -- Self explaing
	--
	
	--Tool
	ToolAttributeCheck: string?, -- Default = "NoToolNone"
	ToolTagCheck: string?,  -- Default = "NoToolNone"
	ToolAnimationPriority: Enum.AnimationPriority?, -- Self explaing
	--
	
	--Other
	Debug: boolean?,
	AnimationSpeedMultiplier: number?, -- How AnimationSpeed * AnimationSpeedMultiplier (Default = 1)
	PhysicalProperties: PhysicalProperties?, -- Default = PhysicalProperties.new(0.7, 0.5, 1, 0.3, 1)
	
	InverseOn: { -- When Inserse applies
		BackwardRight: boolean?, 
		BackwardLeft: boolean?, 
		Backward: boolean?,
		[Directions]: boolean?,
	}?,
	
	IdleSpeedRange: Vector2?, -- Default = Vector2.new(-math.huge, 0.4)
	WalkSpeedRange: Vector2?, -- Default = Vector2.new(0.4, 9)
	RunSpeedRange: Vector2?, -- Default = Vector2.new(9, math.huge)
	--
}

export type BetterAnimate = {
	--Settings
	Settings: BetterAnimateSettings, -- Your settings
	DefaultSettings: BetterAnimateSettings, -- Default settings (will fill your custom settings)
	--
	
	--All animations information
	Class_Animations: { [AnimationClasses]: { [any]: AnimationData} }, -- All animations that loaded
	DefaultAnimations: { [Enum.HumanoidRigType]: { [string]: { [any]: AnimationData } } } , -- Default animations
	--
	
	--State
	Current_State: string, -- State (Running, Falling, etc...)
	State_Forced: string, -- Forcing state to play (Fall, Landed, etc)
	--
	
	--Character information
	Character: Model, -- Your Character
	Humanoid: Humanoid, -- Your Humanoid
	HumanoidRigType: Enum.HumanoidRigType, -- Your HumanoidRigType
	PrimaryPart: BasePart, -- Your PrimaryPart (HumanoidRootPart)
	Animator: Animator | Humanoid, -- Your Animator
	MovingSpeed: number, -- Speed of character
	MovingDirection: Directions,
	Current_PlayingEmote: boolean, -- Is character using emotes
	--
	
	--Bindable created by BetterAnimate
	Bindable_NewDirection: BindableEvent,--?, -- 
	Bindable_NewState: BindableEvent,--?, --
	Bindable_NewAnimation: BindableEvent,--?, --
	Bindable_KeyframeReached: BindableEvent,--?, --
	--
	
	--Class animation information
	Current_AnimationInstance: Animation, -- Instance
	Current_AnimationTrack: AnimationTrack, -- AnimationTrack
	Current_AnimationClass: string, -- (Run, Walk, Idle, etc,,,)
	Current_AnimationName: string, -- Name of Animation instance
	Current_AnimationSpeed: number, -- Speed * Adjust * Inverse
	
	Class_Timer: {
		Current: { [AnimationClasses]: number | NumberRange?,},
		Max: { [AnimationClasses]: number | NumberRange?,},
	},
	--
	
	--Tool animation information
	ToolAnimationInstance: Animation,
	ToolAnimationTrack: AnimationTrack,
	--
	
	--Troves
	Trove_BetterAnimate: Trove,
	Trove_Animation: Trove,
	Trove_Tool: Trove,
	Trove_Debug: Trove,
	--

	--Other (Outside Animator)

	Start: (self: BetterAnimate)-> (),
	Destroy: (self: BetterAnimate)-> (),
	EnableDebug: (self: BetterAnimate, Enable: boolean)-> (),
	StopPlayingAnimations: (self: BetterAnimate)-> (),
	UpdateAnimations: (self: BetterAnimate, NewAnimationsTable: { [string]: { [any]: AnimationData} }, ResetClass: boolean?)-> (),
	ForceState: (self: BetterAnimate, State: string)-> (),
	--

	--Main
	RollAnimation: (self: BetterAnimate, AnimationClass: string, ForceIndex: string?)-> (),
	SwitchAnimation: (self: BetterAnimate, AnimationTrack: AnimationTrack, TransitionTime: number)-> number,
	Direction: (self: BetterAnimate, MoveVector: Vector3)-> (),
	GetInverse: (self: BetterAnimate)-> number,
	AnimationUpdater: (self: BetterAnimate)-> (),
	StopCurrentAnimation: (self: BetterAnimate)-> (),
	GetHeightScale: (self: BetterAnimate)-> number,
	GetMoveDirection: (self: BetterAnimate)-> Vector3,
	--

	--Class
	AnimationEvent: (self: BetterAnimate, AnimationClass: string, AnimationTable: AnimationData, Keyframe: string?)-> (),
	PlayAnimation: (self: BetterAnimate, AnimationClass: string, TransitionTime: number?, Speed: number?, Index: string?)-> number,
	AddAnimation: (self: BetterAnimate, AnimationClass: string, AnimationTable: AnimationData, Index: any?)-> (),
	FallDelta: (self: BetterAnimate, FallDelay: number)-> (),
	--

	--Tool
	ToolAnimationEnded: (self: BetterAnimate, ToolAnimation: Animation)-> (),
	PlayToolAnimation: (self: BetterAnimate, ToolAnimation: Animation?, TransitionTime: number?)-> (),
	StopToolAnimations: (self: BetterAnimate)-> (),

	ChildRemoved: (self: BetterAnimate, Child: Instance)-> (),
	ChildAdded: (self: BetterAnimate, Child: Instance)-> (),
	FixCenter: (self: BetterAnimate)-> (),
	--

	__index: BetterAnimate
}

return Module]]></ProtectedString>
							<string name="ScriptGuid">{C6DA4C2E-D2E1-4EEA-A443-1FD2386E3CCC}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Types</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005835</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX3F0DDDD810374DF9A3B9BBF389024790">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[local Module = {}

function Module.GetTableLength(Table: {[any]: any}): number
	local Number = 0
	for _, _ in Table do
		Number += 1
	end
	return Number
end

function Module.Vector3Round(Vector: Vector3): Vector3
	return Vector3.new(math.round(Vector.X), math.round(Vector.Y), math.round(Vector.Z))
end

function Module.Vector3Floor(Vector: Vector3): Vector3
	return Vector3.new(math.floor(Vector.X), math.floor(Vector.Y), math.floor(Vector.Z))
end

function Module.Vector3Ceil(Vector: Vector3): Vector3
	return Vector3.new(math.ceil(Vector.X), math.ceil(Vector.Y), math.ceil(Vector.Z))
end

function Module.MaxDecimal(Number, Decimal) return math.round(Number * 10 ^ Decimal) / (10 ^ Decimal) end

function Module.WaitForChildWhichIsA(Where: Instance, What: string, Recursive: boolean?, Timer: number?): Instance?
	if not Where or type(What) ~= "string" then
		return warn(`WaitForChildWhichIsA got incorrect data. Where: {Where} = {typeof(Where)}, What: {What} = {typeof(What)}`)
	else
		Timer = type(Timer) == "number" and Timer or 7
		local TimePassed = 0
		local Found = nil
		repeat
			Found = Where:FindFirstChildWhichIsA(What, Recursive)
			TimePassed += task.wait() 
		until Found or TimePassed >= Timer
		return Found
	end
end

function Module.DeepCopy(Table: {[any]: any}): {[any]: any}
	local Copy = {}
	for I, Value in Table do
		if type(Value) == "table" then
			Value = Module.DeepCopy(Value)
		end
		Copy[I] = Value
	end
	return Copy
end

function Module.FirstUpper(String: string)
	return string.gsub(String, "^%l", function(Letter) return string.upper(Letter) end)
end

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{B7AE184C-EBA6-421B-91E3-DFD234CA47A6}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Utils</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800005836</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX56463B3E8D8E44E284D4037804281EEC">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">1.2.1</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000677e</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX2B4AEA4C862F480288C3E0E7C355EF5D">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local Utils = require(script.Utils)
local Trove = require(script.Trove)
local Types = require(script.Types)

local DefaultAnimations = require(script.DefaultAnimations)
local DefaultSettings = require(script.DefaultSettings)

local BetterAnimate = {
	DefaultAnimations = DefaultAnimations,
	DefaultSettings = DefaultSettings,
} :: Types.BetterAnimate

BetterAnimate.__index = BetterAnimate

-----------Other (Outside Animator)
function BetterAnimate:Start()
	local Root = self.PrimaryPart
	local Humanoid = self.Humanoid
	local Character = self.Character
	local Settings = self.Settings

	self.Trove_BetterAnimate:Connect(Character.ChildAdded, function(Child: Instance)
		self:ChildAdded(Child)
	end)

	self.Trove_BetterAnimate:Connect(Character.ChildRemoved, function(Child: Instance)
		self:ChildRemoved(Child)
	end)

	self.Trove_BetterAnimate:Connect(Humanoid.StateChanged, function(Old: Enum.HumanoidStateType, New: Enum.HumanoidStateType)
		local IsDefferedState = Settings.State_Deffered[New.Name]
		if IsDefferedState then
			--warn(New)
			self:ForceState(IsDefferedState)
			--self.State_Forced = IsDefferedState
		end
	end)

	--self.Trove_BetterAnimate:Connect(Humanoid.Climbing, function(Speed: number)
	--	Speed = math.clamp(Speed, -Humanoid.WalkSpeed, Humanoid.WalkSpeed)
	--	Settings.Class_Speed.Climb = Speed
	--	self.MovingSpeed = Speed
	--end)

	--self.Trove_BetterAnimate:Connect(Humanoid.Swimming, function(Speed: number)
	--	Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	--	Settings.Class_Speed.Swim = Speed
	--	self.MovingSpeed = Speed
	--end)
	
	--self.Trove_BetterAnimate:Connect(Humanoid.Running, function(Speed: number)
	--	--Speed = math.clamp(Speed, 0, Humanoid.WalkSpeed)
	--	Settings.Class_Speed.Run = Speed
	--	self.MovingSpeed = Speed
	--end)

	self.Trove_BetterAnimate:Add(task.defer(self.AnimationUpdater, self))
end

function BetterAnimate:Destroy() -- Clear everything
	local IsTrove = self.Trove_BetterAnimate
	if IsTrove then
		self.Trove_BetterAnimate:Destroy()
	end
	setmetatable(self, nil)
end

function BetterAnimate:EnableDebug(Enable: boolean?)
	
	if Enable then
		print("[BetterAnimate] Debug enabled", self.Character)
		local C_Frame, Size = self.Character:GetBoundingBox()
		local Height = self:GetHeightScale()

		local PrimaryPartPosition = self.PrimaryPart.CFrame.Position
		local ModelPosition = C_Frame.Position
		local Offset = ModelPosition - PrimaryPartPosition

		local DebugBillboard: BillboardGui = self.Trove_Debug:Clone(script.Debug)
		DebugBillboard.StudsOffset = Vector3.new(0, Size.Y / 2 + Offset.Y + 1.5, 0)
		DebugBillboard.Parent = self.PrimaryPart

		local Main: Frame = DebugBillboard.Main
		local Class: TextLabel = Main.Class
		local Direction: TextLabel = Main.Direction
		local ID: TextLabel = Main.ID
		local Timer: TextLabel = Main.Timer
		local Total: TextLabel = Main.Total
		local Speed: TextLabel = Main.Speed
		local State: TextLabel = Main.State

		self.Trove_Debug:Add(task.defer(function()
			while task.wait(self.Settings.Time_Debug) do
				--print("Check")
				local Current_AnimationClass = self.Current_AnimationClass
				local Tracks = #self.Animator:GetPlayingAnimationTracks()

				Class.Text = `Class {Current_AnimationClass}`
				Direction.Text = `Direction {self.MovingDirection}`
				ID.Text = `ID {self.Current_AnimationTrack and string.gsub(self.Current_AnimationTrack.Animation.AnimationId, "%D", "") or nil}`
				Timer.Text = `Timer {string.format(`%.{2}f`, self.Class_Timer.Current[Current_AnimationClass] or 0)}`
				Total.Text = `Total {Tracks}`
				Speed.Text = `Speed {string.format(`%.{2}f`, self.MovingSpeed or 0)}`
				State.Text = `State {self.Current_State}`

				if Tracks > 2 then
					print(`[BetterAnimate [Debug]] Tracks`, Tracks)
				end
			end
		end))
	else
		self.Trove_Debug:Clear(true)
	end
end

function BetterAnimate:StopPlayingAnimations() -- Why not :)
	self:StopCurrentAnimation()
	for _, Animation in self.Animator:GetPlayingAnimationTracks() do 
		Animation:Stop(self.Settings.Time_AnimationStop)
	end
end

function BetterAnimate:UpdateAnimations(NewClassAnimationsTable: {[string]: Types.AnimationData}, ResetClass: boolean?) --Replace
	for Class, NewAnimationsTable in NewClassAnimationsTable do
		
		if ResetClass then
			local FoundClass = self.Class_Animations[Class]
			if FoundClass then
				for _, AnimationTable in FoundClass do
					self.Trove_BetterAnimate:Remove(AnimationTable.Instance, true)
				end
				self.Class_Animations[Class] = {}
			end
		end
		
		for I, NewAnimationTable in NewAnimationsTable do
			self:AddAnimation(Class, NewAnimationTable, I)
		end
	end
end

function BetterAnimate:ForceState(State: string)
	local State_Functions = self.Settings.State_Functions
	if State_Functions[State] then
		self.State_Forced = `{State}{math.random(100000)}`
	else
		warn(`[BetterAnimate] State {State} not found`, State_Functions)
	end
end

-----------

-----------Main
function BetterAnimate:RollAnimation(AnimationClass: string, ForceIndex: string?) -- Sol's RNG lol
	local AnimationClassTable = self.Class_Animations[AnimationClass]
	local TotalWeight = 0
	
	if ForceIndex then
		local FoundByForce = AnimationClassTable[ForceIndex]
		if FoundByForce then
			return ForceIndex, FoundByForce
		else
			warn(`[BetterAnimate] ForceIndex {ForceIndex} not found`, self.Class_Animations)
		end
	end
	
	for _, Table in AnimationClassTable do 
		TotalWeight += (Table.Weight or 0)
	end

	if TotalWeight == 0 then -- No animations found
		AnimationClass = "Temp"
		AnimationClassTable = self.Class_Animations.Temp
		for _, Table in AnimationClassTable do
			TotalWeight += (Table.Weight or 0)
		end
	end
	
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, ChoosedIndex = 0, 1
	for Index, Table in AnimationClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			ChoosedIndex = Index
			break
		end
	end

	return ChoosedIndex, AnimationClassTable[ChoosedIndex]
end

function BetterAnimate:SwitchAnimation(AnimationClass: string, AnimationTable: Types.AnimationData, TransitionTime: number)
	local Settings = self.Settings

	local AnimationInstance = AnimationTable.Instance :: Animation
	if AnimationInstance ~= self.Current_AnimationInstance or Settings.Class_SwitchIgnore[self.Current_AnimationClass] then
		
		if AnimationInstance == self.Current_AnimationInstance then
			self.Current_AnimationTrack:Play(TransitionTime)
		else
			local AnimationTrack = self.Animator:LoadAnimation(AnimationInstance) --AnimationTable.AnimationTrack
			self:StopCurrentAnimation() -- self.Trove_Animation:Destroy()

			AnimationTrack.Priority = Settings.AnimationPriority

			self.Current_AnimationTrack = AnimationTrack
			self.Current_AnimationInstance = AnimationInstance
			self.Trove_Animation:Connect(AnimationTrack.Ended, function(...) self:AnimationEvent(...) end)
			self.Trove_Animation:Connect(AnimationTrack.KeyframeReached, function(...) self:AnimationEvent(...) end) -- KeyframeReached is NOT bad
			self.Trove_Animation:Add(function() AnimationTrack:Stop(Settings.Time_AnimationStop) end)
			AnimationTrack:Play(TransitionTime)
		end
	end
	return Utils.GetAnimationTrackLength(self.Current_AnimationTrack, Settings.DefaultAnimationLenght)
end

function BetterAnimate:Direction(MoveVector: Vector3)
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Y > 0 then return "Up"
	elseif MoveVector.Y < 0 then return "Down"
	else return "None"
	end
end

function BetterAnimate:GetInverse()
	local Settings = self.Settings
	local Storage = self.Storage
	
	local PrimaryPart = self.PrimaryPart
	local Current_AnimationClass = self.Current_AnimationClass
	
	local Vector3_Direction = self:GetMoveDirection()
	local Direction = self:Direction(Vector3_Direction)

	if self.MovingDirection ~= Direction then
		local Bindable_NewDirection = self.Signal_NewDirection and Storage.Bindable.NewDirection
		if Bindable_NewDirection then
			Bindable_NewDirection:Fire(Direction, Vector3_Direction)
		end

		self.MovingDirection = Direction
	end

	local NewInverse = Settings.Enabled_Inverse and Settings.InverseOn[Direction] and Settings.Class_Inverse[Current_AnimationClass] and -1 or 1
	return NewInverse
end

function BetterAnimate:AnimationUpdater()
	local Storage = self.Storage
	local Settings = self.Settings
	local Humanoid = self.Humanoid
	local Class_CurrentTimer = self.Class_Timer.Current
	local Passed = 0

	while true do
		if not self.Current_PlayingEmote then
			local ForcedState = self.State_Forced and string.gsub(self.State_Forced, "%d", "") or nil
			local State = ForcedState or Humanoid:GetState().Name
			local SelectedFunction = Settings.State_Functions[State]
			local OldState = self.Current_State
			
			if State ~= OldState then
				local Bindable_NewState = self.Signal_NewState and Storage.Bindable.NewState
				if Bindable_NewState then
					Bindable_NewState:Fire(State)
				end
			end
			
			self.Current_State = State
			
			SelectedFunction(self)

			if State == ForcedState and ForcedState == string.gsub(self.State_Forced, "%d", "") then -- Check if force state executed
				self.State_Forced = false
			end
		else
			if self:GetMoveDirection().Magnitude > 0 then
				self.Current_PlayingEmote = false
			end
		end
		
		while Passed < Settings.Time_Update do
			self.MovingSpeed = Utils.MaxDecimal(self.PrimaryPart.AssemblyLinearVelocity.Magnitude, 1)
			Passed += task.wait(Settings.Time_DT)
		end

		for Name, Value in Class_CurrentTimer do
			Class_CurrentTimer[Name] -= Passed
		end
		
		self.MovingSpeed = Utils.MaxDecimal(self.PrimaryPart.AssemblyLinearVelocity.Magnitude, 1)
		
		Passed = 0
	end
end

function BetterAnimate:StopCurrentAnimation()
	self.Trove_Animation:Clear(true)
end

function BetterAnimate:GetHeightScale()
	local Humanoid: Humanoid = self.Humanoid
	if Humanoid and not Humanoid.AutomaticScalingEnabled then
		return Humanoid.HipHeight / 2
	else
		return self.Character:GetScale()
	end -- HumanoidHipHeight = 2
end

function BetterAnimate:GetMoveDirection()
	local Settings = self.Settings
	local PrimaryPart = self.PrimaryPart
	local AnimationClass = self.Current_AnimationClass
	
	local Velocity = PrimaryPart.AssemblyLinearVelocity
	local VelocityUnit = Velocity.Unit
	local FixedCFrame: CFrame = PrimaryPart.CFrame * (Settings.Class_DirectionCFrameAdjust[AnimationClass] or CFrame.Angles(0, 0, 0))
	local Multiplier = self.MovingSpeed or 0
	return Utils.Vector3Round(FixedCFrame:VectorToObjectSpace(VelocityUnit)) * math.abs(Multiplier) 
end
-----------

-----------Class
function BetterAnimate:AnimationEvent(Keyframe: string?)
	local Storage = self.Storage
	
	if Keyframe then
		local Bindable_KeyframeReached = self.Signal_KeyframeReached and Storage.Bindable.KeyframeReached
		if Bindable_KeyframeReached then
			Bindable_KeyframeReached:Fire(Keyframe)
		end
	else
		self.Current_PlayingEmote = false
	end
end

function BetterAnimate:PlayAnimation(AnimationClass: string, TransitionTime: number?, Speed: number?, Index: string?)
	local Settings = self.Settings
	local Storage = self.Storage
	
	local AnimationLength
	local Class_Timer = self.Class_Timer
	local CurrentTimer = Class_Timer.Current
	local MaxTimer = Class_Timer.Max
	
	local OldAnimationClass = self.Current_AnimationClass
	self.Current_AnimationClass = AnimationClass
	
	local function ConfigureAnimation()
		local AnimationName, AnimationTable = self:RollAnimation(AnimationClass, Index)
		local OldAnimationInstance = self.Current_AnimationInstance
		self.Current_AnimationName = AnimationName
		AnimationLength = self:SwitchAnimation(AnimationClass, AnimationTable, TransitionTime or 0)

		local Bindable_NewAnimation = self.Signal_NewAnimation and Storage.Bindable.NewAnimation
		if Bindable_NewAnimation and OldAnimationInstance ~= self.Current_AnimationInstance then
			Bindable_NewAnimation:Fire(AnimationClass, AnimationName, AnimationTable)
		end
	end
	
	local function GetTimer(ClassMaxTimer: number | NumberRange): number
		return typeof(ClassMaxTimer) == "NumberRange" and math.random(ClassMaxTimer.Min * 10, ClassMaxTimer.Max * 10) / 10 or ClassMaxTimer
	end
	
	local ClassMaxTimer: number | NumberRange = MaxTimer[AnimationClass]
	
	if ClassMaxTimer then
		--print(ClassMaxTimer)
		if CurrentTimer[AnimationClass] then
			if CurrentTimer[AnimationClass] <= 0 or OldAnimationClass ~= AnimationClass then
				CurrentTimer[AnimationClass] = GetTimer(ClassMaxTimer)
				ConfigureAnimation()
			else
				AnimationLength = Utils.GetAnimationTrackLength(self.Current_AnimationTrack, Settings.DefaultAnimationLenght)
			end
		else
			CurrentTimer[AnimationClass] = GetTimer(ClassMaxTimer)
			ConfigureAnimation()
		end
	else
		ConfigureAnimation()
	end

	self.Current_AnimationSpeed = (Speed or 1) / (Settings.Class_SpeedAdjust[AnimationClass] or 1) * Settings.AnimationSpeedMultiplier
	local AnimationSpeed = (self.Current_AnimationSpeed / self:GetHeightScale()) * self:GetInverse()
	self.Current_AnimationTrack:AdjustSpeed(AnimationSpeed)
	return AnimationLength
end

function BetterAnimate:AddAnimation(AnimationClass: string, AnimationTable: Types.AnimationData, IsIndex: any?)
	local Settings = self.Settings
	local Class_Animations = self.Class_Animations[AnimationClass]
	if not Class_Animations then
		Class_Animations = {}
		self.Class_Animations[AnimationClass] = Class_Animations
	end
	
	local Index: string,
	IDLink: string
	
	if AnimationTable then
	
		local LoadedAnimationData = Utils.DeepCopy(AnimationTable) :: Types.AnimationData
		local IsInstance = AnimationTable.Instance 
		local IsID = AnimationTable.ID
		
		if IsID then
			local NoLeak = AnimationTable.Instance and AnimationTable.Instance:Destroy() or true
			local ID = `{AnimationTable.ID}` --tostring
			IDLink = `rbxassetid://{string.gsub(ID, "%D", "")}`
			Index = IsIndex or AnimationTable.Index or `{AnimationClass}{HttpService:GenerateGUID()}`

			if IDLink ~= "rbxassetid://0" and IDLink ~= "rbxassetid://" then
				local AnimationIstance = self.Trove_BetterAnimate:InstanceNew("Animation")
				AnimationIstance.Name = Index
				AnimationIstance.AnimationId = IDLink
				LoadedAnimationData.Instance = AnimationIstance
			end
			
		elseif IsInstance then
			IDLink = IsInstance.AnimationId
			LoadedAnimationData.ID = IsInstance.AnimationId
			Index = IsIndex or AnimationTable.Index or IsInstance.Name
			self.Trove_BetterAnimate:Add(IsInstance)
		else
			return --error(`[BetterAnimate] ID or Aniamte instance not found`, 2)
		end
		
		local RemoveOnExist = Class_Animations and Class_Animations[Index]
		if RemoveOnExist then
			self.Trove_BetterAnimate:Remove(RemoveOnExist.Instance, true)
		end

		if IDLink == "rbxassetid://0" or IDLink == "rbxassetid://" then
			Class_Animations[Index] = nil -- Disabling that animation
		else
			LoadedAnimationData.Weight = AnimationTable.Weight or Settings.DefaultAnimationWeight
			Class_Animations[Index] = LoadedAnimationData
		end
	end
	
	if Index == self.Current_AnimationName or AnimationClass == self.Current_AnimationClass and Utils.GetTableLength(Class_Animations) == 0 then -- AllowToUpdateCurrentAnimation
		if self.Class_Timer.Current[AnimationClass] then
			self.Class_Timer.Current[AnimationClass] = 0
		end
		--print("Update yea")
		self:PlayAnimation(AnimationClass)
	end
	return Index
end

function BetterAnimate:FallDelta(TimeDelay: number)
	local Settings = self.Settings
	local State = self.Humanoid:GetState().Name
	State = State == "Jumping" and "Freefall" or State
	while State == "Freefall" do
		if TimeDelay <= 0 then
			self:PlayAnimation("Fall", 0.1)
			return true
		end
		TimeDelay -= task.wait(Settings.Time_DT)
		State = self.Humanoid:GetState().Name
	end
	return false
end
-----------

-----------Tool
function BetterAnimate:ToolAnimationEnded(ToolAnimation: Animation, Force: boolean?)
	self:PlayToolAnimation(ToolAnimation, 0, Force)
end

function BetterAnimate:PlayToolAnimation(ToolAnimation: Animation?, TransitionTime: number?, Force: boolean?)
	local Settings = self.Settings

	if self.ToolAnimationInstance ~= ToolAnimation or Force then
		self.Trove_Tool:Clear(true)
		self.ToolAnimationInstance = ToolAnimation

		if not ToolAnimation then return end

		self.Trove_Tool:Add(function()
			self.ToolAnimationTrack:Stop(Settings.Time_AnimationStop)
			self.ToolAnimationTrack = nil
		end)

		local ToolAnimationTrack: AnimationTrack = self.Animator:LoadAnimation(ToolAnimation)
		self.ToolAnimationTrack = ToolAnimationTrack
		ToolAnimationTrack.Priority = Settings.ToolAnimationPriority
		ToolAnimationTrack:Play(TransitionTime or 0)
		self.Trove_Tool:Connect(ToolAnimationTrack.KeyframeReached, function(...) self:AnimationEvent(...) end)
		self.Trove_Tool:Connect(ToolAnimationTrack.Ended, function() self:ToolAnimationEnded(ToolAnimation, true) end)
	end
end

function BetterAnimate:StopToolAnimations()
	self.Trove_Tool:Clear(true)
	self.ToolAnimationInstance = nil
end

function BetterAnimate:ChildRemoved(Child: Instance)
	if Child:IsA("Tool") then
		self:StopToolAnimations()
	end
	self:FixCenter() 
end 

function BetterAnimate:ChildAdded(Child: Instance)
	local Settings = self.Settings
	local Handle = Child:FindFirstChild("Handle") or Child:FindFirstChildWhichIsA("BasePart")
	if Child:IsA("Tool")
		--and Handle 
		and not Child:GetAttribute(Settings.ToolAttributeCheck)
		and not Child:HasTag(Settings.ToolTagCheck)
	then
		local _, Table = self:RollAnimation("Toolnone")
		local TooAnimationInstance = Table.Instance
		self:PlayToolAnimation(TooAnimationInstance, 0.1)
	end 
	self:FixCenter()
end

function BetterAnimate:FixCenter()
	local Root = self.PrimaryPart
	local SavedPhysis = self.Settings.PhysicalProperties
	Root.CustomPhysicalProperties = PhysicalProperties.new(
		SavedPhysis.Density - 0.01, 
		SavedPhysis.Friction, 
		SavedPhysis.Elasticity, 
		SavedPhysis.FrictionWeight,
		SavedPhysis.ElasticityWeight
	)
	task.wait()
	Root.CustomPhysicalProperties = SavedPhysis
end

local Module = {}

function Module.New(Character: Model, CustomSettings: Types.BetterAnimateSettings?)

	local DeepCustomSettings = Utils.DeepCopy(CustomSettings or {}) :: Types.BetterAnimateSettings
	local DeepDefaultSettings = Utils.DeepCopy(BetterAnimate.DefaultSettings) :: Types.BetterAnimateSettings

	for I, Value in DeepDefaultSettings do
		if DeepCustomSettings[I] == nil then
			DeepCustomSettings[I] = Value
		end
	end

	local PrimaryPart = Character.PrimaryPart
	local HumanoidRigType, AnimatorInstance
	local Humanoid = Utils.WaitForChildWhichIsA(Character, "Humanoid", true, 1) :: Humanoid?
	if Humanoid then
		HumanoidRigType = Humanoid.RigType
		AnimatorInstance = Utils.WaitForChildWhichIsA(Character, "Animator", true, 1) or Humanoid -- If animator not found
	else
		return warn(`[BetterAnimate] Humanoid not found in {Character}`)
	end

	local Trove_BetterAnimate = Trove.New()
	local Trove_Animation = Trove_BetterAnimate:Extend()
	local Trove_Tool = Trove_BetterAnimate:Extend()
	local Trove_Debug = Trove_BetterAnimate:Extend()

	local NewDirection: BindableEvent? = DeepCustomSettings.Enabled_Signal_NewDirection and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local NewState: BindableEvent? = DeepCustomSettings.Enabled_Signal_NewState and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local NewAnimation: BindableEvent? = DeepCustomSettings.Enabled_Signal_NewAnimation and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local KeyframeReached: BindableEvent? = DeepCustomSettings.Enabled_Signal_KeyframeReached and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil

	local MetaData = {
		Settings = DeepCustomSettings,
		Class_Animations = {},
		
		MovingSpeed = 0,
		
		MovingDirection = "None",

		--Character data
		PrimaryPart = PrimaryPart,
		Character = Character,
		HumanoidRigType = HumanoidRigType,
		Humanoid = Humanoid,
		Animator = AnimatorInstance,
		--

		--Troves
		Trove_BetterAnimate = Trove_BetterAnimate,
		Trove_Animation = Trove_Animation,
		Trove_Tool = Trove_Tool,
		Trove_Debug = Trove_Debug,
		--

		--Signal
		Signal_NewState = NewState and NewState.Event or nil,
		Signal_NewAnimation = NewAnimation and NewAnimation.Event or nil,
		Signal_NewDirection = NewDirection and NewDirection.Event or nil,
		Signal_KeyframeReached = KeyframeReached and KeyframeReached.Event or nil,
		--
		
		Storage = {
			Bindable = {
				NewDirection = NewDirection,
				NewState = NewState,
				NewAnimation = NewAnimation,
				KeyframeReached = KeyframeReached,
			},
		},

		Class_Timer = {
			Max = DeepCustomSettings.Class_MaxTimer,
			Current = {},
		},

	}

	--------------------------------------------------

	local Metatable = setmetatable(MetaData, BetterAnimate) :: Types.BetterAnimate

	if DeepCustomSettings.Enabled_Emotes then
		local Bindable_PlayEmote = DeepCustomSettings.Bindable_PlayEmote
		if Bindable_PlayEmote then
			Bindable_PlayEmote.OnInvoke = function(Emote: string | Animation)
				--print("test0")
				if DeepCustomSettings.Enabled_Emotes then
					--print("test1")
					local Current_AnimationClass = Metatable.Current_AnimationClass
					
					if not DeepCustomSettings.Class_NoEmotes[Current_AnimationClass] then
						
						if typeof(Emote) == "Instance" and Emote:IsA("Animation") then
							Metatable:UpdateAnimations({
								Emote = {
									{Instance = Emote},
								}
							})

							Metatable:PlayAnimation(`Emote`, 0.1)
							Metatable.Current_PlayingEmote = true
							return true
						else
							local FixedString = Utils.FirstUpper(string.lower(Emote))
							local DanceNumber = string.gsub(FixedString, "%D", "")
							
							Metatable.Current_PlayingEmote = true
							if string.find(FixedString, "Dance") then
								local ExistEmote = Metatable.Class_Animations["Dance"]
								local MaxNumber = Utils.GetTableLength(ExistEmote)
								--print(MaxNumber)
								if DanceNumber ~= "" then
									Metatable:PlayAnimation("Dance", 0.1, nil, `Dance{DanceNumber}`)
								else
									Metatable:PlayAnimation("Dance", 0.1, nil, `Dance{math.random(1, MaxNumber)}`)
								end
								return true
							else
								Metatable:PlayAnimation(FixedString, 0.1)
								return true
							end
						end
					else
						print(`[BetterAnimate] Emote blocked by {Current_AnimationClass}`)
					end
				end

				-- Return false to indicate that the emote could not be played
				return false
			end
		else
			warn(`[BetterAnimate] PlayEmote BindableFunction not found`)
		end
	end

	local DefaultAnimations = Utils.DeepCopy(BetterAnimate.DefaultAnimations[HumanoidRigType])

	for Class, AnimationsList in DefaultAnimations do 
		for I, AnimationData in AnimationsList do
			Metatable:AddAnimation(Class, AnimationData, I)
		end
	end

	--------------------------------------------------
	
	DeepCustomSettings.Class_SpeedAdjust.Climb = (Humanoid.RigType == Enum.HumanoidRigType.R15 and 6) or 12 -- Fix
	
	if DeepCustomSettings.Debug then
		Metatable:EnableDebug(true)
	end

	return Metatable
end

function Module.GetAvatarAnimationsByUserID(UserID: number): {[string]: {[string]: Types.AnimationData?}?}
	return require(script.GetAvatarAnimationsByUserID)(UserID) or {}
end

return Module]]></ProtectedString>
						<string name="ScriptGuid">{1438FBF7-E02D-459E-B31E-F8212C2E0EE4}</string>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">BetterAnimate</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006783</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX571CE763AC22415CA7409C620814B7A2">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

local Module = {
	[Enum.HumanoidRigType.R6] = {
			Idle = 	{ -- "Random" idle animation
				Idle1 = { ID = "180435571", Weight = 80 },
				Idle2 = { ID = "180435792", Weight = 20 },
			},
			Walk = 		{ Walk1 =		{ ID = "180426354", Weight = 10 } }, 
			Run = 		{ Run1 =		{ ID = "180426354", Weight = 10 } },
			Swim = 		{ Swim1 =		{ ID = "180426354", Weight = 10 } },
			Swimidle = 	{ Swimidle1 =	{ ID = "180426354", Weight = 10 } }, 
			Jump = 		{ Jump1 =		{ ID = "125750702", Weight = 10 } }, 
			Fall = 		{ Fall1 =	 	{ ID = "180436148", Weight = 10 } }, 
			Climb =		{ Climb1 =		{ ID = "180436334", Weight = 10 } }, 
			Sit = 		{ Sit1 =		{ ID = "178130996", Weight = 10 } },	
			Toolnone = 	{ Toolnone1 = 	{ ID = "182393478", Weight = 10 } },
			Wave = 		{ Wave1 =		{ ID = "128777973", Weight = 10 } },
			Point = 	{ Point1 =		{ ID = "128853357", Weight = 10 } },
			Dance = 	{ 
				Dance1 ={ ID = "182435998", Weight = 10 },
				Dance2 ={ ID = "182436842", Weight = 10 },
				Dance3 ={ ID = "182436935", Weight = 10 },
			},
			Laugh = 	{ Laugh1 =		{ ID = "129423131",   Weight = 10 } },
			Cheer = 	{ Cheer1 =		{ ID = "129423030",   Weight = 10 } },
			Temp = 		{ Temp1 =		{ ID = "15609995579", Weight = 1 } }, -- r15 animation for r6
			Emote =     { { } },
	},

	[Enum.HumanoidRigType.R15] = {
			Idle = 	{ -- "Random" idle animation
				Idle1 = { ID = "507766666", Weight = 20 },
				Idle2 = { ID = "507766951", Weight = 20 },
				Idle3 = { ID = "507766388", Weight = 80 }
			},
			Walk = 		{ Walk1 =		{ ID = "507777826",  Weight = 10 } }, 
			Run = 		{ Run1 =		{ ID = "507767714",  Weight = 10 } }, 
			Swim = 		{ Swim1 =		{ ID = "507784897",  Weight = 10 } },
			Swimidle = 	{ Swimidle1 =	{ ID = "507785072",  Weight = 10 } }, 
			Jump = 		{ Jump1 =		{ ID = "507765000",  Weight = 10 } }, 
			Fall = 		{ Fall1 =	 	{ ID = "507767968",  Weight = 10 } }, 
			Climb = 	{ Climb1 =		{ ID = "507765644",  Weight = 10 } }, 
			Sit = 		{ Sit1 =		{ ID = "2506281703", Weight = 10 } },	
			Toolnone = 	{ Toolnone1 = 	{ ID = "507768375",  Weight = 10 } },
			Wave = 		{ Wave1 =		{ ID = "507770239",  Weight = 10 } },
			Point = 	{ Point1 =		{ ID = "507770453",  Weight = 10 } },
			Dance = 	{
				Dance1 ={ ID = "507772104", Weight = 10 },
				Dance2 ={ ID = "507776879", Weight = 10 },
				Dance3 ={ ID = "507777623", Weight = 10 },
			},
			Laugh = 	{ Laugh1 =		{ ID = "507770818", Weight = 10 } },
			Cheer = 	{ Cheer1 =		{ ID = "507770677", Weight = 10 } },
			Temp = 		{ Temp1 =		{ ID = "27789359",  Weight = 1  } }, -- r6 animation for r15
			Emote =     { { } },
	},
}

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{0E8020A5-5615-4B8B-AE94-F84FBBF6B0E6}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DefaultAnimations</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006784</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX1ADE83E08DD1493A9F66C3DBF5B76E3A">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Instance_BetterAnimate = ReplicatedStorage.BetterAnimate
local Types = require(Instance_BetterAnimate.Types)

local Module: Types.BetterAnimateSettings = {
	
	ToolAttributeCheck = "NoToolNone",
	ToolTagCheck = "NoToolNone",
	
	Time_DT = 0.04,
	Time_Debug = 0.06,
	Time_Update = 0.07,
	Time_AnimationStop = 0.1,
	Time_FallOnJump = 0.31,
	Time_Fall = 0.1,
	
	AnimationSpeedMultiplier = 1,

	Class_NoEmotes = {
		Walk = true, 
		Run = true, 
		Swim = true, 
		Swimidle = true, 
		Jump = true, 
		Fall = true, 
		Climb = true, 
		Sit = true,
	},

	Inverse = false,

	InverseOn = {
		BackwardRight = true, 
		BackwardLeft = true, 
		Backward = true,
		Down = true, -- For climb
	},

	Class_Inverse = {
		Walk = true, 
		Run = true, 
		Swim = true,
		Climb = true,
	},
	
	Class_DirectionCFrameAdjust = {
		Swim = CFrame.Angles(math.rad(90), 0, 0),
	},

	Class_SpeedAdjust = {
		Walk = 9,
		Run = 16,
		Climb = 6, -- (Humanoid.RigType == Enum.HumanoidRigType.R15 and 4) or 12, -- R6 and R15 speed must be different (roblox's skill issue)
		Swim = 10,
	},

	--Class_Speed = {
	--	Run = 0,
	--	Climb = 0, 
	--	Swim = 0,
	--},
	
	Class_SwitchIgnore = {
		Jump = true,
	},

	IdleSpeedRange = Vector2.new(-math.huge, 0.4),
	WalkSpeedRange = Vector2.new(0.4, 9),
	RunSpeedRange = Vector2.new(9, math.huge),
	--StopPreviousTime = 0.25,
	
	DefaultAnimationLenght = 5,
	DefaultAnimationWeight = 10,
	
	ToolAnimationPriority = Enum.AnimationPriority.Idle,
	AnimationPriority = Enum.AnimationPriority.Core,
	
	Bindable_NewDirection = false,
	Bindable_NewState = false,
	Bindable_NewAnimation = false,
	Bindable_KeyframeReached = false,
	
	Class_MaxTimer = {
		Idle = 5,
		Walk = 0,
		Run = 0,
		Climb = 0,
		Swim = 0,
		Jump = 0,
		Fall = 0,
		Sit = 0,
	},
	
	PhysicalProperties = PhysicalProperties.new(0.7, 0.5, 1, 0.3, 1), -- Default by roblox

	State_Deffered = {
		--Landed = "Landed",
		Jumping = "Jumping",
	},

	State_Functions = { -- Logic for every state

		Jumping = function(self)
			self:PlayAnimation("Jump", 0.1)
			local Passed = self:FallDelta(self.Settings.Time_FallOnJump)
			--print(1, Passed)
		end,

		Freefall = function(self)
			--if self.Current_AnimationClass ~= "Freefall" then
				local Passed = self:FallDelta(self.Settings.Time_Fall)
				--print(2, Passed)
			--end
		end,

		GettingUp = function(self) 
			self:StopCurrentAnimation()
		end,	

		FallingDown = function(self) 
			self:StopCurrentAnimation()
		end,	

		PlatformStanding = function(self)
			self:StopCurrentAnimation()
		end,

		Running = function(self)
			local Settings = self.Settings
			local Speed = self.MovingSpeed or 0 -- Settings.Class_Speed.Run	

			if Speed >= Settings.IdleSpeedRange.X and Settings.IdleSpeedRange.Y > Speed then
				self:PlayAnimation("Idle", 0.2)
			elseif Speed >= Settings.WalkSpeedRange.X and Settings.WalkSpeedRange.Y > Speed then
				self:PlayAnimation("Walk", 0.2, Speed)
			elseif Speed >= Settings.RunSpeedRange.X and Settings.RunSpeedRange.Y > Speed then
				self:PlayAnimation("Run", 0.2, Speed)
			else
				warn("Over 9000!!!!", Speed) -- Just a meme phrase (that's mean you broke something)
			end
		end,

		Seated = function(self)
			self:PlayAnimation("Sit", 0.3)
		end,

		Dead = function(self)
			task.defer(self.Trove.Destroy, self.Trove, true)
			coroutine.yield()
			--task.wait(999)
		end, --Cleanup on death

		Swimming = function(self)
			local Speed = self.MovingSpeed or 0 -- self.Settings.Class_Speed.Swim
			if Speed > 3 then self:PlayAnimation("Swim", 0.4, Speed) return end
			self:PlayAnimation("Swimidle", 0.4)
		end,

		Climbing = function(self)
			self:PlayAnimation("Climb", 0.2, self.MovingSpeed or 0
				--self.Settings.Class_Speed.Climb
			)
		end,

		None = function(self)
			self:PlayAnimation("Temp")
			--self.ForceState = false
		end,

		Flying = function(self) end,
		Ragdoll = function(self) end,
		Landed = function(self) end,
		RunningNoPhysics = function(self) end,
		StrafingNoPhysics = function(self) end,
		Physics = function(self) end,
	}
}

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{AFB3EABB-21AA-46A5-B643-D1B549DF528B}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DefaultSettings</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006785</UniqueId>
						</Properties>
					</Item>
					<Item class="BillboardGui" referent="RBX11E66CC5BA10480C81EBB2E17C926C61">
						<Properties>
							<bool name="Active">true</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">false</bool>
							<float name="Brightness">1</float>
							<bool name="ClipsDescendants">true</bool>
							<float name="DistanceLowerLimit">0</float>
							<float name="DistanceUpperLimit">-1</float>
							<Vector3 name="ExtentsOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="ExtentsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LightInfluence">1</float>
							<float name="MaxDistance">INF</float>
							<Ref name="PlayerToHideFrom">null</Ref>
							<UDim2 name="Size">
								<XS>5</XS>
								<XO>0</XO>
								<YS>3.5</YS>
								<YO>0</YO>
							</UDim2>
							<Vector2 name="SizeOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector3 name="StudsOffset">
								<X>0</X>
								<Y>5.5</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="StudsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<bool name="Enabled">true</bool>
							<bool name="ResetOnSpawn">true</bool>
							<token name="ZIndexBehavior">1</token>
							<bool name="AutoLocalize">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Debug</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006786</UniqueId>
						</Properties>
						<Item class="Frame" referent="RBX6AD26BF176B146E59EFCAE720944BF8E">
							<Properties>
								<token name="Style">0</token>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
								<bool name="AutoLocalize">true</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Main</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006787</UniqueId>
							</Properties>
							<Item class="TextLabel" referent="RBX95D2E5B53D0148E7A86E5539980596F6">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Tracks: 0</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Total</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006788</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX01BEB84BA9AC4316BB778B585523B523">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006789</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="UIGridLayout" referent="RBXD35A15A349C748B1BD625E0A2375189E">
								<Properties>
									<UDim2 name="CellPadding">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<UDim2 name="CellSize">
										<XS>0.333000004</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<int name="FillDirectionMaxCells">0</int>
									<token name="StartCorner">0</token>
									<token name="FillDirection">0</token>
									<token name="HorizontalAlignment">1</token>
									<token name="SortOrder">2</token>
									<token name="VerticalAlignment">1</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UIGridLayout</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000678a</UniqueId>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBXB3B3D98A5FF24185A46CD0E1536F1C31">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Class: Idle</string>
									<Color3 name="TextColor3">
										<R>0.984313786</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Class</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000678b</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX12140394BE914321B97C31B968F5F79A">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000678c</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX935AC19B5BE74CF49F10237183BCFC21">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Direction: Forward</string>
									<Color3 name="TextColor3">
										<R>0.0666666701</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Direction</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000678d</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX2E6BF2FB57924096A31793A37B1FD997">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000678e</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX8A21AF250F8141D39480D68C714951BE">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Timer: 0.0</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>1</G>
										<B>0.850980461</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Timer</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000678f</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX26E3389FBE1C44EFA81D8FDE813D0EEC">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006790</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX4091EAA0B1AD4144B13D0B8DD81F5834">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">ID: 123456789</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0.384313762</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">ID</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006791</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX6E5C36C4F8DB4D4CB67960A178794FC4">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006792</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX0F50116B23144ED696EA5890038D5AE9">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Speed: 0</string>
									<Color3 name="TextColor3">
										<R>0.831372619</R>
										<G>0</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cda</UniqueId>
									<string name="Name">Speed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006793</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXBDC133EA49B94475A075345928D164E2">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cdb</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006794</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX05A747692BF042B8AC3A212CBC577005">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">State: Test</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cda</UniqueId>
									<string name="Name">State</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006795</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX2984161057EE4B1397B5159DC354C831">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cdb</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006796</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX2549B2EA8FBD48FCAEBED20FF2E4D058">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local DestroyAnything = require(script.DestroyAnything)
local Parent = script.Parent
local Types = require(Parent.Types)

local Trove = {} :: Types.Trove
Trove.__index = Trove

function Trove.New(Name: string?)
	local self = setmetatable({}, Trove)
	self.Objects = {}
	self.Cleaning = false
	self.Name = Name
	self.UniqueID = HttpService:GenerateGUID()
	self.IsTrove = true
	return self
end

function Trove:Extend(Name: string)
	if self.Cleaning then return error("[Trove] is cleaning Extend()") end
	
	return self:Add(Trove.New(self.Name or HttpService:GenerateGUID()))
end

function Trove:InstanceNew(ClassName: string)
	if self.Cleaning then return error("[Trove] is cleaning InstanceNew()") end
	
	return self:Add(Instance.new(ClassName))
end

function Trove:Clone(Inst: Instance)
	if self.Cleaning then return error("[Trove] is cleaning Clone()") end
	
	return self:Add(Inst:Clone())
end

function Trove:Connect(Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?)
	if self.Cleaning then return error("[Trove] is cleaning Connect()") end
	
	return self:Add(Signal:Connect(Function), OnDestroy)
end

function Trove:Once(Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?) -- Connect Once
	if self.Cleaning then return error("[Trove] is cleaning ConnectOnce()") end
	
	local Object, Method
	Object, Method = self:Add(Signal:Once(function() Function() self:Remove(Object, true) end), OnDestroy)
	return Object, Method
end

function Trove:BindToRenderStep(Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)
	if self.Cleaning then return error("[Trove] is cleaning BindToRenderStep()") end
	
	local Index = HttpService:GenerateGUID()
	RunService:BindToRenderStep(Index, Priority, Function)
	return self:Add(Index, OnDestroy, function() RunService:UnbindFromRenderStep(Index) end)
end

function Trove:Add(Object: any, ...: any)
	if self.Cleaning then return error("[Trove] is cleaning Add()") end
	
	local CheckExist = self.Objects[Object]
	if CheckExist then
		return warn(`[Trove] Trying to add existing Object`, Object)
	else
		self.Objects[Object] = {...}
		return Object, function() self:Remove(Object) end
	end
end

function Trove:Remove(Object: any, Destroy: boolean?)
	local ObjectTable = self.Objects[Object]
	if ObjectTable then
		
		if Destroy then
			if type(Object) == "function" then
				Object(table.unpack(ObjectTable))
			else
				DestroyAnything:Destroy(Object)
				
				for _, Arg in ObjectTable do
					if type(Arg) == "function" then
						Arg()
					end
				end
			end
		end
		
		self.Objects[Object] = nil
		return true
	end
	return false, error(`[Trove] Object not found: {Object} {self.Name} {self.UniqueID}`)
end

function Trove:AttachToInstance(Inst: Instance)
	if self.Cleaning then return error("[Trove] is cleaning AttachToInstance()", 2) end
	
	if not Inst or not Inst:IsDescendantOf(game) then
		error(`Instance expected, got {Inst}`, 2)
	else
		return self:Connect(Inst.Destroying, function() self:Destroy() end)
	end
end

function Trove:Clear(Destroy: boolean?)
	for Object, _ in self.Objects do
		self:Remove(Object, Destroy)
	end
end

function Trove:Destroy()
	self:Clear(true)
	
	setmetatable(self, nil)
end

return Trove]]></ProtectedString>
							<string name="ScriptGuid">{66840AFD-39E8-420F-ADC2-1B63F89C2F8B}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Trove</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006797</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXC29581A553CF4D25A01DB522684A000D">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[local Module = {}

Module.CleanMethods = {
	["table"] = function(Table: {any})
		
		if not Table.IsTrove then -- Check for Trove
			for I, Thing in Table do
				Module:Destroy(Thing)
			end
		else
			Table:Destroy()
		end
	end,
	
	thread = function(Thread: thread)
		task.cancel(Thread)
	end,
	
	["function"] = function(Function: (any)->(any))
		
	end,
	
	instance = function(Inst: Instance)
		--if Inst then 
			Inst:Destroy()
		--end
	end,
	
	rbxscriptconnection = function(Connect: RBXScriptConnection)
		Connect = Connect.Connected and Connect:Disconnect() or nil
	end,
}

function Module:Destroy(Any: any)
	local TypeOf = string.lower(typeof(Any))
	local Destroy = Module.CleanMethods[TypeOf]
	if Destroy then
		Destroy(Any)
	end
end

return Module
]]></ProtectedString>
								<string name="ScriptGuid">{2A77C736-57CE-433B-92BC-06E824C2E927}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">DestroyAnything</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006798</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX08E85B25B45B4F94871594E897F3E2A2">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

local Module = {}

--Trove
export type Trove = {

	New: (Name: string)-> Trove & {
		Objects: {[any]: {any?}},

		Cleaning: boolean,
		Name: string, -- Name of the Trove
		UniqueID: string, -- UniqueID of Trove
		IsTrove: boolean, -- Check if this a Trove
	},
	Extend: (self: Trove, Name: string)-> Trove,
	InstanceNew: (self: Trove, ClassName: string)-> (Instance, ()->()),
	Clone: (self: Trove, Inst: Instance)-> (Instance, ()->()),
	Connect: (self: Trove, Signal: RBXScriptSignal, Function: ()->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	Once: (self: Trove, Signal: RBXScriptSignal, Function: ()->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	BindToRenderStep: (self: Trove, Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)-> (string, ()->()),
	Add: (self: Trove, Object: any, any)-> (any, ()->()),
	Remove: (self: Trove, Object: any, Destroy: boolean?)-> boolean,
	AttachToInstance: (self: Trove, Inst: Instance)-> RBXScriptConnection,
	Clear:(self: Trove, Destroy: boolean?)-> (),
	Destroy: (self: Trove)-> (), -- Destroy == Clear

	__index: Trove,
}

 --Animator
 
export type Directions = "ForwardRight" | "ForwardLeft" | "BackwardRight" | "BackwardLeft" | "Right" | "Left" | "Backward" | "Forward" | "Up" | "Down" | "None"

export type AnimationClasses = "Walk" | "Run" | "Swim" | "Swimidle" | "Jump" | "Fall" | "Climb" | "Sit" | "Idle" | "Emote" | "Dance" | "Cheer" | "Point" | "Laugh" | "Wave"

export type AnimationData = {
	ID: number | string?,
	Instance: Animation?, -- You can give Animation Instance instead of ID
	Weight: number?,
	Index: string?,
}

export type BetterAnimateSettings = {
	
	--Time
	Time_DT: number?, -- Min value to add (Passed += task.wait(Time_DT))
	Time_Update: number?, -- How fast animation will update
	Time_FallOnJump: number?,
	Time_Fall: number?,
	Time_AnimationStop: number?,
	
	Time_Debug: number?, -- How fast it will update
	--
	
	--Features
	Enabled_Inverse: boolean?, -- Inverse animations on walk, run and swim when moving backwards (hard to explain how it works) (Default = false)
	Enabled_Emotes: boolean?, -- Default = false
	
	Enabled_Signal_NewDirection: boolean?, -- Create Bindable for NewDirection event (Default = false)
	Enabled_Signal_NewState: boolean?, -- Create Bindable for NewState event (Default = false)
	Enabled_Signal_KeyframeReached: boolean?, -- Create Bindable for KeyframeReached event (Default = false)
	Enabled_Signal_NewAnimation: boolean?, -- Create Bindable for KeyframeReached event (Default = false)
	
	--Bindable 
	Bindable_PlayEmote: BindableFunction?, -- Using when Enabled_Emotes is true (Roblox's bindable)
	--
	
	--Class
	Class_SwitchIgnore: {
		[string]: boolean?,
		Jump: boolean?,
		--[AnimationClasses]: number?
	}?,
	
	Class_NoEmotes: {
		[string]: boolean?,
		--[AnimationClasses]: boolean?
	}?,
	
	Class_Inverse: { -- Classes that support Inverse feature
		[string]: boolean?,
		--[AnimationClasses]: boolean?
	}?,
	
	Class_DirectionCFrameAdjust: { -- Used to fix swimming direction (HumanoidRootPart problem)
		[string]: CFrame?,
		--[AnimationClasses]: CFrame?
	}?,
	
	Class_SpeedAdjust: { -- Used to adjust animation speed
		[string]: number?,
		--[AnimationClasses]: number?
	}?,
	
	Class_MaxTimer: {
		[string]: number | NumberRange?,
		--[AnimationClasses]: number | NumberRange?,
	}?,
	--
	
	--State
	State_Deffered: { -- Will play on trigger
		--Landed: "Landed"?,
		Jumping: "Jumping"?,
		[string]: string?,  -- If you want to add your own
	}?,
	
	State_Functions: {
		[string]: (BetterAnimate)-> ()?,
	}?,
	
	--Animation
	DefaultAnimationLenght: number?, -- If lenght of animation == 0 it will return DefaultAnimationLenght (Default = 5)
	DefaultAnimationWeight: number?, -- Weight = AnimationTable.Weight or DefaultAnimationWeight
	AnimationPriority:  Enum.AnimationPriority?, -- Self explaing
	--
	
	--Tool
	ToolAttributeCheck: string?, -- Default = "NoToolNone"
	ToolTagCheck: string?,  -- Default = "NoToolNone"
	ToolAnimationPriority: Enum.AnimationPriority?, -- Self explaing
	--
	
	--Other
	Debug: boolean?,
	AnimationSpeedMultiplier: number?, -- How AnimationSpeed * AnimationSpeedMultiplier (Default = 1)
	PhysicalProperties: PhysicalProperties?, -- Default = PhysicalProperties.new(0.7, 0.5, 1, 0.3, 1)
	
	InverseOn: { -- When Inserse applies
		BackwardRight: boolean?, 
		BackwardLeft: boolean?, 
		Backward: boolean?,
		[Directions]: boolean?,
	}?,
	
	IdleSpeedRange: Vector2?, -- Default = Vector2.new(-math.huge, 0.4)
	WalkSpeedRange: Vector2?, -- Default = Vector2.new(0.4, 9)
	RunSpeedRange: Vector2?, -- Default = Vector2.new(9, math.huge)
	--
}

export type BetterAnimate = {
	--Settings
	Settings: BetterAnimateSettings, -- Your settings
	DefaultSettings: BetterAnimateSettings, -- Default settings (will fill your custom settings)
	--
	
	--Animations information
	Class_Animations: { [AnimationClasses]: { [any]: AnimationData} }, -- All animations that loaded
	DefaultAnimations: { [Enum.HumanoidRigType]: { [string]: { [any]: AnimationData } } } , -- Default animations
	--
	
	--State
	Current_State: string, -- State (Running, Falling, etc...)
	State_Forced: string, -- Forcing state to play (Fall, Landed, etc)
	--
	
	--Character information
	Character: Model, -- Your Character
	Humanoid: Humanoid, -- Your Humanoid
	HumanoidRigType: Enum.HumanoidRigType, -- Your HumanoidRigType
	PrimaryPart: BasePart, -- Your PrimaryPart (HumanoidRootPart)
	Animator: Animator | Humanoid, -- Your Animator
	MovingSpeed: number, -- Speed of character
	MovingDirection: Directions,
	Current_PlayingEmote: boolean, -- Is character using emotes
	--
	
	--Bindable signal created by BetterAnimate
	Signal_NewDirection: RBXScriptSignal,--?, -- 
	Signal_NewState: RBXScriptSignal,--?, --
	Signal_NewAnimation: RBXScriptSignal,--?, --
	Signal_KeyframeReached: RBXScriptSignal,--?, --
	--
	
	--Class animation information
	Current_AnimationInstance: Animation, -- Instance
	Current_AnimationTrack: AnimationTrack, -- AnimationTrack
	Current_AnimationClass: string, -- (Run, Walk, Idle, etc,,,)
	Current_AnimationName: string, -- Name of Animation instance
	Current_AnimationSpeed: number, -- Speed * Adjust * Inverse
	
	Class_Timer: {
		Current: { [AnimationClasses]: number | NumberRange?,},
		Max: { [AnimationClasses]: number | NumberRange?,},
	},
	--
	
	--Tool animation information
	ToolAnimationInstance: Animation,
	ToolAnimationTrack: AnimationTrack,
	--
	
	--Troves
	Trove_BetterAnimate: Trove,
	Trove_Animation: Trove,
	Trove_Tool: Trove,
	Trove_Debug: Trove,
	--
	
	-- Storage for BetterAniamte
	Storage: {
		Bindable: {
			NewDirection: BindableEvent,
			NewState: BindableEvent,
			NewAnimation: BindableEvent,
			KeyframeReached: BindableEvent,
		},
	},

	--Other (Outside Animator)

	Start: (self: BetterAnimate)-> (),
	Destroy: (self: BetterAnimate)-> (),
	EnableDebug: (self: BetterAnimate, Enable: boolean)-> (),
	StopPlayingAnimations: (self: BetterAnimate)-> (),
	UpdateAnimations: (self: BetterAnimate, NewAnimationsTable: { [string]: { [any]: AnimationData} }, ResetClass: boolean?)-> (),
	ForceState: (self: BetterAnimate, State: string)-> (),
	--

	--Main
	RollAnimation: (self: BetterAnimate, AnimationClass: string, ForceIndex: string?)-> (),
	SwitchAnimation: (self: BetterAnimate, AnimationTrack: AnimationTrack, TransitionTime: number)-> number,
	Direction: (self: BetterAnimate, MoveVector: Vector3)-> (),
	GetInverse: (self: BetterAnimate)-> number,
	AnimationUpdater: (self: BetterAnimate)-> (),
	StopCurrentAnimation: (self: BetterAnimate)-> (),
	GetHeightScale: (self: BetterAnimate)-> number,
	GetMoveDirection: (self: BetterAnimate)-> Vector3,
	--

	--Class
	AnimationEvent: (self: BetterAnimate, AnimationClass: string, AnimationTable: AnimationData, Keyframe: string?)-> (),
	PlayAnimation: (self: BetterAnimate, AnimationClass: string, TransitionTime: number?, Speed: number?, Index: string?)-> number,
	AddAnimation: (self: BetterAnimate, AnimationClass: string, AnimationTable: AnimationData, Index: any?)-> (),
	FallDelta: (self: BetterAnimate, FallDelay: number)-> (),
	--

	--Tool
	ToolAnimationEnded: (self: BetterAnimate, ToolAnimation: Animation)-> (),
	PlayToolAnimation: (self: BetterAnimate, ToolAnimation: Animation?, TransitionTime: number?)-> (),
	StopToolAnimations: (self: BetterAnimate)-> (),

	ChildRemoved: (self: BetterAnimate, Child: Instance)-> (),
	ChildAdded: (self: BetterAnimate, Child: Instance)-> (),
	FixCenter: (self: BetterAnimate)-> (),
	--

	__index: BetterAnimate
}

return Module]]></ProtectedString>
							<string name="ScriptGuid">{3184DA4E-4C5C-4A8D-A03B-7E61F9283A9C}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Types</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b800006799</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX09A8EE49E9634CF985AFB6937A2B3767">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[local Module = {}

function Module.GetTableLength(Table: {[any]: any}): number
	local Number = 0
	for _, _ in Table do
		Number += 1
	end
	return Number
end

function Module.Vector3Round(Vector: Vector3): Vector3
	return Vector3.new(math.round(Vector.X), math.round(Vector.Y), math.round(Vector.Z))
end

function Module.Vector3Floor(Vector: Vector3): Vector3
	return Vector3.new(math.floor(Vector.X), math.floor(Vector.Y), math.floor(Vector.Z))
end

function Module.Vector3Ceil(Vector: Vector3): Vector3
	return Vector3.new(math.ceil(Vector.X), math.ceil(Vector.Y), math.ceil(Vector.Z))
end

function Module.MaxDecimal(Number, Decimal) return math.round(Number * 10 ^ Decimal) / (10 ^ Decimal) end

function Module.WaitForChildWhichIsA(Where: Instance, What: string, Recursive: boolean?, Timer: number?): Instance?
	if not Where or type(What) ~= "string" then
		return warn(`WaitForChildWhichIsA got incorrect data. Where: {Where} = {typeof(Where)}, What: {What} = {typeof(What)}`)
	else
		Timer = type(Timer) == "number" and Timer or 7
		local TimePassed = 0
		local Found = nil
		repeat
			Found = Where:FindFirstChildWhichIsA(What, Recursive)
			TimePassed += task.wait() 
		until Found or TimePassed >= Timer
		return Found
	end
end

function Module.DeepCopy(Table: {[any?]: any?}): {[any?]: any?}
	local Copy = {}
	for I, Value in Table do
		if type(Value) == "table" then
			Value = Module.DeepCopy(Value)
		end
		Copy[I] = Value
	end
	return Copy
end

function Module.FirstUpper(String: string): string
	return string.gsub(String, "^%l", function(Letter) return string.upper(Letter) end)
end

function Module.GetAnimationTrackLength(AnimationTrack: AnimationTrack, Default: number?): number?
	local NotAZero = AnimationTrack and AnimationTrack.Length > 0
	return NotAZero and AnimationTrack.Length or Default or nil
end

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{95AF1B91-5CD1-4B0B-B8DD-0B548B50DE15}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Utils</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000679a</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX6E206A02C5464D449242A20BE2643876">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[local RunService = game:GetService("RunService")
local InsertService = game:GetService("InsertService")
local Players = game:GetService("Players")

local Utils = require(script.Parent.Utils)

local Instance_GetAvatarAnimationsByUserID = script
local Get = Instance_GetAvatarAnimationsByUserID.Get
local Nothing = {}

function GetAnimationClearly(ID: number)
	if not ID or ID == 0 then return Nothing end

	local Found = {}
	local AnimationModel = InsertService:LoadAsset(ID)
	local AnimationFolder = AnimationModel:FindFirstChildWhichIsA("Folder")

	for _, StringValue in AnimationFolder:GetChildren() :: {StringValue} do -- {StringValue}
		local ClassAnimationTable = {}
		Found[Utils.FirstUpper(StringValue.Name)] = ClassAnimationTable
		for _, FoundAnimation in StringValue:GetChildren() :: {Animation} do
			local WeightInstance = FoundAnimation:FindFirstChildWhichIsA("ValueBase")
			local Weight = WeightInstance and WeightInstance.Value or nil
			
			ClassAnimationTable[FoundAnimation.Name] = {
				ID = FoundAnimation.AnimationId,
				Weight = Weight,
				Index = FoundAnimation.Name,
			}
		end
	end
	AnimationModel:Destroy()
	return Found
end

function GetAnimationsByUserID(UserID: number)
	local Success, Result = pcall(function()
		local HumanoidDescription = Players:GetHumanoidDescriptionFromUserId(UserID)
		local ToGet = {
			HumanoidDescription.RunAnimation,
			HumanoidDescription.FallAnimation,
			HumanoidDescription.IdleAnimation,
			HumanoidDescription.JumpAnimation,
			HumanoidDescription.SwimAnimation,
			HumanoidDescription.WalkAnimation,
			HumanoidDescription.ClimbAnimation,
		}

		local Animations = {}

		for _, ID in ToGet do
			for I, Table in GetAnimationClearly(ID) do
				Animations[I] = Table
			end
		end

		return Animations
	end)

	if Success then
		return Result
	else
		warn(`[BetterAnimate] GetAvatarAnimationsByUserID`, Result)
		return Nothing
	end
end

if RunService:IsServer() then
	Get.OnServerInvoke = function(Player: Player, UserID: number)
		return GetAnimationsByUserID(UserID)
	end
end

return function(UserID: number)
	if RunService:IsClient() then
		return Get:InvokeServer(UserID)
	else
		return GetAnimationsByUserID(UserID)
	end
end
]]></ProtectedString>
							<string name="ScriptGuid">{AB9F41EC-3C91-4145-A505-8BF1DB153B97}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">GetAvatarAnimationsByUserID</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000679b</UniqueId>
						</Properties>
						<Item class="RemoteFunction" referent="RBXC4ADE132F38249DB8A451BB5772B733D">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Get</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000679c</UniqueId>
							</Properties>
						</Item>
						<Item class="Script" referent="RBXEC8BAEE62C57427E80481F1FA63DC57B">
							<Properties>
								<ProtectedString name="Source"><![CDATA[require(script.Parent)
script:Destroy()]]></ProtectedString>
								<bool name="Disabled">false</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">1</token>
								<string name="ScriptGuid">{ED85133F-F644-486E-9B58-91775990DBDD}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">ServerSide</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">73ad9f52e3d50a9d075c65b80000679d</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX832EDB975F3B434DBA349917BFEF51FD">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">73ad9f52e3d50a9d075c65b80000677e</UniqueId>
					<string name="Name">1.2.1.1</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010332</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX811731DE18154014A360F35DACDEB828">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local Utils = require(script.Utils)
local Trove = require(script.Trove)
local Types = require(script.Types)

local DefaultAnimations = require(script.DefaultAnimations)
local DefaultSettings = require(script.DefaultSettings)

local BetterAnimate = {
	DefaultAnimations = DefaultAnimations,
	DefaultSettings = DefaultSettings,
} :: Types.BetterAnimate

BetterAnimate.__index = BetterAnimate

-----------Other (Outside Animator)
function BetterAnimate:Start()
	local Humanoid = self.Humanoid
	local Character = self.Character
	local Settings = self.Settings

	self.Trove_BetterAnimate:Connect(Character.ChildAdded, function(Child: Instance)
		self:ChildAdded(Child)
	end)

	self.Trove_BetterAnimate:Connect(Character.ChildRemoved, function(Child: Instance)
		self:ChildRemoved(Child)
	end)

	self.Trove_BetterAnimate:Connect(Humanoid.StateChanged, function(Old: Enum.HumanoidStateType, New: Enum.HumanoidStateType)
		local IsDefferedState = Settings.State_Deffered[New.Name]
		if IsDefferedState then
			--warn(New)
			self:ForceState(IsDefferedState)
			--self.State_Forced = IsDefferedState
		end
	end)

	self.Trove_BetterAnimate:Add(task.defer(self.AnimationUpdater, self))
end

function BetterAnimate:Destroy() -- Clear everything
	local IsTrove = self.Trove_BetterAnimate
	if IsTrove then
		self.Trove_BetterAnimate:Destroy()
	end
	setmetatable(self, nil)
end

function BetterAnimate:EnableDebug(Enable: boolean?)
	
	if Enable then
		print("[BetterAnimate] Debug enabled", self.Character)
		local C_Frame, Size = self.Character:GetBoundingBox()
		local Height = self:GetHeightScale()

		local PrimaryPartPosition = self.PrimaryPart.CFrame.Position
		local ModelPosition = C_Frame.Position
		local Offset = ModelPosition - PrimaryPartPosition

		local DebugBillboard: BillboardGui = self.Trove_Debug:Clone(script.Debug)
		DebugBillboard.StudsOffset = Vector3.new(0, Size.Y / 2 + Offset.Y + 1.5, 0)
		DebugBillboard.Parent = self.PrimaryPart

		local Main = DebugBillboard:FindFirstChild("Main") :: Frame
		local Class = Main:FindFirstChild("Class") :: TextLabel
		local Direction = Main:FindFirstChild("Direction") :: TextLabel
		local ID = Main:FindFirstChild("ID") :: TextLabel
		local Timer = Main:FindFirstChild("Timer") :: TextLabel
		local Total = Main:FindFirstChild("Total") :: TextLabel
		local Speed = Main:FindFirstChild("Speed") :: TextLabel
		local State = Main:FindFirstChild("State") :: TextLabel

		self.Trove_Debug:Add(task.defer(function()
			while task.wait(self.Settings.Time_Debug) do
				--print("Check")
				local Current_AnimationClass = self.Current_AnimationClass
				local Tracks = #self.Animator:GetPlayingAnimationTracks()

				Class.Text = `Class {Current_AnimationClass}`
				Direction.Text = `Direction {self.MovingDirection}`
				ID.Text = `ID {self.Current_AnimationTrack and string.gsub(self.Current_AnimationTrack.Animation.AnimationId, "%D", "") or nil}`
				Timer.Text = `Timer {string.format(`%.{2}f`, self.Class_Timer.Current[Current_AnimationClass] or 0)}`
				Total.Text = `Total {Tracks}`
				Speed.Text = `Speed {string.format(`%.{2}f`, self.MovingSpeed or 0)}`
				State.Text = `State {self.Current_State}`

				if Tracks > 2 then
					print(`[BetterAnimate [Debug]] Tracks`, Tracks)
				end
			end
		end))
	else
		self.Trove_Debug:Clear(true)
	end
end

function BetterAnimate:StopPlayingAnimations() -- Why not :)
	self:StopCurrentAnimation()
	for _, Animation in self.Animator:GetPlayingAnimationTracks() do 
		Animation:Stop(self.Settings.Time_AnimationStop)
	end
end

function BetterAnimate:UpdateAnimations(NewClassAnimationsTable: {[string]: Types.AnimationData}, ResetClass: boolean?) --Replace
	for Class, NewAnimationsTable in NewClassAnimationsTable do
		
		if ResetClass then
			local FoundClass = self.Class_Animations[Class]
			if FoundClass then
				for _, AnimationTable in FoundClass do
					self.Trove_BetterAnimate:Remove(AnimationTable.Instance, true)
				end
				self.Class_Animations[Class] = {}
			end
		end
		
		for I, NewAnimationTable in NewAnimationsTable do
			self:AddAnimation(Class, NewAnimationTable, I)
		end
	end
end

function BetterAnimate:ForceState(State: string)
	local State_Functions = self.Settings.State_Functions
	if State_Functions[State] then
		self.State_Forced = `{State}{math.random(100000)}`
	else
		warn(`[BetterAnimate] State {State} not found`, State_Functions)
	end
end

-----------

-----------Main
function BetterAnimate:RollAnimation(AnimationClass: string, ForceIndex: string?) -- Sol's RNG lol
	local AnimationClassTable = self.Class_Animations[AnimationClass]
	local TotalWeight = 0
	
	if ForceIndex then
		local FoundByForce = AnimationClassTable[ForceIndex]
		if FoundByForce then
			return ForceIndex, FoundByForce
		else
			warn(`[BetterAnimate] ForceIndex {ForceIndex} not found`, self.Class_Animations)
		end
	end
	
	for _, Table in AnimationClassTable do 
		TotalWeight += (Table.Weight or 0)
	end

	if TotalWeight == 0 then -- No animations found
		AnimationClass = "Temp"
		AnimationClassTable = self.Class_Animations.Temp
		for _, Table in AnimationClassTable do
			TotalWeight += (Table.Weight or 0)
		end
	end
	
	local RandomValue = math.random(TotalWeight)

	local CurrentWeight, ChoosedIndex = 0, 1
	for Index, Table in AnimationClassTable do
		CurrentWeight += Table.Weight
		if RandomValue <= CurrentWeight then
			ChoosedIndex = Index
			break
		end
	end

	return ChoosedIndex, AnimationClassTable[ChoosedIndex]
end

function BetterAnimate:SwitchAnimation(AnimationClass: string, AnimationTable: Types.AnimationData, TransitionTime: number)
	local Settings = self.Settings

	local AnimationInstance = AnimationTable.Instance :: Animation
	if AnimationInstance ~= self.Current_AnimationInstance or Settings.Class_SwitchIgnore[self.Current_AnimationClass] then
		
		if AnimationInstance == self.Current_AnimationInstance then
			self.Current_AnimationTrack:Play(TransitionTime)
		else
			local AnimationTrack = self.Animator:LoadAnimation(AnimationInstance) --AnimationTable.AnimationTrack
			self:StopCurrentAnimation() -- self.Trove_Animation:Destroy()

			AnimationTrack.Priority = Settings.AnimationPriority

			self.Current_AnimationTrack = AnimationTrack
			self.Current_AnimationInstance = AnimationInstance
			self.Trove_Animation:Connect(AnimationTrack.Ended, function(...) self:AnimationEvent(...) end)
			self.Trove_Animation:Connect(AnimationTrack.KeyframeReached, function(...) self:AnimationEvent(...) end) -- KeyframeReached is NOT bad
			self.Trove_Animation:Add(function() AnimationTrack:Stop(Settings.Time_AnimationStop) end)
			AnimationTrack:Play(TransitionTime)
		end
	end
	return Utils.GetAnimationTrackLength(self.Current_AnimationTrack, Settings.DefaultAnimationLenght)
end

function BetterAnimate:Direction(MoveVector: Vector3)
	if MoveVector.Z < 0 and MoveVector.X > 0 then return "ForwardRight"
	elseif MoveVector.Z < 0 and MoveVector.X < 0 then return "ForwardLeft"
	elseif MoveVector.Z < 0 and MoveVector.X == 0 then return "Forward"
	elseif MoveVector.Z > 0 and MoveVector.X == 0 then return "Backward"
	elseif MoveVector.Z > 0 and MoveVector.X > 0 then return "BackwardRight"
	elseif MoveVector.Z > 0 and MoveVector.X < 0 then return "BackwardLeft"	
	elseif MoveVector.Z == 0 and MoveVector.X > 0 then return "Right"
	elseif MoveVector.Z == 0 and MoveVector.X < 0 then return "Left"
	elseif MoveVector.Y > 0 then return "Up"
	elseif MoveVector.Y < 0 then return "Down"
	else return "None"
	end
end

function BetterAnimate:GetInverse()
	local Settings = self.Settings
	local Vector3_Direction = self:GetMoveDirection()
	local Direction = self:Direction(Vector3_Direction)

	if self.MovingDirection ~= Direction then
		local Bindable_NewDirection = self.Signal_NewDirection and self.Storage.Bindable.NewDirection
		if Bindable_NewDirection then
			Bindable_NewDirection:Fire(Direction, Vector3_Direction)
		end

		self.MovingDirection = Direction
	end
	
	return Settings.Enabled_Inverse and Settings.InverseOn[Direction] and Settings.Class_Inverse[self.Current_AnimationClass] and -1 or 1
end

function BetterAnimate:AnimationUpdater()
	local Storage = self.Storage
	local Settings = self.Settings
	local Humanoid = self.Humanoid
	local Class_CurrentTimer = self.Class_Timer.Current
	local Passed = 0

	while true do
		if not self.Current_PlayingEmote then
			local ForcedState = self.State_Forced and string.gsub(self.State_Forced, "%d", "") or nil
			local State = ForcedState or Humanoid:GetState().Name
			local SelectedFunction = Settings.State_Functions[State]
			local OldState = self.Current_State
			
			if State ~= OldState then
				local Bindable_NewState = self.Signal_NewState and Storage.Bindable.NewState
				if Bindable_NewState then
					Bindable_NewState:Fire(State)
				end
			end
			
			self.Current_State = State
			
			SelectedFunction(self)

			if State == ForcedState and ForcedState == string.gsub(self.State_Forced, "%d", "") then -- Check if force state executed
				self.State_Forced = false
			end
		else
			if self:GetMoveDirection().Magnitude > 0 then
				self.Current_PlayingEmote = false
			end
		end
		
		while Passed < Settings.Time_Update do
			self.MovingSpeed = Utils.MaxDecimal(self.PrimaryPart.AssemblyLinearVelocity.Magnitude, 1)
			Passed += task.wait(Settings.Time_DT)
		end

		for Name, Value in Class_CurrentTimer do
			Class_CurrentTimer[Name] -= Passed
		end
		
		self.MovingSpeed = Utils.MaxDecimal(self.PrimaryPart.AssemblyLinearVelocity.Magnitude, 1)
		
		Passed = 0
	end
end

function BetterAnimate:StopCurrentAnimation()
	self.Trove_Animation:Clear(true)
end

function BetterAnimate:GetHeightScale()
	local Humanoid: Humanoid = self.Humanoid
	if Humanoid and not Humanoid.AutomaticScalingEnabled then
		return Humanoid.HipHeight / 2
	else
		return self.Character:GetScale()
	end -- HumanoidHipHeight = 2
end

function BetterAnimate:GetMoveDirection()
	local Settings = self.Settings
	local PrimaryPart = self.PrimaryPart
	local AnimationClass = self.Current_AnimationClass
	
	local Velocity = PrimaryPart.AssemblyLinearVelocity
	local VelocityUnit = Velocity.Unit
	local FixedCFrame: CFrame = PrimaryPart.CFrame * (Settings.Class_DirectionCFrameAdjust[AnimationClass] or CFrame.Angles(0, 0, 0))
	local Multiplier = self.MovingSpeed or 0
	return Utils.Vector3Round(FixedCFrame:VectorToObjectSpace(VelocityUnit)) * math.abs(Multiplier) 
end
-----------

-----------Class
function BetterAnimate:AnimationEvent(Keyframe: string?)
	local Storage = self.Storage
	
	if Keyframe then
		local Bindable_KeyframeReached = self.Signal_KeyframeReached and Storage.Bindable.KeyframeReached
		if Bindable_KeyframeReached then
			Bindable_KeyframeReached:Fire(Keyframe)
		end
	else
		self.Current_PlayingEmote = false
	end
end

function BetterAnimate:PlayAnimation(AnimationClass: string, TransitionTime: number?, Speed: number?, Index: string?)
	local Settings = self.Settings
	local Storage = self.Storage
	
	local AnimationLength
	local Class_Timer = self.Class_Timer
	local CurrentTimer = Class_Timer.Current
	local MaxTimer = Class_Timer.Max
	
	local OldAnimationClass = self.Current_AnimationClass
	self.Current_AnimationClass = AnimationClass
	
	local function ConfigureAnimation()
		local AnimationName, AnimationTable = self:RollAnimation(AnimationClass, Index)
		local OldAnimationInstance = self.Current_AnimationInstance
		self.Current_AnimationName = AnimationName
		AnimationLength = self:SwitchAnimation(AnimationClass, AnimationTable, TransitionTime or Settings.Time_DefaultAnimationTransition)

		local Bindable_NewAnimation = self.Signal_NewAnimation and Storage.Bindable.NewAnimation
		if Bindable_NewAnimation and OldAnimationInstance ~= self.Current_AnimationInstance then
			Bindable_NewAnimation:Fire(AnimationClass, AnimationName, AnimationTable)
		end
	end
	
	local function GetTimer(ClassMaxTimer: number | NumberRange): number
		return typeof(ClassMaxTimer) == "NumberRange" and math.random(ClassMaxTimer.Min * 10, ClassMaxTimer.Max * 10) / 10 or ClassMaxTimer
	end
	
	local ClassMaxTimer: number | NumberRange = MaxTimer[AnimationClass]
	
	if ClassMaxTimer then
		--print(ClassMaxTimer)
		if CurrentTimer[AnimationClass] then
			if CurrentTimer[AnimationClass] <= 0 or OldAnimationClass ~= AnimationClass then
				CurrentTimer[AnimationClass] = GetTimer(ClassMaxTimer)
				ConfigureAnimation()
			else
				AnimationLength = Utils.GetAnimationTrackLength(self.Current_AnimationTrack, Settings.DefaultAnimationLenght)
			end
		else
			CurrentTimer[AnimationClass] = GetTimer(ClassMaxTimer)
			ConfigureAnimation()
		end
	else
		ConfigureAnimation()
	end

	self.Current_AnimationSpeed = (Speed or 1) / (Settings.Class_SpeedAdjust[AnimationClass] or 1) * Settings.AnimationSpeedMultiplier
	local AnimationSpeed = (self.Current_AnimationSpeed / self:GetHeightScale()) * self:GetInverse()
	self.Current_AnimationTrack:AdjustSpeed(AnimationSpeed)
	return AnimationLength
end

function BetterAnimate:AddAnimation(AnimationClass: string, AnimationTable: Types.AnimationData, IsIndex: any?)
	local Settings = self.Settings
	local Class_Animations = self.Class_Animations[AnimationClass]
	if not Class_Animations then
		Class_Animations = {}
		self.Class_Animations[AnimationClass] = Class_Animations
	end
	
	local Index: string,
	IDLink: string
	
	if AnimationTable then
	
		local LoadedAnimationData = Utils.DeepCopy(AnimationTable) :: Types.AnimationData
		local IsInstance = AnimationTable.Instance 
		local IsID = AnimationTable.ID
		
		if IsID then
			local NoLeak = AnimationTable.Instance and AnimationTable.Instance:Destroy() or true
			local ID = `{AnimationTable.ID}` --tostring
			IDLink = `rbxassetid://{string.gsub(ID, "%D", "")}`
			Index = IsIndex or AnimationTable.Index or `{AnimationClass}{HttpService:GenerateGUID()}`

			if IDLink ~= "rbxassetid://0" and IDLink ~= "rbxassetid://" then
				local AnimationIstance = self.Trove_BetterAnimate:InstanceNew("Animation")
				AnimationIstance.Name = Index
				AnimationIstance.AnimationId = IDLink
				LoadedAnimationData.Instance = AnimationIstance
			end
			
		elseif IsInstance then
			IDLink = IsInstance.AnimationId
			LoadedAnimationData.ID = IsInstance.AnimationId
			Index = IsIndex or AnimationTable.Index or IsInstance.Name
			self.Trove_BetterAnimate:Add(IsInstance)
		else
			return --error(`[BetterAnimate] ID or Aniamte instance not found`, 2)
		end
		
		local RemoveOnExist = Class_Animations and Class_Animations[Index]
		if RemoveOnExist then
			self.Trove_BetterAnimate:Remove(RemoveOnExist.Instance, true)
		end

		if IDLink == "rbxassetid://0" or IDLink == "rbxassetid://" then
			Class_Animations[Index] = nil -- Disabling that animation
		else
			LoadedAnimationData.Weight = AnimationTable.Weight or Settings.DefaultAnimationWeight
			Class_Animations[Index] = LoadedAnimationData
		end
	end
	
	if Index == self.Current_AnimationName or AnimationClass == self.Current_AnimationClass and Utils.GetTableLength(Class_Animations) == 0 then -- AllowToUpdateCurrentAnimation
		if self.Class_Timer.Current[AnimationClass] then
			self.Class_Timer.Current[AnimationClass] = 0
		end
		--print("Update yea")
		self:PlayAnimation(AnimationClass)
	end
	return Index
end

function BetterAnimate:FallDelta(TimeDelay: number)
	local Settings = self.Settings
	local State = self.Humanoid:GetState().Name
	State = State == "Jumping" and "Freefall" or State
	while State == "Freefall" do
		if TimeDelay <= 0 then
			self:PlayAnimation("Fall", 0.1)
			return true
		end
		TimeDelay -= task.wait(Settings.Time_DT)
		State = self.Humanoid:GetState().Name
	end
	return false
end
-----------

-----------Tool
function BetterAnimate:ToolAnimationEnded(ToolAnimation: Animation, Force: boolean?)
	self:PlayToolAnimation(ToolAnimation, 0, Force)
end

function BetterAnimate:PlayToolAnimation(ToolAnimation: Animation?, TransitionTime: number?, Force: boolean?)
	local Settings = self.Settings

	if self.ToolAnimationInstance ~= ToolAnimation or Force then
		self.Trove_Tool:Clear(true)
		self.ToolAnimationInstance = ToolAnimation

		if not ToolAnimation then return end

		self.Trove_Tool:Add(function()
			self.ToolAnimationTrack:Stop(Settings.Time_AnimationStop)
			self.ToolAnimationTrack = nil
		end)

		local ToolAnimationTrack: AnimationTrack = self.Animator:LoadAnimation(ToolAnimation)
		self.ToolAnimationTrack = ToolAnimationTrack
		ToolAnimationTrack.Priority = Settings.ToolAnimationPriority
		ToolAnimationTrack:Play(TransitionTime or Settings.Time_DefaultAnimationTransition)
		self.Trove_Tool:Connect(ToolAnimationTrack.KeyframeReached, function(...) self:AnimationEvent(...) end)
		self.Trove_Tool:Connect(ToolAnimationTrack.Ended, function() self:ToolAnimationEnded(ToolAnimation, true) end)
	end
end

function BetterAnimate:StopToolAnimations()
	self.Trove_Tool:Clear(true)
	self.ToolAnimationInstance = nil
end

function BetterAnimate:ChildRemoved(Child: Instance)
	if Child:IsA("Tool") then
		self:StopToolAnimations()
	end
	self:FixCenter() 
end 

function BetterAnimate:ChildAdded(Child: Instance)
	local Settings = self.Settings
	local Handle = Child:FindFirstChild("Handle") or Child:FindFirstChildWhichIsA("BasePart")
	if Child:IsA("Tool")
		--and Handle 
		and not Child:GetAttribute(Settings.ToolAttributeCheck)
		and not Child:HasTag(Settings.ToolTagCheck)
	then
		local _, Table = self:RollAnimation("Toolnone")
		local TooAnimationInstance = Table.Instance
		self:PlayToolAnimation(TooAnimationInstance, 0.1)
	end 
	self:FixCenter()
end

function BetterAnimate:FixCenter()
	local Root = self.PrimaryPart
	local SavedPhysis = self.Settings.PhysicalProperties
	Root.CustomPhysicalProperties = PhysicalProperties.new(
		SavedPhysis.Density - 0.01, 
		SavedPhysis.Friction, 
		SavedPhysis.Elasticity, 
		SavedPhysis.FrictionWeight,
		SavedPhysis.ElasticityWeight
	)
	task.wait()
	Root.CustomPhysicalProperties = SavedPhysis
end

local Module = {}

function Module.New(Character: Model, CustomSettings: Types.BetterAnimateSettings?)

	local DeepCustomSettings = Utils.DeepCopy(CustomSettings or {}) :: Types.BetterAnimateSettings
	local DeepDefaultSettings = Utils.DeepCopy(BetterAnimate.DefaultSettings) :: Types.BetterAnimateSettings

	for I, Value in DeepDefaultSettings do
		if DeepCustomSettings[I] == nil then
			DeepCustomSettings[I] = Value
		end
	end

	local PrimaryPart = Character.PrimaryPart
	local HumanoidRigType, AnimatorInstance
	local Humanoid = Utils.WaitForChildWhichIsA(Character, "Humanoid", true, 1) :: Humanoid?
	if Humanoid then
		HumanoidRigType = Humanoid.RigType
		AnimatorInstance = Utils.WaitForChildWhichIsA(Character, "Animator", true, 1) or Humanoid -- If animator not found
	else
		return warn(`[BetterAnimate] Humanoid not found in {Character}`)
	end

	local Trove_BetterAnimate = Trove.New()
	local Trove_Animation = Trove_BetterAnimate:Extend()
	local Trove_Tool = Trove_BetterAnimate:Extend()
	local Trove_Debug = Trove_BetterAnimate:Extend()

	local NewDirection: BindableEvent? = DeepCustomSettings.Enabled_Signal_NewDirection and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local NewState: BindableEvent? = DeepCustomSettings.Enabled_Signal_NewState and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local NewAnimation: BindableEvent? = DeepCustomSettings.Enabled_Signal_NewAnimation and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil
	local KeyframeReached: BindableEvent? = DeepCustomSettings.Enabled_Signal_KeyframeReached and Trove_BetterAnimate:InstanceNew("BindableEvent") or nil

	local MetaData = {
		Settings = DeepCustomSettings,
		Class_Animations = {},
		
		MovingSpeed = 0,
		
		MovingDirection = "None",

		--Character data
		PrimaryPart = PrimaryPart,
		Character = Character,
		HumanoidRigType = HumanoidRigType,
		Humanoid = Humanoid,
		Animator = AnimatorInstance,
		--

		--Troves
		Trove_BetterAnimate = Trove_BetterAnimate,
		Trove_Animation = Trove_Animation,
		Trove_Tool = Trove_Tool,
		Trove_Debug = Trove_Debug,
		--

		--Signal
		Signal_NewState = NewState and NewState.Event or nil,
		Signal_NewAnimation = NewAnimation and NewAnimation.Event or nil,
		Signal_NewDirection = NewDirection and NewDirection.Event or nil,
		Signal_KeyframeReached = KeyframeReached and KeyframeReached.Event or nil,
		--
		
		Storage = {
			Bindable = {
				NewDirection = NewDirection,
				NewState = NewState,
				NewAnimation = NewAnimation,
				KeyframeReached = KeyframeReached,
			},
		},

		Class_Timer = {
			Max = DeepCustomSettings.Class_MaxTimer,
			Current = {},
		},

	}

	--------------------------------------------------

	local self = setmetatable(MetaData, BetterAnimate) :: Types.BetterAnimate

	if DeepCustomSettings.Enabled_Emotes then
		local Bindable_PlayEmote = DeepCustomSettings.Bindable_PlayEmote
		if Bindable_PlayEmote then
			Bindable_PlayEmote.OnInvoke = function(Emote: string | Animation)
				--print("test0")
				if DeepCustomSettings.Enabled_Emotes then
					--print("test1")
					local Current_AnimationClass = self.Current_AnimationClass
					
					if not DeepCustomSettings.Class_NoEmotes[Current_AnimationClass] then
						
						if typeof(Emote) == "Instance" and Emote:IsA("Animation") then
							self:UpdateAnimations({
								Emote = {
									{Instance = Emote},
								}
							})

							self:PlayAnimation(`Emote`, 0.1)
							self.Current_PlayingEmote = true
							return true
						else
							local FixedString = Utils.FirstUpper(string.lower(Emote))
							local DanceNumber = string.gsub(FixedString, "%D", "")
							
							self.Current_PlayingEmote = true
							if string.find(FixedString, "Dance") then
								local ExistEmote = self.Class_Animations["Dance"]
								local MaxNumber = Utils.GetTableLength(ExistEmote)
								--print(MaxNumber)
								if DanceNumber ~= "" then
									self:PlayAnimation("Dance", 0.1, nil, `Dance{DanceNumber}`)
								else
									self:PlayAnimation("Dance", 0.1, nil, `Dance{math.random(1, MaxNumber)}`)
								end
								return true
							else
								self:PlayAnimation(FixedString, 0.1)
								return true
							end
						end
					else
						print(`[BetterAnimate] Emote blocked by {Current_AnimationClass}`)
					end
				end

				-- Return false to indicate that the emote could not be played
				return false
			end
		else
			warn(`[BetterAnimate] PlayEmote BindableFunction not found`)
		end
	end

	local DefaultAnimations = Utils.DeepCopy(BetterAnimate.DefaultAnimations[HumanoidRigType])

	for Class, AnimationsList in DefaultAnimations do 
		for I, AnimationData in AnimationsList do
			self:AddAnimation(Class, AnimationData, I)
		end
	end

	--------------------------------------------------
	if DeepCustomSettings.Enabled_ClimbFix then
		DeepCustomSettings.Class_SpeedAdjust.Climb = (Humanoid.RigType == Enum.HumanoidRigType.R15 and 6) or 12 -- Fix
	end
	
	if DeepCustomSettings.Debug then
		self:EnableDebug(true)
	end

	return self
end

function Module.GetAvatarAnimationsByUserID(UserID: number): {[string]: {[string]: Types.AnimationData?}?}
	return require(script.GetAvatarAnimationsByUserID)(UserID) or {}
end

return Module]]></ProtectedString>
						<string name="ScriptGuid">{3454CF1A-2F93-4EDD-B13B-20F14444A945}</string>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">BetterAnimate</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010357</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX6527EE76F5C04DB698F467C7240DFA65">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

local Module = {
	[Enum.HumanoidRigType.R6] = {
			Idle = 	{ -- "Random" idle animation
				Idle1 = { ID = "180435571", Weight = 80 },
				Idle2 = { ID = "180435792", Weight = 20 },
			},
			Walk = 		{ Walk1 =		{ ID = "180426354", Weight = 10 } }, 
			Run = 		{ Run1 =		{ ID = "180426354", Weight = 10 } },
			Swim = 		{ Swim1 =		{ ID = "180426354", Weight = 10 } },
			Swimidle = 	{ Swimidle1 =	{ ID = "180426354", Weight = 10 } }, 
			Jump = 		{ Jump1 =		{ ID = "125750702", Weight = 10 } }, 
			Fall = 		{ Fall1 =	 	{ ID = "180436148", Weight = 10 } }, 
			Climb =		{ Climb1 =		{ ID = "180436334", Weight = 10 } }, 
			Sit = 		{ Sit1 =		{ ID = "178130996", Weight = 10 } },	
			Toolnone = 	{ Toolnone1 = 	{ ID = "182393478", Weight = 10 } },
			Wave = 		{ Wave1 =		{ ID = "128777973", Weight = 10 } },
			Point = 	{ Point1 =		{ ID = "128853357", Weight = 10 } },
			Dance = 	{ 
				Dance1 ={ ID = "182435998", Weight = 10 },
				Dance2 ={ ID = "182436842", Weight = 10 },
				Dance3 ={ ID = "182436935", Weight = 10 },
			},
			Laugh = 	{ Laugh1 =		{ ID = "129423131",   Weight = 10 } },
			Cheer = 	{ Cheer1 =		{ ID = "129423030",   Weight = 10 } },
			Temp = 		{ Temp1 =		{ ID = "15609995579", Weight = 1 } }, -- r15 animation for r6
			Emote =     { { } },
	},

	[Enum.HumanoidRigType.R15] = {
			Idle = 	{ -- "Random" idle animation
				Idle1 = { ID = "507766666", Weight = 20 },
				Idle2 = { ID = "507766951", Weight = 20 },
				Idle3 = { ID = "507766388", Weight = 80 }
			},
			Walk = 		{ Walk1 =		{ ID = "507777826",  Weight = 10 } }, 
			Run = 		{ Run1 =		{ ID = "507767714",  Weight = 10 } }, 
			Swim = 		{ Swim1 =		{ ID = "507784897",  Weight = 10 } },
			Swimidle = 	{ Swimidle1 =	{ ID = "507785072",  Weight = 10 } }, 
			Jump = 		{ Jump1 =		{ ID = "507765000",  Weight = 10 } }, 
			Fall = 		{ Fall1 =	 	{ ID = "507767968",  Weight = 10 } }, 
			Climb = 	{ Climb1 =		{ ID = "507765644",  Weight = 10 } }, 
			Sit = 		{ Sit1 =		{ ID = "2506281703", Weight = 10 } },	
			Toolnone = 	{ Toolnone1 = 	{ ID = "507768375",  Weight = 10 } },
			Wave = 		{ Wave1 =		{ ID = "507770239",  Weight = 10 } },
			Point = 	{ Point1 =		{ ID = "507770453",  Weight = 10 } },
			Dance = 	{
				Dance1 ={ ID = "507772104", Weight = 10 },
				Dance2 ={ ID = "507776879", Weight = 10 },
				Dance3 ={ ID = "507777623", Weight = 10 },
			},
			Laugh = 	{ Laugh1 =		{ ID = "507770818", Weight = 10 } },
			Cheer = 	{ Cheer1 =		{ ID = "507770677", Weight = 10 } },
			Temp = 		{ Temp1 =		{ ID = "27789359",  Weight = 1  } }, -- r6 animation for r15
			Emote =     { { } },
	},
}

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{D736386B-1DD0-4C31-B4F8-0226AF0A5009}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DefaultAnimations</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010358</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXC8B725FC2B4C4089BE4A841931BD965C">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Instance_BetterAnimate = ReplicatedStorage.BetterAnimate
local Types = require(Instance_BetterAnimate.Types)

local Module: Types.BetterAnimateSettings = {
	
	ToolAttributeCheck = "NoToolNone",
	ToolTagCheck = "NoToolNone",
	
	Time_DT = 0.04,
	Time_Debug = 0.06,
	Time_Update = 0.07,
	Time_AnimationStop = 0.2,
	Time_FallOnJump = 0.31,
	Time_Fall = 0.1,
	Time_DefaultAnimationTransition = 0.1,
	
	Enabled_ClimbFix = true,
	
	AnimationSpeedMultiplier = 1,

	Class_NoEmotes = {
		Walk = true, 
		Run = true, 
		Swim = true, 
		Swimidle = true, 
		Jump = true, 
		Fall = true, 
		Climb = true, 
		Sit = true,
	},

	Inverse = false,

	InverseOn = {
		BackwardRight = true, 
		BackwardLeft = true, 
		Backward = true,
		Down = true, -- For climb
	},

	Class_Inverse = {
		Walk = true, 
		Run = true, 
		Swim = true,
		Climb = true,
	},
	
	Class_DirectionCFrameAdjust = {
		Swim = CFrame.Angles(math.rad(90), 0, 0),
	},

	Class_SpeedAdjust = {
		Walk = 9,
		Run = 16,
		Climb = 6, -- (Humanoid.RigType == Enum.HumanoidRigType.R15 and 4) or 12, -- R6 and R15 speed must be different (roblox's skill issue)
		Swim = 10,
	},

	--Class_Speed = {
	--	Run = 0,
	--	Climb = 0, 
	--	Swim = 0,
	--},
	
	Class_SwitchIgnore = {
		Jump = true,
	},

	IdleSpeedRange = Vector2.new(-math.huge, 0.4),
	WalkSpeedRange = Vector2.new(0.4, 9),
	RunSpeedRange = Vector2.new(9, math.huge),
	--StopPreviousTime = 0.25,
	
	DefaultAnimationLenght = 5,
	DefaultAnimationWeight = 10,
	
	ToolAnimationPriority = Enum.AnimationPriority.Idle,
	AnimationPriority = Enum.AnimationPriority.Core,
	
	Class_MaxTimer = {
		Idle = 5,
		Walk = 0,
		Run = 0,
		Climb = 0,
		Swim = 0,
		Jump = 0,
		Fall = 0,
		Sit = 0,
	},
	
	PhysicalProperties = PhysicalProperties.new(0.7, 0.5, 1, 0.3, 1), -- Default by roblox

	State_Deffered = {
		--Landed = "Landed",
		Jumping = "Jumping",
	},

	State_Functions = { -- Logic for every state

		Jumping = function(self)
			self:PlayAnimation("Jump", 0.1)
			local Passed = self:FallDelta(self.Settings.Time_FallOnJump)
			--print(1, Passed)
		end,

		Freefall = function(self)
			--if self.Current_AnimationClass ~= "Freefall" then
				local Passed = self:FallDelta(self.Settings.Time_Fall)
				--print(2, Passed)
			--end
		end,

		GettingUp = function(self) 
			self:StopCurrentAnimation()
		end,	

		FallingDown = function(self) 
			self:StopCurrentAnimation()
		end,	

		PlatformStanding = function(self)
			self:StopCurrentAnimation()
		end,

		Running = function(self)
			local Settings = self.Settings
			local Speed = self.MovingSpeed or 0 -- Settings.Class_Speed.Run	

			if Speed >= Settings.IdleSpeedRange.X and Settings.IdleSpeedRange.Y > Speed then
				self:PlayAnimation("Idle", 0.2)
			elseif Speed >= Settings.WalkSpeedRange.X and Settings.WalkSpeedRange.Y > Speed then
				self:PlayAnimation("Walk", 0.2, Speed)
			elseif Speed >= Settings.RunSpeedRange.X and Settings.RunSpeedRange.Y > Speed then
				self:PlayAnimation("Run", 0.2, Speed)
			else
				warn("Over 9000!!!!", Speed) -- Just a meme phrase (that's mean you broke something)
			end
		end,

		Seated = function(self)
			self:PlayAnimation("Sit", 0.3)
		end,

		Dead = function(self)
			task.defer(self.Trove.Destroy, self.Trove, true)
			coroutine.yield()
			--task.wait(999)
		end, --Cleanup on death

		Swimming = function(self)
			local Speed = self.MovingSpeed or 0 -- self.Settings.Class_Speed.Swim
			if Speed > 3 then self:PlayAnimation("Swim", 0.4, Speed) return end
			self:PlayAnimation("Swimidle", 0.4)
		end,

		Climbing = function(self)
			self:PlayAnimation("Climb", 0.2, self.MovingSpeed or 0
				--self.Settings.Class_Speed.Climb
			)
		end,

		None = function(self)
			self:PlayAnimation("Temp")
			--self.ForceState = false
		end,

		Flying = function(self) end,
		Ragdoll = function(self) end,
		Landed = function(self) end,
		RunningNoPhysics = function(self) end,
		StrafingNoPhysics = function(self) end,
		Physics = function(self) end,
	}
}

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{1BFB20E6-5138-4332-B1F9-818B0F9C99B0}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">DefaultSettings</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010359</UniqueId>
						</Properties>
					</Item>
					<Item class="BillboardGui" referent="RBXDF7518FFF04D4A27A4D867893E3517BB">
						<Properties>
							<bool name="Active">true</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">false</bool>
							<float name="Brightness">1</float>
							<bool name="ClipsDescendants">true</bool>
							<float name="DistanceLowerLimit">0</float>
							<float name="DistanceUpperLimit">-1</float>
							<Vector3 name="ExtentsOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="ExtentsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LightInfluence">1</float>
							<float name="MaxDistance">INF</float>
							<Ref name="PlayerToHideFrom">null</Ref>
							<UDim2 name="Size">
								<XS>5</XS>
								<XO>0</XO>
								<YS>3.5</YS>
								<YO>0</YO>
							</UDim2>
							<Vector2 name="SizeOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector3 name="StudsOffset">
								<X>0</X>
								<Y>5.5</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="StudsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<bool name="Enabled">true</bool>
							<bool name="ResetOnSpawn">true</bool>
							<token name="ZIndexBehavior">1</token>
							<bool name="AutoLocalize">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Debug</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">13f7ad21b974d05d076057990001035a</UniqueId>
						</Properties>
						<Item class="Frame" referent="RBXD7CAC606720B4E4A9DB7761DA71607E3">
							<Properties>
								<token name="Style">0</token>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
								<bool name="AutoLocalize">true</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Main</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">13f7ad21b974d05d076057990001035b</UniqueId>
							</Properties>
							<Item class="TextLabel" referent="RBX895B8014EB884257800BED1B70BADBA8">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Tracks: 0</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Total</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">13f7ad21b974d05d076057990001035c</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXAEBA63793595441898D2480D7106C406">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">13f7ad21b974d05d076057990001035d</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="UIGridLayout" referent="RBX2F629E204AC14B03B61E361FA07F9286">
								<Properties>
									<UDim2 name="CellPadding">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<UDim2 name="CellSize">
										<XS>0.333000004</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<int name="FillDirectionMaxCells">0</int>
									<token name="StartCorner">0</token>
									<token name="FillDirection">0</token>
									<token name="HorizontalAlignment">1</token>
									<token name="SortOrder">2</token>
									<token name="VerticalAlignment">1</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UIGridLayout</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">13f7ad21b974d05d076057990001035e</UniqueId>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX37E72F13BBDA4F21AF1E9C3E282FF137">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Class: Idle</string>
									<Color3 name="TextColor3">
										<R>0.984313786</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Class</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">13f7ad21b974d05d076057990001035f</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX05FE94042E6C42808C41A696883B6618">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010360</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX99E7A0ACB81F4113BF1D3073443A7211">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Direction: Forward</string>
									<Color3 name="TextColor3">
										<R>0.0666666701</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Direction</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010361</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX3F1B57A062F04013AA9F320E1A0E3F16">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010362</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX06480F191C71466D889DF09268785487">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Timer: 0.0</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>1</G>
										<B>0.850980461</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">Timer</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010363</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX106958D149BC4259B6441FAFFB1C885E">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010364</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXE1C4496AB3BA401FADE9537BB853BB8D">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">ID: 123456789</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0.384313762</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005b64</UniqueId>
									<string name="Name">ID</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010365</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXA7E037B3EA0744DD80958132735A61F9">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005c65</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010366</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX9CC422075AF940A7811CBAC7795C8794">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Speed: 0</string>
									<Color3 name="TextColor3">
										<R>0.831372619</R>
										<G>0</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cda</UniqueId>
									<string name="Name">Speed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010367</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX79D7C9B0F16848059FE1AAE3C505C55E">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cdb</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010368</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX0F8443DC417B4FAEBD822CC3C82F7BD0">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">State: Test</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cda</UniqueId>
									<string name="Name">State</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010369</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXF33ED06C6FDA4718838B2F5B8478FEFA">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">66cfd867c63ccadf075872ec00005cdb</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">13f7ad21b974d05d076057990001036a</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX645CE9B29CE24914B561BCD743A8FF70">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local DestroyAnything = require(script.DestroyAnything)
local Parent = script.Parent
local Types = require(Parent.Types)

local Trove = {} :: Types.Trove
Trove.__index = Trove

function Trove.New(Name: string?)
	local self = setmetatable({}, Trove)
	self.Objects = {}
	self.Cleaning = false
	self.Name = Name
	self.UniqueID = HttpService:GenerateGUID()
	self.IsTrove = true
	return self
end

function Trove:Extend(Name: string)
	if self.Cleaning then return error("[Trove] is cleaning Extend()") end
	
	return self:Add(Trove.New(self.Name or HttpService:GenerateGUID()))
end

function Trove:InstanceNew(ClassName: string)
	if self.Cleaning then return error("[Trove] is cleaning InstanceNew()") end
	
	return self:Add(Instance.new(ClassName))
end

function Trove:Clone(Inst: Instance)
	if self.Cleaning then return error("[Trove] is cleaning Clone()") end
	
	return self:Add(Inst:Clone())
end

function Trove:Connect(Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?)
	if self.Cleaning then return error("[Trove] is cleaning Connect()") end
	
	return self:Add(Signal:Connect(Function), OnDestroy)
end

function Trove:Once(Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?) -- Connect Once
	if self.Cleaning then return error("[Trove] is cleaning ConnectOnce()") end
	
	local Object, Method
	Object, Method = self:Add(Signal:Once(function() Function() self:Remove(Object, true) end), OnDestroy)
	return Object, Method
end

function Trove:BindToRenderStep(Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)
	if self.Cleaning then return error("[Trove] is cleaning BindToRenderStep()") end
	
	local Index = HttpService:GenerateGUID()
	RunService:BindToRenderStep(Index, Priority, Function)
	return self:Add(Index, OnDestroy, function() RunService:UnbindFromRenderStep(Index) end)
end

function Trove:Add(Object: any, ...: any)
	if self.Cleaning then return error("[Trove] is cleaning Add()") end
	
	local CheckExist = self.Objects[Object]
	if CheckExist then
		return warn(`[Trove] Trying to add existing Object`, Object)
	else
		self.Objects[Object] = {...}
		return Object, function() self:Remove(Object) end
	end
end

function Trove:Remove(Object: any, Destroy: boolean?)
	local ObjectTable = self.Objects[Object]
	if ObjectTable then
		
		if Destroy then
			if type(Object) == "function" then
				Object(table.unpack(ObjectTable))
			else
				DestroyAnything:Destroy(Object)
				
				for _, Arg in ObjectTable do
					if type(Arg) == "function" then
						Arg()
					end
				end
			end
		end
		
		self.Objects[Object] = nil
		return true
	end
	return false, error(`[Trove] Object not found: {Object} {self.Name} {self.UniqueID}`)
end

function Trove:AttachToInstance(Inst: Instance)
	if self.Cleaning then return error("[Trove] is cleaning AttachToInstance()", 2) end
	
	if not Inst or not Inst:IsDescendantOf(game) then
		error(`Instance expected, got {Inst}`, 2)
	else
		return self:Connect(Inst.Destroying, function() self:Destroy() end)
	end
end

function Trove:Clear(Destroy: boolean?)
	for Object, _ in self.Objects do
		self:Remove(Object, Destroy)
	end
end

function Trove:Destroy()
	self:Clear(true)
	
	setmetatable(self, nil)
end

return Trove]]></ProtectedString>
							<string name="ScriptGuid">{2BBB3F0D-DB2A-43E6-A8C1-67379838CB35}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Trove</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">13f7ad21b974d05d076057990001036b</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX6017C8BD44B94B668884B46BD956461B">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[local Module = {}

Module.CleanMethods = {
	["table"] = function(Table: {any})
		
		if not Table.IsTrove then -- Check for Trove
			for I, Thing in Table do
				Module:Destroy(Thing)
			end
		else
			Table:Destroy()
		end
	end,
	
	thread = function(Thread: thread)
		task.cancel(Thread)
	end,
	
	["function"] = function(Function: (any)->(any))
		
	end,
	
	instance = function(Inst: Instance)
		--if Inst then 
			Inst:Destroy()
		--end
	end,
	
	rbxscriptconnection = function(Connect: RBXScriptConnection)
		Connect = Connect.Connected and Connect:Disconnect() or nil
	end,
}

function Module:Destroy(Any: any)
	local TypeOf = string.lower(typeof(Any))
	local Destroy = Module.CleanMethods[TypeOf]
	if Destroy then
		Destroy(Any)
	end
end

return Module
]]></ProtectedString>
								<string name="ScriptGuid">{20C77AE5-4E20-4544-A781-E6B7EE3D9D0B}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">DestroyAnything</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">13f7ad21b974d05d076057990001036c</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX7662431BDA214C5F9B657F4D732B1648">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

local Module = {}

export type Instances = "Accessory" | "Accoutrement" | "Actor" | "AdGui" | "AdPortal" | "AdService" | "AdvancedDragger" | "AirController" | "AlignOrientation" | "AlignPosition" | "AnalysticsSettings" | "AnalyticsService" | "AngularVelocity" | "Animation" | "AnimationClip" | "AnimationClipProvider" | "AnimationConstraint" | "AnimationController" | "AnimationFromVideoCreatorService" | "AnimationFromVideoCreatorStudioService" | "AnimationImportData" | "AnimationRigData" | "AnimationStreamTrack" | "AnimationTrack" | "Animator" | "AppStorageService" | "AppUpdateService" | "ArcHandles" | "AssetCounterService" | "AssetDeliveryProxy" | "AssetImportService" | "AssetImportSession" | "AssetManagerService" | "AssetPatchSettings" | "AssetService" | "AssetSoundEffect" | "Atmosphere" | "Attachment" | "AudioPages" | "AudioSearchParams" | "AvatarChatService" | "AvatarEditorService" | "AvatarImportService" | "Backpack" | "BackpackItem" | "BadgeService" | "BallSocketConstraint" | "BaseImportData" | "BasePart" | "BasePlayerGui" | "BaseScript" | "BaseWrap" | "Beam" | "BevelMesh" | "BillboardGui" | "BinaryStringValue" | "BindableEvent" | "BindableFunction" | "BlockMesh" | "BloomEffect" | "BlurEffect" | "BodyAngularVelocity" | "BodyColors" | "BodyForce" | "BodyGyro" | "BodyMover" | "BodyPosition" | "BodyThrust" | "BodyVelocity" | "Bone" | "BoolValue" | "BoxHandleAdornment" | "Breakpoint" | "BrickColorValue" | "BrowserService" | "BubbleChatConfiguration" | "BubbleChatMessageProperties" | "BulkImportService" | "BuoyancySensor" | "CacheableContentProvider" | "CalloutService" | "Camera" | "CanvasGroup" | "CaptureService" | "CatalogPages" | "CFrameValue" | "ChangeHistoryService" | "ChannelSelectorSoundEffect" | "CharacterAppearance" | "CharacterMesh" | "Chat" | "ChatInputBarConfiguration" | "ChatWindowConfiguration" | "ChorusSoundEffect" | "ClickDetector" | "ClientReplicator" | "ClimbController" | "Clothing" | "CloudLocalizationTable" | "Clouds" | "ClusterPacketCache" | "CollectionService" | "Color3Value" | "ColorCorrectionEffect" | "CommandInstance" | "CommandService" | "CompressorSoundEffect" | "ConeHandleAdornment" | "Configuration" | "ConfigureServerService" | "Constraint" | "ContentProvider" | "ContextActionService" | "Controller" | "ControllerBase" | "ControllerManager" | "ControllerPartSensor" | "ControllerSensor" | "ControllerService" | "CookiesService" | "CoreGui" | "CorePackages" | "CoreScript" | "CoreScriptDebuggingManagerHelper" | "CoreScriptSyncService" | "CornerWedgePart" | "CrossDMScriptChangeListener" | "CSGDictionaryService" | "CurveAnimation" | "CustomEvent" | "CustomEventReceiver" | "CustomSoundEffect" | "CylinderHandleAdornment" | "CylinderMesh" | "CylindricalConstraint" | "DataModel" | "DataModelMesh" | "DataModelPatchService" | "DataModelSession" | "DataStore" | "DataStoreIncrementOptions" | "DataStoreInfo" | "DataStoreKey" | "DataStoreKeyInfo" | "DataStoreKeyPages" | "DataStoreListingPages" | "DataStoreObjectVersionInfo" | "DataStoreOptions" | "DataStorePages" | "DataStoreService" | "DataStoreSetOptions" | "DataStoreVersionPages" | "Debris" | "DebuggablePluginWatcher" | "DebuggerBreakpoint" | "DebuggerConnection" | "DebuggerConnectionManager" | "DebuggerLuaResponse" | "DebuggerManager" | "DebuggerUIService" | "DebuggerVariable" | "DebuggerWatch" | "DebugSettings" | "Decal" | "DepthOfFieldEffect" | "DeviceIdService" | "Dialog" | "DialogChoice" | "DistortionSoundEffect" | "DockWidgetPluginGui" | "DoubleConstrainedValue" | "DraftsService" | "DragDetector" | "Dragger" | "DraggerService" | "DynamicMesh" | "DynamicRotate" | "EchoSoundEffect" | "EmotesPages" | "EqualizerSoundEffect" | "EulerRotationCurve" | "EventIngestService" | "ExperienceAuthService" | "ExperienceInviteOptions" | "Explosion" | "FaceAnimatorService" | "FaceControls" | "FaceInstance" | "FacialAnimationRecordingService" | "FacialAnimationStreamingServiceStats" | "FacialAnimationStreamingServiceV2" | "FacialAnimationStreamingSubsessionStats" | "FacsImportData" | "Feature" | "File" | "FileMesh" | "Fire" | "Flag" | "FlagStand" | "FlagStandService" | "FlangeSoundEffect" | "FloatCurve" | "FloorWire" | "FlyweightService" | "Folder" | "ForceField" | "FormFactorPart" | "Frame" | "FriendPages" | "FriendService" | "FunctionalTest" | "GamepadService" | "GamePassService" | "GameSettings" | "GenericSettings" | "Geometry" | "GeometryService" | "GetTextBoundsParams" | "GlobalDataStore" | "GlobalSettings" | "Glue" | "GoogleAnalyticsConfiguration" | "GroundController" | "GroupImportData" | "GroupService" | "GuiBase" | "GuiBase2d" | "GuiBase3d" | "GuiButton" | "GuidRegistryService" | "GuiLabel" | "GuiMain" | "GuiObject" | "GuiService" | "HandleAdornment" | "Handles" | "HandlesBase" | "HapticService" | "Hat" | "HeightmapImporterService" | "HiddenSurfaceRemovalAsset" | "Highlight" | "HingeConstraint" | "Hint" | "Hole" | "Hopper" | "HopperBin" | "HSRDataContentProvider" | "HttpRbxApiService" | "HttpRequest" | "HttpService" | "Humanoid" | "HumanoidController" | "HumanoidDescription" | "IKControl" | "ILegacyStudioBridge" | "ImageButton" | "ImageDataExperimental" | "ImageHandleAdornment" | "ImageLabel" | "IncrementalPatchBuilder" | "InputObject" | "InsertService" | "Instance" | "InstanceAdornment" | "IntConstrainedValue" | "IntersectOperation" | "IntValue" | "InventoryPages" | "IXPService" | "JointImportData" | "JointInstance" | "JointsService" | "KeyboardService" | "Keyframe" | "KeyframeMarker" | "KeyframeSequence" | "KeyframeSequenceProvider" | "LanguageService" | "LayerCollector" | "LegacyStudioBridge" | "Light" | "Lighting" | "LinearVelocity" | "LineForce" | "LineHandleAdornment" | "LiveScriptingService" | "LocalDebuggerConnection" | "LocalizationService" | "LocalizationTable" | "LocalScript" | "LocalStorageService" | "LodDataEntity" | "LodDataService" | "LoginService" | "LogService" | "LSPFileSyncService" | "LuaSettings" | "LuaSourceContainer" | "LuauScriptAnalyzerService" | "LuaWebService" | "ManualGlue" | "ManualSurfaceJointInstance" | "ManualWeld" | "MarkerCurve" | "MarketplaceService" | "MaterialGenerationService" | "MaterialGenerationSession" | "MaterialImportData" | "MaterialService" | "MaterialVariant" | "MemoryStoreQueue" | "MemoryStoreService" | "MemoryStoreSortedMap" | "MemStorageConnection" | "MemStorageService" | "MeshContentProvider" | "MeshDataExperimental" | "MeshImportData" | "MeshPart" | "Message" | "MessageBusConnection" | "MessageBusService" | "MessagingService" | "MetaBreakpoint" | "MetaBreakpointContext" | "MetaBreakpointManager" | "Model" | "ModuleScript" | "Motor" | "Motor6D" | "MotorFeature" | "Mouse" | "MouseService" | "MultipleDocumentInterfaceInstance" | "NegateOperation" | "NetworkClient" | "NetworkMarker" | "NetworkPeer" | "NetworkReplicator" | "NetworkServer" | "NetworkSettings" | "NoCollisionConstraint" | "NonReplicatedCSGDictionaryService" | "NotificationService" | "NumberPose" | "NumberValue" | "ObjectValue" | "OmniRecommendationsService" | "OpenCloudService" | "OrderedDataStore" | "OutfitPages" | "PackageLink" | "PackageService" | "PackageUIService" | "Pages" | "Pants" | "ParabolaAdornment" | "Part" | "PartAdornment" | "ParticleEmitter" | "PartOperation" | "PartOperationAsset" | "PatchBundlerFileWatch" | "PatchMapping" | "Path" | "PathfindingLink" | "PathfindingModifier" | "PathfindingService" | "PausedState" | "PausedStateBreakpoint" | "PausedStateException" | "PermissionsService" | "PhysicsService" | "PhysicsSettings" | "PitchShiftSoundEffect" | "Plane" | "PlaneConstraint" | "Platform" | "Player" | "PlayerEmulatorService" | "PlayerGui" | "PlayerMouse" | "Players" | "PlayerScripts" | "Plugin" | "PluginAction" | "PluginDebugService" | "PluginDragEvent" | "PluginGui" | "PluginGuiService" | "PluginManagementService" | "PluginManager" | "PluginManagerInterface" | "PluginMenu" | "PluginMouse" | "PluginPolicyService" | "PluginToolbar" | "PluginToolbarButton" | "PointLight" | "PointsService" | "PolicyService" | "Pose" | "PoseBase" | "PostEffect" | "PrismaticConstraint" | "ProcessInstancePhysicsService" | "ProximityPrompt" | "ProximityPromptService" | "PublishService" | "PVAdornment" | "PVInstance" | "QWidgetPluginGui" | "RayValue" | "RbxAnalyticsService" | "ReflectionMetadata" | "ReflectionMetadataCallbacks" | "ReflectionMetadataClass" | "ReflectionMetadataClasses" | "ReflectionMetadataEnum" | "ReflectionMetadataEnumItem" | "ReflectionMetadataEnums" | "ReflectionMetadataEvents" | "ReflectionMetadataFunctions" | "ReflectionMetadataItem" | "ReflectionMetadataMember" | "ReflectionMetadataProperties" | "ReflectionMetadataYieldFunctions" | "RemoteCursorService" | "RemoteDebuggerServer" | "RemoteEvent" | "RemoteFunction" | "RenderingTest" | "RenderSettings" | "ReplicatedFirst" | "ReplicatedStorage" | "ReverbSoundEffect" | "RigidConstraint" | "RobloxPluginGuiService" | "RobloxReplicatedStorage" | "RocketPropulsion" | "RodConstraint" | "RomarkService" | "RootImportData" | "RopeConstraint" | "Rotate" | "RotateP" | "RotateV" | "RotationCurve" | "RtMessagingService" | "RunningAverageItemDouble" | "RunningAverageItemInt" | "RunningAverageTimeIntervalItem" | "RunService" | "RuntimeScriptService" | "SafetyService" | "ScreenGui" | "ScreenshotHud" | "Script" | "ScriptBuilder" | "ScriptChangeService" | "ScriptCloneWatcher" | "ScriptCloneWatcherHelper" | "ScriptCommitService" | "ScriptContext" | "ScriptDebugger" | "ScriptDocument" | "ScriptEditorService" | "ScriptRegistrationService" | "ScriptRuntime" | "ScriptService" | "ScrollingFrame" | "Seat" | "Selection" | "SelectionBox" | "SelectionHighlightManager" | "SelectionLasso" | "SelectionPartLasso" | "SelectionPointLasso" | "SelectionSphere" | "SensorBase" | "ServerReplicator" | "ServerScriptService" | "ServerStorage" | "ServiceProvider" | "ServiceVisibilityService" | "SessionService" | "SharedTableRegistry" | "Shirt" | "ShirtGraphic" | "ShorelineUpgraderService" | "SkateboardController" | "SkateboardPlatform" | "Skin" | "Sky" | "SlidingBallConstraint" | "Smoke" | "SmoothVoxelsUpgraderService" | "Snap" | "SnippetService" | "SocialService" | "SolidModelContentProvider" | "Sound" | "SoundEffect" | "SoundGroup" | "SoundService" | "Sparkles" | "SpawnerService" | "SpawnLocation" | "SpecialMesh" | "SphereHandleAdornment" | "SpotLight" | "SpringConstraint" | "StackFrame" | "StandalonePluginScripts" | "StandardPages" | "StarterCharacterScripts" | "StarterGear" | "StarterGui" | "StarterPack" | "StarterPlayer" | "StarterPlayerScripts" | "Stats" | "StatsItem" | "Status" | "StringValue" | "Studio" | "StudioAssetService" | "StudioData" | "StudioDeviceEmulatorService" | "StudioPublishService" | "StudioScriptDebugEventListener" | "StudioSdkService" | "StudioService" | "StudioTheme" | "StyleBase" | "StyleDerive" | "StyleLink" | "StyleRule" | "StyleSheet" | "StylingService" | "SunRaysEffect" | "SurfaceAppearance" | "SurfaceGui" | "SurfaceGuiBase" | "SurfaceLight" | "SurfaceSelection" | "SwimController" | "SyncScriptBuilder" | "TaskScheduler" | "Team" | "TeamCreateData" | "TeamCreatePublishService" | "TeamCreateService" | "Teams" | "TeleportAsyncResult" | "TeleportOptions" | "TeleportService" | "TemporaryCageMeshProvider" | "TemporaryScriptService" | "Terrain" | "TerrainDetail" | "TerrainRegion" | "TestService" | "TextBox" | "TextBoxService" | "TextButton" | "TextChannel" | "TextChatCommand" | "TextChatConfigurations" | "TextChatMessage" | "TextChatMessageProperties" | "TextChatService" | "TextFilterResult" | "TextFilterTranslatedResult" | "TextLabel" | "TextService" | "TextSource" | "Texture" | "TextureGuiExperimental" | "ThirdPartyUserService" | "ThreadState" | "TimerService" | "ToastNotificationService" | "Tool" | "Torque" | "TorsionSpringConstraint" | "TotalCountTimeIntervalItem" | "TouchInputService" | "TouchTransmitter" | "TracerService" | "TrackerLodController" | "TrackerStreamAnimation" | "Trail" | "Translator" | "TremoloSoundEffect" | "TriangleMeshPart" | "TrussPart" | "TutorialService" | "Tween" | "TweenBase" | "TweenService" | "UGCAvatarService" | "UGCValidationService" | "UIAspectRatioConstraint" | "UIBase" | "UIComponent" | "UIConstraint" | "UICorner" | "UIGradient" | "UIGridLayout" | "UIGridStyleLayout" | "UILayout" | "UIListLayout" | "UIPadding" | "UIPageLayout" | "UIScale" | "UISizeConstraint" | "UIStroke" | "UITableLayout" | "UITextSizeConstraint" | "UnionOperation" | "UniversalConstraint" | "UnvalidatedAssetService" | "UserGameSettings" | "UserInputService" | "UserService" | "UserSettings" | "UserStorageService" | "ValueBase" | "Vector3Curve" | "Vector3Value" | "VectorForce" | "VehicleController" | "VehicleSeat" | "VelocityMotor" | "VersionControlService" | "VideoCaptureService" | "VideoFrame" | "ViewportFrame" | "VirtualInputManager" | "VirtualUser" | "VisibilityCheckDispatcher" | "VisibilityService" | "Visit" | "VoiceChatInternal" | "VoiceChatService" | "VRService" | "WedgePart" | "Weld" | "WeldConstraint" | "WireframeHandleAdornment" | "Workspace" | "WorldModel" | "WorldRoot" | "WrapLayer" | "WrapTarget"

--Trove
export type Trove = {

	New: (Name: string)-> Trove & {
		Objects: {[any]: {any?}},

		Cleaning: boolean,
		Name: string, -- Name of the Trove
		UniqueID: string, -- UniqueID of Trove
		IsTrove: boolean, -- Check if this a Trove
	},
	Extend: (self: Trove, Name: string)-> Trove,
	InstanceNew: (self: Trove, ClassName: Instances)-> (Instance, ()->()),
	Clone: (self: Trove, Inst: Instance)-> (Instance, ()->()),
	Connect: (self: Trove, Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	Once: (self: Trove, Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	BindToRenderStep: (self: Trove, Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)-> (string, ()->()),
	Add: (self: Trove, Object: any, any)-> (any, ()->()),
	Remove: (self: Trove, Object: any, Destroy: boolean?)-> boolean,
	AttachToInstance: (self: Trove, Inst: Instance)-> RBXScriptConnection,
	Clear:(self: Trove, Destroy: boolean?)-> (),
	Destroy: (self: Trove)-> (), -- Destroy == Clear

	__index: Trove,
}

 --Animator
 
export type Directions = "ForwardRight" | "ForwardLeft" | "BackwardRight" | "BackwardLeft" | "Right" | "Left" | "Backward" | "Forward" | "Up" | "Down" | "None"

export type AnimationClasses = "Walk" | "Run" | "Swim" | "Swimidle" | "Jump" | "Fall" | "Climb" | "Sit" | "Idle" | "Emote" | "Dance" | "Cheer" | "Point" | "Laugh" | "Wave"

export type AnimationData = {
	ID: number | string?,
	Instance: Animation?, -- You can give Animation Instance instead of ID
	Weight: number?,
	Index: string?,
}

export type BetterAnimateSettings = {
	
	--Time
	Time_DT: number?, -- Min value to add (Passed += task.wait(Time_DT))
	Time_Update: number?, -- How fast animation will update
	Time_FallOnJump: number?,
	Time_Fall: number?,
	Time_AnimationStop: number?,
	Time_DefaultAnimationTransition: number?,
	
	Time_Debug: number?, -- How fast it will update
	--
	
	--Features
	Enabled_Inverse: boolean?, -- Inverse animations on walk, run and swim when moving backwards (hard to explain how it works) (Default = false)
	Enabled_Emotes: boolean?, -- Default = false
	Enabled_ClimbFix: boolean?,
	
	Enabled_Signal_NewDirection: boolean?, -- Create Bindable for NewDirection event (Default = false)
	Enabled_Signal_NewState: boolean?, -- Create Bindable for NewState event (Default = false)
	Enabled_Signal_KeyframeReached: boolean?, -- Create Bindable for KeyframeReached event (Default = false)
	Enabled_Signal_NewAnimation: boolean?, -- Create Bindable for KeyframeReached event (Default = false)
	
	--Bindable 
	Bindable_PlayEmote: BindableFunction?, -- Using when Enabled_Emotes is true (Roblox's bindable)
	--
	
	--Class
	Class_SwitchIgnore: {
		[string]: boolean?,
		Jump: boolean?,
		--[AnimationClasses]: number?
	}?,
	
	Class_NoEmotes: {
		[string]: boolean?,
		--[AnimationClasses]: boolean?
	}?,
	
	Class_Inverse: { -- Classes that support Inverse feature
		[string]: boolean?,
		--[AnimationClasses]: boolean?
	}?,
	
	Class_DirectionCFrameAdjust: { -- Used to fix swimming direction (HumanoidRootPart problem)
		[string]: CFrame?,
		--[AnimationClasses]: CFrame?
	}?,
	
	Class_SpeedAdjust: { -- Used to adjust animation speed
		[string]: number?,
		--[AnimationClasses]: number?
	}?,
	
	Class_MaxTimer: {
		[string]: number | NumberRange?,
		--[AnimationClasses]: number | NumberRange?,
	}?,
	--
	
	--State
	State_Deffered: { -- Will play on trigger
		--Landed: "Landed"?,
		Jumping: "Jumping"?,
		[string]: string?,  -- If you want to add your own
	}?,
	
	State_Functions: {
		[string]: (BetterAnimate)-> ()?,
	}?,
	
	--Animation
	DefaultAnimationLenght: number?, -- If lenght of animation == 0 it will return DefaultAnimationLenght (Default = 5)
	DefaultAnimationWeight: number?, -- Weight = AnimationTable.Weight or DefaultAnimationWeight
	AnimationPriority:  Enum.AnimationPriority?, -- Self explaing
	--
	
	--Tool
	ToolAttributeCheck: string?, -- Default = "NoToolNone"
	ToolTagCheck: string?,  -- Default = "NoToolNone"
	ToolAnimationPriority: Enum.AnimationPriority?, -- Self explaing
	--
	
	--Other
	Debug: boolean?,
	AnimationSpeedMultiplier: number?, -- How AnimationSpeed * AnimationSpeedMultiplier (Default = 1)
	PhysicalProperties: PhysicalProperties?, -- Default = PhysicalProperties.new(0.7, 0.5, 1, 0.3, 1)
	
	InverseOn: { -- When Inserse applies
		BackwardRight: boolean?, 
		BackwardLeft: boolean?, 
		Backward: boolean?,
		[Directions]: boolean?,
	}?,
	
	IdleSpeedRange: Vector2?, -- Default = Vector2.new(-math.huge, 0.4)
	WalkSpeedRange: Vector2?, -- Default = Vector2.new(0.4, 9)
	RunSpeedRange: Vector2?, -- Default = Vector2.new(9, math.huge)
	--
}

export type BetterAnimate = {
	--Settings
	Settings: BetterAnimateSettings, -- Your settings
	DefaultSettings: BetterAnimateSettings, -- Default settings (will fill your custom settings)
	--
	
	--Animations information
	Class_Animations: { [AnimationClasses]: { [any]: AnimationData} }, -- All animations that loaded
	DefaultAnimations: { [Enum.HumanoidRigType]: { [string]: { [any]: AnimationData } } } , -- Default animations
	--
	
	--State
	Current_State: string, -- State (Running, Falling, etc...)
	State_Forced: string, -- Forcing state to play (Fall, Landed, etc)
	--
	
	--Character information
	Character: Model, -- Your Character
	Humanoid: Humanoid, -- Your Humanoid
	HumanoidRigType: Enum.HumanoidRigType, -- Your HumanoidRigType
	PrimaryPart: BasePart, -- Your PrimaryPart (HumanoidRootPart)
	Animator: Animator | Humanoid, -- Your Animator
	MovingSpeed: number, -- Speed of character
	MovingDirection: Directions,
	Current_PlayingEmote: boolean, -- Is character using emotes
	--
	
	--Bindable signal created by BetterAnimate
	Signal_NewDirection: RBXScriptSignal,--?, -- 
	Signal_NewState: RBXScriptSignal,--?, --
	Signal_NewAnimation: RBXScriptSignal,--?, --
	Signal_KeyframeReached: RBXScriptSignal,--?, --
	--
	
	--Class animation information
	Current_AnimationInstance: Animation, -- Instance
	Current_AnimationTrack: AnimationTrack, -- AnimationTrack
	Current_AnimationClass: string, -- (Run, Walk, Idle, etc,,,)
	Current_AnimationName: string, -- Name of Animation instance
	Current_AnimationSpeed: number, -- Speed * Adjust * Inverse
	
	Class_Timer: {
		Current: { [AnimationClasses]: number | NumberRange?,},
		Max: { [AnimationClasses]: number | NumberRange?,},
	},
	--
	
	--Tool animation information
	ToolAnimationInstance: Animation,
	ToolAnimationTrack: AnimationTrack,
	--
	
	--Troves
	Trove_BetterAnimate: Trove,
	Trove_Animation: Trove,
	Trove_Tool: Trove,
	Trove_Debug: Trove,
	--
	
	-- Storage for BetterAniamte
	Storage: {
		Bindable: {
			NewDirection: BindableEvent,
			NewState: BindableEvent,
			NewAnimation: BindableEvent,
			KeyframeReached: BindableEvent,
		},
	},

	--Other (Outside Animator)

	Start: (self: BetterAnimate)-> (),
	Destroy: (self: BetterAnimate)-> (),
	EnableDebug: (self: BetterAnimate, Enable: boolean)-> (),
	StopPlayingAnimations: (self: BetterAnimate)-> (),
	UpdateAnimations: (self: BetterAnimate, NewAnimationsTable: { [string]: { [any]: AnimationData} }, ResetClass: boolean?)-> (),
	ForceState: (self: BetterAnimate, State: string)-> (),
	--

	--Main
	RollAnimation: (self: BetterAnimate, AnimationClass: string, ForceIndex: string?)-> (),
	SwitchAnimation: (self: BetterAnimate, AnimationTrack: AnimationTrack, TransitionTime: number)-> number,
	Direction: (self: BetterAnimate, MoveVector: Vector3)-> (),
	GetInverse: (self: BetterAnimate)-> number,
	AnimationUpdater: (self: BetterAnimate)-> (),
	StopCurrentAnimation: (self: BetterAnimate)-> (),
	GetHeightScale: (self: BetterAnimate)-> number,
	GetMoveDirection: (self: BetterAnimate)-> Vector3,
	--

	--Class
	AnimationEvent: (self: BetterAnimate, AnimationClass: string, AnimationTable: AnimationData, Keyframe: string?)-> (),
	PlayAnimation: (self: BetterAnimate, AnimationClass: string, TransitionTime: number?, Speed: number?, Index: string?)-> number,
	AddAnimation: (self: BetterAnimate, AnimationClass: string, AnimationTable: AnimationData, Index: any?)-> (),
	FallDelta: (self: BetterAnimate, FallDelay: number)-> (),
	--

	--Tool
	ToolAnimationEnded: (self: BetterAnimate, ToolAnimation: Animation)-> (),
	PlayToolAnimation: (self: BetterAnimate, ToolAnimation: Animation?, TransitionTime: number?)-> (),
	StopToolAnimations: (self: BetterAnimate)-> (),

	ChildRemoved: (self: BetterAnimate, Child: Instance)-> (),
	ChildAdded: (self: BetterAnimate, Child: Instance)-> (),
	FixCenter: (self: BetterAnimate)-> (),
	--

	__index: BetterAnimate
}

return Module]]></ProtectedString>
							<string name="ScriptGuid">{C4C66EC1-1E56-46E2-B7D7-D3DD72F6C09B}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Types</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">13f7ad21b974d05d076057990001036d</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXB4E7B54C2C2E4A5799D331624F75C515">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[local Module = {}

function Module.GetTableLength(Table: {[any]: any}): number
	local Number = 0
	for _, _ in Table do
		Number += 1
	end
	return Number
end

function Module.Vector3Round(Vector: Vector3): Vector3
	return Vector3.new(math.round(Vector.X), math.round(Vector.Y), math.round(Vector.Z))
end

function Module.MaxDecimal(Number, Decimal) return math.round(Number * 10 ^ Decimal) / (10 ^ Decimal) end

function Module.WaitForChildWhichIsA(Where: Instance, What: string, Recursive: boolean?, Timer: number?): Instance?
	if not Where or type(What) ~= "string" then
		return warn(`WaitForChildWhichIsA got incorrect data. Where: {Where} = {typeof(Where)}, What: {What} = {typeof(What)}`)
	else
		Timer = type(Timer) == "number" and Timer or 7
		local TimePassed = 0
		local Found = nil
		repeat
			Found = Where:FindFirstChildWhichIsA(What, Recursive)
			TimePassed += task.wait() 
		until Found or TimePassed >= Timer
		return Found
	end
end

function Module.DeepCopy(Table: {[any?]: any?}): {[any?]: any?}
	local Copy = {}
	for I, Value in Table do
		if type(Value) == "table" then
			Value = Module.DeepCopy(Value)
		end
		Copy[I] = Value
	end
	return Copy
end

function Module.FirstUpper(String: string): string
	return string.gsub(String, "^%l", function(Letter) return string.upper(Letter) end)
end

function Module.GetAnimationTrackLength(AnimationTrack: AnimationTrack, Default: number?): number?
	local NotAZero = AnimationTrack and AnimationTrack.Length > 0
	return NotAZero and AnimationTrack.Length or Default or nil
end

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{2AD23975-02A5-4E41-8EEE-7A419827BB35}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">Utils</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">13f7ad21b974d05d076057990001036e</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXD9789F51BF894867B1B56A6BD20F8957">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[local RunService = game:GetService("RunService")
local InsertService = game:GetService("InsertService")
local Players = game:GetService("Players")

local Utils = require(script.Parent.Utils)

local Instance_GetAvatarAnimationsByUserID = script
local Get = Instance_GetAvatarAnimationsByUserID.Get
local Nothing = {}

function GetAnimationClearly(ID: number)
	if not ID or ID == 0 then return Nothing end

	local Found = {}
	local AnimationModel = InsertService:LoadAsset(ID)
	local AnimationFolder = AnimationModel:FindFirstChildWhichIsA("Folder")

	for _, StringValue in AnimationFolder:GetChildren() :: {StringValue} do -- {StringValue}
		local ClassAnimationTable = {}
		Found[Utils.FirstUpper(StringValue.Name)] = ClassAnimationTable
		for _, FoundAnimation in StringValue:GetChildren() :: {Animation} do
			local WeightInstance = FoundAnimation:FindFirstChildWhichIsA("ValueBase")
			local Weight = WeightInstance and WeightInstance.Value or nil
			
			ClassAnimationTable[FoundAnimation.Name] = {
				ID = FoundAnimation.AnimationId,
				Weight = Weight,
				Index = FoundAnimation.Name,
			}
		end
	end
	AnimationModel:Destroy()
	return Found
end

function GetAnimationsByUserID(UserID: number)
	local Success, Result = pcall(function()
		local HumanoidDescription = Players:GetHumanoidDescriptionFromUserId(UserID)
		local ToGet = {
			HumanoidDescription.RunAnimation,
			HumanoidDescription.FallAnimation,
			HumanoidDescription.IdleAnimation,
			HumanoidDescription.JumpAnimation,
			HumanoidDescription.SwimAnimation,
			HumanoidDescription.WalkAnimation,
			HumanoidDescription.ClimbAnimation,
		}

		local Animations = {}

		for _, ID in ToGet do
			for I, Table in GetAnimationClearly(ID) do
				Animations[I] = Table
			end
		end

		return Animations
	end)

	if Success then
		return Result
	else
		warn(`[BetterAnimate] GetAvatarAnimationsByUserID`, Result)
		return Nothing
	end
end

if RunService:IsServer() then
	Get.OnServerInvoke = function(Player: Player, UserID: number)
		return GetAnimationsByUserID(UserID)
	end
end

return function(UserID: number)
	if RunService:IsClient() then
		return Get:InvokeServer(UserID)
	else
		return GetAnimationsByUserID(UserID)
	end
end
]]></ProtectedString>
							<string name="ScriptGuid">{8FEBD9D6-2991-443B-A5AE-136FFBFE0FDB}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">GetAvatarAnimationsByUserID</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">13f7ad21b974d05d076057990001036f</UniqueId>
						</Properties>
						<Item class="RemoteFunction" referent="RBX9BFD6CAA03364F65AA6191B164F1E39C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Get</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010370</UniqueId>
							</Properties>
						</Item>
						<Item class="Script" referent="RBXAE4EB95FD33A4EC284CE38BE76C27307">
							<Properties>
								<ProtectedString name="Source"><![CDATA[require(script.Parent)
script:Destroy()]]></ProtectedString>
								<bool name="Disabled">false</bool>
								<Content name="LinkedSource"><null></null></Content>
								<token name="RunContext">1</token>
								<string name="ScriptGuid">{5F13FD6B-8F27-4BE3-8E17-B50F3F65B543}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">ServerSide</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">13f7ad21b974d05d0760579900010371</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX50AB7CDF1BEE448184F998E85E3284DD">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
					<string name="Name">1.3</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d67</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX5FA479620BAE4C3F95A1422D9D65B052">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<ProtectedString name="Source"><![CDATA[--[[
	Made by NOTEKAMI
	https://devforum.roblox.com/t/2871306	
	Version 1.3
	2025
]]

--Types
local Types = require(script:WaitForChild(`BetterAnimate_Types`))
--

--Helpers
local Helpers_Folder = script:WaitForChild(`BetterAnimate_Helpers`)

local Trove = (require(Helpers_Folder:WaitForChild(`Trove`)) :: Types.Trove):Extend() -- Creating Trove for BetterAnimate
local Destroyer = require(Helpers_Folder:WaitForChild(`Destroyer`))
local Utils = require(Helpers_Folder:WaitForChild(`Utils`))
local Services = require(Helpers_Folder:WaitForChild(`Services`))
local Unlim_Bindable = require(Helpers_Folder:WaitForChild(`Unlim_Bindable`))
--

--Settings
local DefaultSettings = require(script:WaitForChild(`BetterAnimate_DefaultSettings`))
local RNG = Random.new(os.clock())
--

local AnimationDataMeta = {}

local function GetMoveDirectionName(MoveDirection: Vector3): Types.BetterAnimate_Directions
	return (MoveDirection.Z < 0 and MoveDirection.X > 0 and `ForwardRight`)
		or (MoveDirection.Z < 0 and MoveDirection.X < 0 and `ForwardLeft`)
		or (MoveDirection.Z < 0 and MoveDirection.X == 0 and `Forward`)
		or (MoveDirection.Z > 0 and MoveDirection.X == 0 and `Backward`)
		or (MoveDirection.Z > 0 and MoveDirection.X > 0 and `BackwardRight`)
		or (MoveDirection.Z > 0 and MoveDirection.X < 0 and `BackwardLeft`)
		or (MoveDirection.Z == 0 and MoveDirection.X > 0 and `Right`)
		or (MoveDirection.Z == 0 and MoveDirection.X < 0 and `Left`)
		or (MoveDirection.Y > 0 and `Up`)
		or (MoveDirection.Y < 0 and `Down`)
		or `None`
end

local function GetTime(Time: number | NumberRange): number
	return typeof(Time) == "NumberRange" and RNG:NextNumber(Time.Min, Time.Max) or Time
end

local function GetAnimationData(AnimationData: Types.BetterAnimate_AnimationData | number | string | Instance, DefaultWeight: number?): Types.BetterAnimate_AnimationData
	local Type = typeof(AnimationData)
	DefaultWeight = DefaultWeight or 1
	
	if Type == `table` then
		if getmetatable(AnimationData :: any) ~= AnimationDataMeta then
			local AnimationData = setmetatable(Utils.DeepCopy(AnimationData) :: Types.BetterAnimate_AnimationData, AnimationDataMeta)
			local AnimationLink = `rbxassetid://{string.gsub(`{AnimationData.ID or (AnimationData.Instance and AnimationData.Instance.AnimationId) or ``}`, "%D", "")}`
			local Animation = Instance.new(`Animation`)
			Animation.AnimationId = AnimationLink
			AnimationData.ID = AnimationLink
			AnimationData.Weight = AnimationData.Weight or DefaultWeight
			AnimationData.Instance = Animation
			return AnimationData
		else
			return AnimationData :: Types.BetterAnimate_AnimationData
		end
		
	elseif Type == `number` then
		local AnimationLink = `rbxassetid://{AnimationData :: number}`
		local AnimationData = {} :: Types.BetterAnimate_AnimationData
		local Animation = Instance.new(`Animation`)
		Animation.AnimationId = AnimationLink
		AnimationData.ID = AnimationLink
		AnimationData.Weight = DefaultWeight
		AnimationData.Instance = Animation
		return AnimationData
		
	elseif Type == `string` then
		local AnimationLink = `rbxassetid://{string.gsub(`{AnimationData :: string}`, "%D", "")}`
		local AnimationData = {}
		local Animation = Instance.new(`Animation`)
		Animation.AnimationId = AnimationLink
		AnimationData.ID = AnimationLink
		AnimationData.Weight = DefaultWeight
		AnimationData.Instance = Animation
		return AnimationData
		
	elseif Type == `Instance` and (AnimationData :: Instance):IsA(`Animation`) then
		local AnimationLink = `rbxassetid://{string.gsub(`{(AnimationData :: Animation).AnimationId}`, "%D", "")}`
		local AnimationData = {}
		local Animation = Instance.new(`Animation`)
		Animation.AnimationId = AnimationLink
		AnimationData.ID = AnimationLink
		AnimationData.Weight = DefaultWeight
		AnimationData.Instance = Animation
		return AnimationData
		
	else
		error(`[{script}] table or number or string or Instance expected, got {Type}`)
	end
end

local function FixCenterOfMass(_PhysicalProperties: PhysicalProperties, Part: BasePart)
	Part.CustomPhysicalProperties = PhysicalProperties.new(
		_PhysicalProperties.Density - 0.01,
		_PhysicalProperties.Friction,
		_PhysicalProperties.Elasticity,
		_PhysicalProperties.FrictionWeight,
		_PhysicalProperties.ElasticityWeight
	)

	task.wait() -- Don't work without it

	Part.CustomPhysicalProperties = _PhysicalProperties
end

local BetterAnimate = {} :: Types.BetterAnimate
BetterAnimate.__index = BetterAnimate

do assert([[PUBLIC METHODS]])
	
	do assert([[GET METHODS]])
		
		function BetterAnimate:GetMoveDirection()
			local PrimaryPart = self._PrimaryPart
			local PrimaryPartCFrame = PrimaryPart.CFrame * (self._Class.DirectionAdjust[self._Class.Current] or CFrame.identity)
			return Utils.Vector3Round(PrimaryPartCFrame:VectorToObjectSpace(PrimaryPart.AssemblyLinearVelocity.Unit)) * math.sign(self._Speed)
		end

		function BetterAnimate:GetInverse() -- Наверное стоит запихнуть в Step GetMoveDirection и получать уже потом из self
			local MoveDirection = self:GetMoveDirection()
			local MoveDirectionName = GetMoveDirectionName(MoveDirection)
			--local Vector3_Direction = self:GetMoveDirection()
			--local Direction = self:Direction(Vector3_Direction)
			if self._MoveDirection ~= MoveDirection and self._Events_Enabled["NewMoveDirection"] then
				local Event = self.Events["NewMoveDirection"]
				Event:Fires(MoveDirection, MoveDirectionName)
			end
			
			self._MoveDirection = MoveDirection

			return self._Inverse.Enabled 
				and self._Inverse.Directions[MoveDirectionName] 
				and self._Class.Inverse[self._Class.Current] 
				and -1 
				or 1
		end

		function BetterAnimate:GetRandomAnimation(Class: Types.BetterAnimate_AnimationClasses): (Types.BetterAnimate_AnimationData, any)
			local ClassAnimations = self._Class.Animations[Class]
			local TotalWeight = 0
			
			if ClassAnimations then
				
				for _, Table in ClassAnimations do
					TotalWeight += (Table.Weight or 0)
				end
				
			else
				warn(`[{script}] ClassAnimations of {Class} not found`)
			end
			
			if TotalWeight == 0 then
				ClassAnimations = self._Class.Animations["Temp"]

				for _, Table in ClassAnimations do
					TotalWeight += (Table.Weight or 0)
				end

				Utils.Assert(TotalWeight ~= 0, `[{script}] Temp animation is empty`) -- Temp must have animation and weight
			end
			
			local RandomWeight = RNG:NextInteger(1, TotalWeight)
			local Weight, Index = 0, 1
			
			for I, Table in ClassAnimations do
				Weight += (Table.Weight or 0)
				
				if RandomWeight <= Weight then
					Index = I
					break
				end
			end

			return ClassAnimations[Index], Index
		end
	end


	do assert([[SET METHODS]])
		
		function BetterAnimate:SetDebugEnabled(Enabled: boolean?)

			self._Trove.Debug:Clear(true)

			if Enabled then
				local PrimaryPart = self._PrimaryPart
				local Character = PrimaryPart.Parent :: Model
				print(`[{script}] Debug enabled for {PrimaryPart.Parent}`)

				local _, Size = Character:GetBoundingBox()

				local DebugBillboard = self._Trove.Debug:Clone(script.BetterAnimate_Debug)
				DebugBillboard.StudsOffset = Vector3.new(0, Size.Y / 2 + 1.5, 0)
				DebugBillboard.Enabled = true
				DebugBillboard.Parent = PrimaryPart

				local Main = DebugBillboard:FindFirstChild(`Main`)
				local Class = Main:FindFirstChild("Class")
				local Direction = Main:FindFirstChild("Direction")
				local ID = Main:FindFirstChild("ID")
				local Timer = Main:FindFirstChild("Timer")
				local Total = Main:FindFirstChild("Total")
				local Speed = Main:FindFirstChild("Speed")
				local State = Main:FindFirstChild("State")
				local AnimationSpeed = Main:FindFirstChild(`AnimationSpeed`)

				self._Trove.Debug:Add(task.defer(function()

					while task.wait(self._Time.Debug) do

						local ClassCurrent = self._Class.Current
						local AnimationTracks = #self._Animator:GetPlayingAnimationTracks()

						Class.Text = `Class {ClassCurrent}`
						Direction.Text = `Direction {self._MoveDirection}`
						ID.Text = `ID {self._Animation.CurrentTrack and string.gsub(self._Animation.CurrentTrack.Animation.AnimationId, "%D", "") or nil}`
						Timer.Text = `Timer {Utils.MaxDecimal(self._Class.Timer[ClassCurrent] or 0, 2)}`
						Total.Text = `Total {AnimationTracks}`
						Speed.Text = `Speed {Utils.MaxDecimal(self._Speed, 2)}`
						State.Text = `State {self._State.Current}`
						AnimationSpeed.Text = `AnimSpeed {Utils.MaxDecimal(self._Animation.CurrentSpeed or 0, 2)}`
					end
				end))
			end

			return self
		end

		function BetterAnimate:SetForcedState(State: string)

			local ForcedState

			repeat
				ForcedState = `{State}{math.random(2^31 - 1)}` -- 2147483647
			until self._State.Forced ~= ForcedState

			self._State.Forced = ForcedState
			
			return self
		end
		
		function BetterAnimate:SetClassesPreset(Preset: {
				[Types.BetterAnimate_AnimationClasses]: {
					[any]: Types.BetterAnimate_AnimationData
				}
			})
			
			for Class, ClassPreset in Preset do
				self:SetClassPreset(Class, ClassPreset)
			end
			
			return self
		end

		function BetterAnimate:SetClassPreset(Class: Types.BetterAnimate_AnimationClasses, ClassPreset: {
				[any]: Types.BetterAnimate_AnimationData
			})
			
			for I, AnimationData in ClassPreset do
				self:AddAnimation(Class, I, AnimationData)
			end
			
			return self
		end
		
		function BetterAnimate:SetEventEnabled(Name: Types.BetterAnimate_EventNames, Enabled: boolean?)
			self._Events_Enabled[Name] = Enabled == true

			return self
		end
		
		function BetterAnimate:SetInverseEnabled(Enabled: boolean?)
			self._Inverse.Enabled = Enabled == true
			
			return self
		end
		
		function BetterAnimate:SetClassTimer(Class: Types.BetterAnimate_AnimationClasses, Timer: number)
			Utils.Assert(type(Timer) == `number`, `[{script}] number expected, got {Timer}`)
			self._Class.TimerMax[Class] = Timer

			return self
		end
		
		function BetterAnimate:SetClassMaxTimer(Class: Types.BetterAnimate_AnimationClasses, Timer: NumberRange | number)
			local Type = typeof(Timer)
			Utils.Assert(Type == `number` or Type == `NumberRange`, `[{script}] NumberRange or number expected, got {Timer}`)
			self._Class.TimerMax[Class] = Timer
			
			return self
		end
		
		function BetterAnimate:SetClassEmotable(Class: Types.BetterAnimate_AnimationClasses, Emotable: boolean?)
			self._Class.Emotable[Class] = Emotable == true
			
			return self
		end
		
		function BetterAnimate:SetClassAnimationSpeedAdjust(Class: Types.BetterAnimate_AnimationClasses, Adjust: number)
			Utils.Assert(type(Adjust), `[{script}] number expected, got {Adjust}`)
			self._Class.AnimationSpeedAdjust[Class] = Adjust
			
			return self
		end
		
		function BetterAnimate:SetInverseDirection(Direction: string, Inverse: boolean?)
			self._Inverse.Directions[Direction] = Inverse == true
			
			return self
		end
		
		function BetterAnimate:SetClassInverse(Class: Types.BetterAnimate_AnimationClasses, Inverse: boolean?)
			self._Class.Inverse[Class] = Inverse == true
			
			return self
		end
		
		function BetterAnimate:SetRunningStateRange(Range: NumberRange)
			Utils.Assert(typeof(Range) == `NumberRange`, `[{script}] NumberRange expected, got {Range}`)
			self._Class.SpeedRange = Range
			
			return self
		end
		
		function BetterAnimate:SetStateFunction(State: string, Function: (Types.BetterAnimate_AnimationData, State: string)-> ())
			Utils.Assert(type(Function) == `function`, `[{script}] function expected, got {Function}`)
			self._State.Functions[State] = Function
			
			return self
		end
	end

	do assert([[ETC METHODS]])
		function BetterAnimate:AddAnimation(Class: Types.BetterAnimate_AnimationClasses, Index: any?, AnimationData: Types.BetterAnimate_AnimationData | string | number | Animation)

			local ClassAnimations = self._Class.Animations[Class]
			if not ClassAnimations then
				ClassAnimations = {}
				self._Class.Animations[Class] = ClassAnimations
			end

			if AnimationData then
				local AnimationData = GetAnimationData(AnimationData, self.FastConfig.DefaultAnimationWeight) :: Types.BetterAnimate_AnimationData
				local Index = Index or AnimationData.Index or Utils.GetUnique()

				self._Trove.Main:Add(AnimationData.Instance, function() setmetatable(AnimationData, nil) end)

				if ClassAnimations[Index] then
					self._Trove.Main:Remove(ClassAnimations[Index].Instance, true)
				end

				if AnimationData.ID ~= `rbxassetid://` and AnimationData.ID ~= `rbxassetid://0` then

					ClassAnimations[Index] = AnimationData

					if Index == self._Animation.CurrentIndex 
						or (Class == self._Class.Current and Utils.GetTableLength(ClassAnimations) == 0)
					then
						if self._Class.Timer[Class] then
							self._Class.Timer[Class] = 0
						end

						self:PlayClassAnimation(Class)
					end
				else
					ClassAnimations[Index] = nil
				end

				return Index
			elseif Index then
				ClassAnimations[Index] = nil
			else
				warn(`[{script}] AnimationData or Index expected, got`, Index, AnimationData)
			end

			return self
		end
		
		function BetterAnimate:PlayToolAnimation(AnimationData: Types.BetterAnimate_AnimationData | string | number | Animation)
			
			local AnimationData = AnimationData and GetAnimationData(AnimationData, self.FastConfig.DefaultAnimationWeight) or self:GetRandomAnimation(`Toolnone`)
			local AnimationInstance = AnimationData.Instance
			local AnimationTrack = self._Animator:LoadAnimation(AnimationInstance) :: AnimationTrack --AnimationTable.AnimationTrack
			
			AnimationTrack.Priority = self.FastConfig.ToolAnimationPriority
			
			self._Trove.Tool:Add(AnimationInstance)
			self._Trove.Tool:Add(AnimationTrack.Ended:Connect(self._Animation.KeyframeFunction))
			self._Trove.Tool:Add(AnimationTrack.KeyframeReached:Connect(self._Animation.KeyframeFunction)) -- Roblox Deprecated this (bruh), but it works
			self._Trove.Tool:Add(function() AnimationTrack:Stop(self.FastConfig.ToolAnimationStopTransition) end)
			AnimationTrack:Play(self.FastConfig.ToolAnimationPlayTransition)
		end
		
		function BetterAnimate:StopToolAnimation()
			self._Trove.Tool:Clear(true)
		end

		function BetterAnimate:PlayEmote(AnimationData: Types.BetterAnimate_AnimationData | string | number | Animation, TransitionTime: number?)
			self:StopEmote()

			local CurrentClass = self._Class.Current
			if self._Class.Emotable[CurrentClass] then
				self._Animation.Emoting = true
				
				local AnimationData = GetAnimationData(AnimationData, self.FastConfig.DefaultAnimationWeight)
				local _, AnimationTrack, AnimationLenght = self:_SetAnimation(`Emote`, TransitionTime, AnimationData)
				self._Trove.Emote:Add(AnimationData.Instance, function() 
					AnimationTrack:Stop(self.FastConfig.AnimationStopTransition)
					--self:PlayClassAnimation(self._Class.Current)
					setmetatable(AnimationData, nil)
				end)
				
				return AnimationLenght
			end
		end
		
		function BetterAnimate:StopEmote()
			self._Animation.Emoting = false
			self._Trove.Emote:Clear(true)
		end

		function BetterAnimate:PlayClassAnimation(Class: Types.BetterAnimate_AnimationClasses, TransitionTime: number?)

			local ClassTimerMax = self._Class.TimerMax
			local ClassTimer = self._Class.Timer
			local OldClass = self._Class.Current
			
			if not self._Animation.Emoting then
				
				if ClassTimerMax[Class] then

					if ClassTimer[Class] then
						if ClassTimer[Class] <= 0 or OldClass ~= Class then
							ClassTimer[Class] = GetTime(ClassTimerMax[Class])
							return self:_SetAnimation(Class, TransitionTime, self:GetRandomAnimation(Class))
						--else
						--	local CurrentTrack = self._Animation.CurrentTrack
						--	return CurrentTrack and CurrentTrack.Length > 0 and CurrentTrack.Length or self._Animation.DefaultLength
						end
					else
						ClassTimer[Class] = GetTime(ClassTimerMax[Class])
						return self:_SetAnimation(Class, TransitionTime, self:GetRandomAnimation(Class))
					end
				else
					return self:_SetAnimation(Class, TransitionTime, self:GetRandomAnimation(Class))
				end
			end
		end

		function BetterAnimate:StopClassAnimation()
			self._Trove.Animation:Clear(true)
		end

		function BetterAnimate:Step(Dt: number, StateNew: Types.BetterAnimate_AnimationClasses)

			do -- Streaming & Died check
				if not self._PrimaryPart 
					or not self._PrimaryPart.Parent
					or not self._Animator
					or not self._Animator.Parent
					or not getmetatable(self.Trove)
				then
					return
				end
			end

			local StateForced = self._State.Forced and string.gsub(self._State.Forced, "%d", "") or nil
			local StateOld = self._State.Current
			StateNew = StateForced or StateNew

			do -- Speed of character
				self._Speed = Utils.MaxDecimal(self._PrimaryPart.AssemblyLinearVelocity.Magnitude, 1)
			end

			do -- New state event
				if StateNew ~= StateOld and self._Events_Enabled["NewState"] then
					local Event = self.Events["NewState"]
					Event:Fires(StateNew)
					self._State.Current = StateNew
				end
			end

			do -- Forced state update
				if StateForced 
					and StateNew == StateForced
					and StateForced == string.gsub(self._State.Forced, "%d", "")
				then
					self._State.Forced = nil
				end
			end

			do -- Update classes timer
				local Timer = self._Class.Timer
				for I in Timer do
					Timer[I] -= Dt
				end
			end
			
			do -- State function
				local StateFunction = self._State.Functions[StateNew]
				if StateFunction then
					StateFunction(self, StateNew)
				end	
			end
			
			do -- Speed of animation
				local CurrentTrack = self._Animation.CurrentTrack
				local CurrentClass = self._Class.Current
				if CurrentTrack then
					local Inverse = self:GetInverse() 
					local AnimationSpeed = (self._Animation.Emoting and 1 * self.FastConfig.AnimationSpeedMultiplier) 
						or (
							(
								(self._Class.AnimationSpeedAdjust[CurrentClass] and self._Speed / self._Class.AnimationSpeedAdjust[CurrentClass])
								or
								1
							) 
							* self.FastConfig.AnimationSpeedMultiplier 
							* Inverse 
							/ (self.FastConfig.R6ClimbFix and CurrentClass == `Climb` and self._RigType == `R6` and 2 or 1)
						)

					self._Animation.CurrentSpeed = AnimationSpeed

					CurrentTrack:AdjustSpeed(AnimationSpeed)
				end
			end
		end

		function BetterAnimate:Destroy()
			if getmetatable(self.Trove) then
				self.Trove:Destroy()	
			end

			setmetatable(self, nil)
		end
	end
end

do assert([[PRIVATE METHODS]])
	
	do assert([[SET METHODS]])
		
		function BetterAnimate:_SetAnimation(Class: --[[Just to be sure]] Types.BetterAnimate_AnimationClasses?, TransitionTime: number, AnimationData: Types.BetterAnimate_AnimationData, Index: any)

			local CurrentTrack: AnimationTrack
			local AnimationInstance = AnimationData.Instance
			
			TransitionTime = TransitionTime or self.FastConfig.AnimationPlayTransition
			self._Class.Current = Class
			self._Animation.CurrentIndex = Index

			if AnimationInstance ~= self._Animation.Current then

				--if AnimationInstance == self._Animation.Current then
				--	CurrentTrack = self._Animation.CurrentTrack
				--	CurrentTrack:Play(TransitionTime)
				--else
					self:StopClassAnimation()

					local AnimationTrack = self._Animator:LoadAnimation(AnimationInstance) :: AnimationTrack --AnimationTable.AnimationTrack
					AnimationTrack.Priority = self.FastConfig.AnimationPriority

					self._Animation.Current = AnimationInstance
					self._Animation.CurrentTrack = AnimationTrack
					CurrentTrack = AnimationTrack

					self._Trove.Animation:Add(AnimationTrack.Ended:Connect(self._Animation.KeyframeFunction))
					self._Trove.Animation:Add(AnimationTrack.KeyframeReached:Connect(self._Animation.KeyframeFunction)) -- Roblox Deprecated this (bruh), but it works
					self._Trove.Animation:Add(function() AnimationTrack:Stop(self.FastConfig.AnimationStopTransition) end)
					AnimationTrack:Play(TransitionTime)

					if self._Events_Enabled["NewAnimation"] then
						local Event = self.Events["NewAnimation"]
						Event:Fires(Class, Index, AnimationData)
					end
				--end
			end

			return AnimationInstance, CurrentTrack, CurrentTrack and CurrentTrack.Length > 0 and CurrentTrack.Length or self.FastConfig.DefaultAnimationLength
		end
	end
	
	do assert([[ETC METHODS]])

		function BetterAnimate:_AnimationEvent(Keyframe: string?)
			if Keyframe then
				if self._Events_Enabled["KeyframeReached"] then
					local Event = self.Events["KeyframeReached"]
					Event:Fires(Keyframe)
				end
			end
		end
	end
end

Destroyer.AddTableDestroyMethod(`{script}`, function(Table)
	if getmetatable(Table) == BetterAnimate then
		return true, (Table :: Types.BetterAnimate):Destroy()
	end
end)

return {
	New = function(Character: Model): Types.BetterAnimate
		local PrimaryPart = Character.PrimaryPart
		local Humanoid = Character:FindFirstChildWhichIsA(`Humanoid`, true)
		local AnimationController = Character:FindFirstChildWhichIsA(`AnimationController`, true)
		
		Utils.Assert(PrimaryPart, `[{script}] PrimaryPart expected, got nil for character {Character}`)
		Utils.Assert(AnimationController or Humanoid, `[{script}] AnimationController or Humanoid not found in {Character}`)
		
		local CharacterTrove = Trove:Extend()
		CharacterTrove:AttachToInstance(PrimaryPart)
		CharacterTrove:AttachToInstance(AnimationController or Humanoid)
		
		if Humanoid then
			CharacterTrove:Add(Humanoid.Died:Connect(function()
				CharacterTrove:Destroy()
			end))
		end
		
		local preself = {} :: Types.BetterAnimate
		preself.Trove = CharacterTrove:Extend()
		preself._PrimaryPart = PrimaryPart
		preself._Animator = AnimationController or Humanoid
		preself._RigType = (Humanoid and Humanoid.RigType.Name) or `Custom`
		
		preself.Events = {
			NewMoveDirection = CharacterTrove:Add(Unlim_Bindable.New()),
			NewState = CharacterTrove:Add(Unlim_Bindable.New()),
			NewAnimation = CharacterTrove:Add(Unlim_Bindable.New()),
			KeyframeReached = CharacterTrove:Add(Unlim_Bindable.New()),
		}
		
		preself._Trove = {
			Main = CharacterTrove,
			Debug = CharacterTrove:Extend(),
			Animation = CharacterTrove:Extend(),
			Emote = CharacterTrove:Extend(),
			Tool = CharacterTrove:Extend(),
		}
		
		local self = setmetatable(Utils.CopyTableTo(Utils.DeepCopy(DefaultSettings), preself), BetterAnimate)
		
		self._Animation.KeyframeFunction = function(...)
			self:_AnimationEvent(...)
		end
		
		self._Class.Animations = {}
		--CharacterTrove:Add(Character.DescendantAdded:Connect(function()
		--	self:FixCenterOfMass()
		--end))
		
		--CharacterTrove:Add(Character.DescendantRemoving:Connect(function()
		--	self:FixCenterOfMass()
		--end))
		
		return self
	end,
	
	GetMoveDirectionName = GetMoveDirectionName,
	GetAnimationData = GetAnimationData,
	FixCenterOfMass = FixCenterOfMass,
}
]]></ProtectedString>
						<string name="ScriptGuid">{0FAEF21E-5805-4DFE-8EE1-C7F80989A6E5}</string>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
						<string name="Name">BetterAnimate</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d6a</UniqueId>
					</Properties>
					<Item class="Folder" referent="RBX7768C88F7CB44ABEA99AB63356A3C103">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">BetterAnimate_Helpers</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d6b</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX20138BE223A543A2A7CF2A98D361D4DF">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[--local ModuleScript_BetterAnimate = `../BetterAnimate`
--local BetterAnimate = require("../../BetterAnimate")
--BetterAnimate.

local Serviecs = require(`./Services`)
local Destroyer = require(`./Destroyer`)
local Utils = require(`./Utils`)

export type Trove = {

	Extend: (self: Trove)-> Trove,
	InstanceNew: (self: Trove, ClassName: string)-> (Instance, ()->()),
	Clone: <_, Inst>(self: Trove, Inst)-> (Inst, ()->()),
	Connect: (self: Trove, Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	Once: (self: Trove, Signal: RBXScriptSignal, Function: (any)->(), OnDestroy: ()->()?)-> (RBXScriptConnection, ()->()),
	BindToRenderStep: (self: Trove, Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)-> (string, ()->()),
	Add: <_, Object>(self: Trove, Object, ...any)-> (Object, ()->()),
	Remove: (self: Trove, Object: any, Destroy: boolean?)-> boolean,
	AttachToInstance: (self: Trove, Inst: Instance)-> RBXScriptConnection,
	Clear:(self: Trove, Destroy: boolean?)-> (),
	Destroy: (self: Trove)-> (), -- Destroy == Clear(true) & setmetatable(self, nil)

	__index: Trove,
}

local Trove = {} :: Trove
Trove.__index = Trove

function Trove.New(Name: string?)
	local self = setmetatable({}, Trove)
	self.Objects = {}
	self.Cleaning = false
	--self.Name = Name
	--self.UniqueID = Serviecs.HttpService:GenerateGUID()
	return self
end

function Trove:Extend(Name: string)
	return self:Add(Trove.New(
		--self.Name or Serviecs.HttpService:GenerateGUID()
		))
end

function Trove:InstanceNew(ClassName: string): Instance
	return self:Add(Instance.new(ClassName))
end

function Trove:Clone<Inst>(Inst): Inst
	return self:Add(Inst:Clone())
end

function Trove:BindToRenderStep(Priority: Enum.RenderPriority | number, Function: (dt: number)->(), OnDestroy: ()->()?)
	
	local Index = Serviecs.HttpService:GenerateGUID()
	Serviecs.RunService:BindToRenderStep(Index, Priority, Function)
	return self:Add(Index, function() 
		Serviecs.RunService:UnbindFromRenderStep(Index)
		if type(OnDestroy) == `function` then	
			OnDestroy()
		end
	end)
end

function Trove:Add<Object>(Object, ...: any): Object
	
	local CheckExist = self.Objects[Object]
	if CheckExist then
		return warn(`[Trove] Trying to add existing Object`, Object)
	else
		self.Objects[Object] = {...}
		return Object, function() self:Remove(Object) end
	end
end

function Trove:Remove(Object: any, Destroy: boolean?)
	
	local ObjectTable = self.Objects[Object]
	if ObjectTable then
		
		if Destroy then
			if type(Object) == "function" then
				Object(table.unpack(ObjectTable))
			else
				Destroyer.Destroy(Object)
				
				for _, Arg in ObjectTable do
					if type(Arg) == "function" then
						Arg()
					end
				end
			end
		end
		
		self.Objects[Object] = nil
		return true
	end
	
	return false, warn(`[{script}] Object not found: {Object}`)
end

function Trove:AttachToInstance(Inst: Instance)
	
	if not Inst then
		error(`Instance expected, got {Inst}`, 2)
	else
		return self:Add(Inst.Destroying:Connect(function() self:Destroy() end))
	end
end

function Trove:Clear(Destroy: boolean?)
	
	for Object, _ in self.Objects do
		self:Remove(Object, Destroy)
	end
end

function Trove:Destroy()
	
	self:Clear(true)
	setmetatable(self, nil)
end

Destroyer.AddTableDestroyMethod(`{script}`, function(Table)
	if getmetatable(Table) == Trove then
		Table:Destroy()
	end
end)

return Trove.New() :: Trove]]></ProtectedString>
								<string name="ScriptGuid">{9847E773-9267-43EF-82EF-DBBC72E166F6}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Trove</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d6c</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX8456F474B6C64FAE81B91CA9E5F2A778">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[local Services = require(`./Services`)

local Module = {}

function Module.Assert(Condition: (any), ErrorMessage: string, Level: number?): ()
	if not (Condition) then error(`Assert: {ErrorMessage}`, Level or 2) end
end

function Module.GetUnique()
	return Services.HttpService:GenerateGUID(false)
end

function Module.CopyTableTo<From, To>(From: From, To: To): From & To
	for I, Value in From do
		if type(Value) == `table` and type(To[I]) == `table` then
			Module.CopyTableTo(Value, To[I])
		else
			To[I] = Value
		end
	end
	
	return To
end

function Module.DeepCopy<Table>(Table: Table): Table
	local Copy = {}
	
	for I, Value in Table do
		if type(Value) == "table" then
			Value = Module.DeepCopy(Value)
		end
		Copy[I] = Value
	end
	
	return Copy :: typeof(Table)
end

function Module.GetTableLength(Table: {[any]: any}): number
	local Number = 0
	for _, _ in Table do
		Number += 1
	end
	return Number
end

function Module.Vector3Round(Vector: Vector3): Vector3
	return Vector3.new(math.round(Vector.X), math.round(Vector.Y), math.round(Vector.Z))
end

function Module.MaxDecimal(Number: number, Decimal: number): number
	return tonumber(string.format(`%.{Decimal}f`, Number)) :: number
end

function Module.WaitForChildWhichIsA(Where: Instance, What: string, Recursive: boolean?, Timer: number?): Instance?
	if not Where or type(What) ~= "string" then
		return warn( `[{script}] {debug.info(1, `n`)} got incorrect data. Where: {Where} = {typeof(Where)}, What: {What} = {typeof(What)}`)
	else
		Timer = type(Timer) == "number" and Timer or 7
		local TimePassed = 0
		local Found = nil
		repeat
			Found = Where:FindFirstChildWhichIsA(What, Recursive)
			TimePassed += task.wait() 
		until Found or TimePassed >= Timer
		return Found
	end
end

return Module
]]></ProtectedString>
								<string name="ScriptGuid">{251CC1AC-146E-4EA3-8DA6-78B306D85FF2}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Utils</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d6d</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXFA9288C39F7C4C0FB83714B8EB471989">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[return {
	RunService = game:GetService(`RunService`),
	HttpService = game:GetService(`HttpService`),
}]]></ProtectedString>
								<string name="ScriptGuid">{F27C103F-6B3B-4B52-898A-A2182133DB15}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Services</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d6e</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX48EAECA0F86544C5AA691EAC70F3E1F0">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[local Module = {
	TableMethods = {},
}

Module.CleanMethods = {
	["table"] = function(Table: {any})
		
		for _, Function in Module.TableMethods do
			if Function(Table) then
				return
			end
		end
	end,
	
	thread = function(Thread: thread)
		task.cancel(Thread)
	end,
	
	["function"] = function(Function: (any)->(any))
		
	end,
	
	instance = function(Inst: Instance)
		--if Inst then 
			Inst:Destroy()
		--end
	end,
	
	rbxscriptconnection = function(Connect: RBXScriptConnection)
		if Connect and Connect.Connected then
			Connect:Disconnect()
		end
	end,
}

function Module.Destroy(Any: any)
	local Destroy = Module.CleanMethods[string.lower(typeof(Any))]
	if Destroy then
		Destroy(Any)
	end
end

function Module.AddTableDestroyMethod(Index: any, Function: (Table: {[any]: any})-> ())
	Module.TableMethods[Index] = Function
end

return Module
]]></ProtectedString>
								<string name="ScriptGuid">{35D49A60-D028-4730-884D-B214125933FC}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Destroyer</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d6f</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX0319A88029A2498CACB2BD996BDD2A21">
							<Properties>
								<Content name="LinkedSource"><null></null></Content>
								<ProtectedString name="Source"><![CDATA[
--Types

--

--Modules
local Utils = require(`./Utils`)
local Destroyer = require(`./Destroyer`)
local Services = require(`./Services`)
--

--Types
export type DisconnectFunction = ()-> ()

export type Unlim_Bindable = {
	
	Connect: (self: Unlim_Bindable, Function: (...any)-> ())-> (string, DisconnectFunction),
	Once: (self: Unlim_Bindable, Function: (...any)-> ())-> (string, DisconnectFunction),
	Wait: (self: Unlim_Bindable)-> (...any),
	
	Disconnect: (self: Unlim_Bindable, Key: string)-> (),
	DisconnectAll: (self: Unlim_Bindable)-> (),
	
	Fire: (self: Unlim_Bindable, Key: string, ...any)-> (),
	Fires: (self: Unlim_Bindable, ...any)-> (),
	Invoke: (self: Unlim_Bindable, Key: string, ...any)-> (...any),
	
	Destroy: (self: Unlim_Bindable)-> (),
	
	__index: Unlim_Bindable
}
--

local Bindables = {}
local Bindable = {} :: Unlim_Bindable
Bindable.__index = Bindable

function Bindable:Connect(Function: (...any) -> ())
	local Key
	repeat
		Key = Utils.GetUnique()
	until not self.Connects[Key]
	
	self.Connects[Key] = Function
	return Key, function() self.Connects[Key] = nil end
end

function Bindable:Once(Function: (...any) -> ())
	local Key, DisconnectFunction
	Key, DisconnectFunction = self:Connect(function(...: any)
		--print(self)
		--print(getmetatable(self))
		if getmetatable(self) then
			DisconnectFunction()
			task.spawn(Function, ...)
		end
	end)
	
	return Key, DisconnectFunction
end

function Bindable:Disconnect(Key: string)
	self.Connects[Key] = nil
end

function Bindable:DisconnectAll()
	for Key in self.Connects do
		self.Connects[Key] = nil
	end
end

function Bindable:Wait()
	local This_Thread = coroutine.running()
	self:Once(function(...)
		--print(coroutine.status(This_Thread))
		local Status = coroutine.status(This_Thread)
		
		if Status == `normal` or `suspended` then
			pcall(task.spawn, This_Thread, ...)
			--task.defer(This_Thread, ...)
		else
			warn(`[Unlim_Bindable] {This_Thread} is {Status}`)
		end
		
	end)
	return coroutine.yield()
end

function Bindable:Fire(Key: string, ...: any)
	local Function = self.Connects[Key]
	if Function then
		task.spawn(Function, ...)
	else
		warn(`[Unlim_Bindable] Connect with key: {Key} don't exist {self.Identifier} \n {debug.traceback()}`)
	end
end

function Bindable:Fires(...: any)
	for _, Function in self.Connects do
		task.spawn(Function, ...)
	end
end

function Bindable:Invoke(Key: string, ...: any)
	local Function = self.Connects[Key]
	if not Function then return end
	return Function(...)
end

function Bindable:Destroy()
	self:DisconnectAll()
	Bindables[self.Identifier] = nil
	setmetatable(self, nil)
end

Destroyer.AddTableDestroyMethod(`{script}`, function(Table)
	if getmetatable(Table) == Bindable then
		return true, (Table :: Unlim_Bindable):Destroy()
	end
end)

return {
	New = function(Identifier: string?): Unlim_Bindable
		if not Identifier then
			Identifier = Utils.GetUnique()
			while Bindables[Identifier] do
				Identifier = Utils.GetUnique()
			end
		end

		Utils.Assert(typeof(Identifier) == "string", `[{script}]: Identifier must be a string type, got {typeof(Identifier)}`)
		if not Bindables[Identifier] then
			local self = setmetatable({
				Identifier = Identifier,
				Connects = {},
			}, Bindable)
			Bindables[Identifier] = self
			return self
		end

		return Bindables[Identifier]
	end,
}]]></ProtectedString>
								<string name="ScriptGuid">{357282E3-122F-4BD4-A38A-7AE0C36A841E}</string>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Unlim_Bindable</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d70</UniqueId>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX1D23E28620CF42DAB75BC520543A5927">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

export type Instances = "Accessory" | "Accoutrement" | "Actor" | "AdGui" | "AdPortal" | "AdService" | "AdvancedDragger" | "AirController" | "AlignOrientation" | "AlignPosition" | "AnalysticsSettings" | "AnalyticsService" | "AngularVelocity" | "Animation" | "AnimationClip" | "AnimationClipProvider" | "AnimationConstraint" | "AnimationController" | "AnimationFromVideoCreatorService" | "AnimationFromVideoCreatorStudioService" | "AnimationImportData" | "AnimationRigData" | "AnimationStreamTrack" | "AnimationTrack" | "Animator" | "AppStorageService" | "AppUpdateService" | "ArcHandles" | "AssetCounterService" | "AssetDeliveryProxy" | "AssetImportService" | "AssetImportSession" | "AssetManagerService" | "AssetPatchSettings" | "AssetService" | "AssetSoundEffect" | "Atmosphere" | "Attachment" | "AudioPages" | "AudioSearchParams" | "AvatarChatService" | "AvatarEditorService" | "AvatarImportService" | "Backpack" | "BackpackItem" | "BadgeService" | "BallSocketConstraint" | "BaseImportData" | "BasePart" | "BasePlayerGui" | "BaseScript" | "BaseWrap" | "Beam" | "BevelMesh" | "BillboardGui" | "BinaryStringValue" | "BindableEvent" | "BindableFunction" | "BlockMesh" | "BloomEffect" | "BlurEffect" | "BodyAngularVelocity" | "BodyColors" | "BodyForce" | "BodyGyro" | "BodyMover" | "BodyPosition" | "BodyThrust" | "BodyVelocity" | "Bone" | "BoolValue" | "BoxHandleAdornment" | "Breakpoint" | "BrickColorValue" | "BrowserService" | "BubbleChatConfiguration" | "BubbleChatMessageProperties" | "BulkImportService" | "BuoyancySensor" | "CacheableContentProvider" | "CalloutService" | "Camera" | "CanvasGroup" | "CaptureService" | "CatalogPages" | "CFrameValue" | "ChangeHistoryService" | "ChannelSelectorSoundEffect" | "CharacterAppearance" | "CharacterMesh" | "Chat" | "ChatInputBarConfiguration" | "ChatWindowConfiguration" | "ChorusSoundEffect" | "ClickDetector" | "ClientReplicator" | "ClimbController" | "Clothing" | "CloudLocalizationTable" | "Clouds" | "ClusterPacketCache" | "CollectionService" | "Color3Value" | "ColorCorrectionEffect" | "CommandInstance" | "CommandService" | "CompressorSoundEffect" | "ConeHandleAdornment" | "Configuration" | "ConfigureServerService" | "Constraint" | "ContentProvider" | "ContextActionService" | "Controller" | "ControllerBase" | "ControllerManager" | "ControllerPartSensor" | "ControllerSensor" | "ControllerService" | "CookiesService" | "CoreGui" | "CorePackages" | "CoreScript" | "CoreScriptDebuggingManagerHelper" | "CoreScriptSyncService" | "CornerWedgePart" | "CrossDMScriptChangeListener" | "CSGDictionaryService" | "CurveAnimation" | "CustomEvent" | "CustomEventReceiver" | "CustomSoundEffect" | "CylinderHandleAdornment" | "CylinderMesh" | "CylindricalConstraint" | "DataModel" | "DataModelMesh" | "DataModelPatchService" | "DataModelSession" | "DataStore" | "DataStoreIncrementOptions" | "DataStoreInfo" | "DataStoreKey" | "DataStoreKeyInfo" | "DataStoreKeyPages" | "DataStoreListingPages" | "DataStoreObjectVersionInfo" | "DataStoreOptions" | "DataStorePages" | "DataStoreService" | "DataStoreSetOptions" | "DataStoreVersionPages" | "Debris" | "DebuggablePluginWatcher" | "DebuggerBreakpoint" | "DebuggerConnection" | "DebuggerConnectionManager" | "DebuggerLuaResponse" | "DebuggerManager" | "DebuggerUIService" | "DebuggerVariable" | "DebuggerWatch" | "DebugSettings" | "Decal" | "DepthOfFieldEffect" | "DeviceIdService" | "Dialog" | "DialogChoice" | "DistortionSoundEffect" | "DockWidgetPluginGui" | "DoubleConstrainedValue" | "DraftsService" | "DragDetector" | "Dragger" | "DraggerService" | "DynamicMesh" | "DynamicRotate" | "EchoSoundEffect" | "EmotesPages" | "EqualizerSoundEffect" | "EulerRotationCurve" | "EventIngestService" | "ExperienceAuthService" | "ExperienceInviteOptions" | "Explosion" | "FaceAnimatorService" | "FaceControls" | "FaceInstance" | "FacialAnimationRecordingService" | "FacialAnimationStreamingServiceStats" | "FacialAnimationStreamingServiceV2" | "FacialAnimationStreamingSubsessionStats" | "FacsImportData" | "Feature" | "File" | "FileMesh" | "Fire" | "Flag" | "FlagStand" | "FlagStandService" | "FlangeSoundEffect" | "FloatCurve" | "FloorWire" | "FlyweightService" | "Folder" | "ForceField" | "FormFactorPart" | "Frame" | "FriendPages" | "FriendService" | "FunctionalTest" | "GamepadService" | "GamePassService" | "GameSettings" | "GenericSettings" | "Geometry" | "GeometryService" | "GetTextBoundsParams" | "GlobalDataStore" | "GlobalSettings" | "Glue" | "GoogleAnalyticsConfiguration" | "GroundController" | "GroupImportData" | "GroupService" | "GuiBase" | "GuiBase2d" | "GuiBase3d" | "GuiButton" | "GuidRegistryService" | "GuiLabel" | "GuiMain" | "GuiObject" | "GuiService" | "HandleAdornment" | "Handles" | "HandlesBase" | "HapticService" | "Hat" | "HeightmapImporterService" | "HiddenSurfaceRemovalAsset" | "Highlight" | "HingeConstraint" | "Hint" | "Hole" | "Hopper" | "HopperBin" | "HSRDataContentProvider" | "HttpRbxApiService" | "HttpRequest" | "HttpService" | "Humanoid" | "HumanoidController" | "HumanoidDescription" | "IKControl" | "ILegacyStudioBridge" | "ImageButton" | "ImageDataExperimental" | "ImageHandleAdornment" | "ImageLabel" | "IncrementalPatchBuilder" | "InputObject" | "InsertService" | "Instance" | "InstanceAdornment" | "IntConstrainedValue" | "IntersectOperation" | "IntValue" | "InventoryPages" | "IXPService" | "JointImportData" | "JointInstance" | "JointsService" | "KeyboardService" | "Keyframe" | "KeyframeMarker" | "KeyframeSequence" | "KeyframeSequenceProvider" | "LanguageService" | "LayerCollector" | "LegacyStudioBridge" | "Light" | "Lighting" | "LinearVelocity" | "LineForce" | "LineHandleAdornment" | "LiveScriptingService" | "LocalDebuggerConnection" | "LocalizationService" | "LocalizationTable" | "LocalScript" | "LocalStorageService" | "LodDataEntity" | "LodDataService" | "LoginService" | "LogService" | "LSPFileSyncService" | "LuaSettings" | "LuaSourceContainer" | "LuauScriptAnalyzerService" | "LuaWebService" | "ManualGlue" | "ManualSurfaceJointInstance" | "ManualWeld" | "MarkerCurve" | "MarketplaceService" | "MaterialGenerationService" | "MaterialGenerationSession" | "MaterialImportData" | "MaterialService" | "MaterialVariant" | "MemoryStoreQueue" | "MemoryStoreService" | "MemoryStoreSortedMap" | "MemStorageConnection" | "MemStorageService" | "MeshContentProvider" | "MeshDataExperimental" | "MeshImportData" | "MeshPart" | "Message" | "MessageBusConnection" | "MessageBusService" | "MessagingService" | "MetaBreakpoint" | "MetaBreakpointContext" | "MetaBreakpointManager" | "Model" | "ModuleScript" | "Motor" | "Motor6D" | "MotorFeature" | "Mouse" | "MouseService" | "MultipleDocumentInterfaceInstance" | "NegateOperation" | "NetworkClient" | "NetworkMarker" | "NetworkPeer" | "NetworkReplicator" | "NetworkServer" | "NetworkSettings" | "NoCollisionConstraint" | "NonReplicatedCSGDictionaryService" | "NotificationService" | "NumberPose" | "NumberValue" | "ObjectValue" | "OmniRecommendationsService" | "OpenCloudService" | "OrderedDataStore" | "OutfitPages" | "PackageLink" | "PackageService" | "PackageUIService" | "Pages" | "Pants" | "ParabolaAdornment" | "Part" | "PartAdornment" | "ParticleEmitter" | "PartOperation" | "PartOperationAsset" | "PatchBundlerFileWatch" | "PatchMapping" | "Path" | "PathfindingLink" | "PathfindingModifier" | "PathfindingService" | "PausedState" | "PausedStateBreakpoint" | "PausedStateException" | "PermissionsService" | "PhysicsService" | "PhysicsSettings" | "PitchShiftSoundEffect" | "Plane" | "PlaneConstraint" | "Platform" | "Player" | "PlayerEmulatorService" | "PlayerGui" | "PlayerMouse" | "Players" | "PlayerScripts" | "Plugin" | "PluginAction" | "PluginDebugService" | "PluginDragEvent" | "PluginGui" | "PluginGuiService" | "PluginManagementService" | "PluginManager" | "PluginManagerInterface" | "PluginMenu" | "PluginMouse" | "PluginPolicyService" | "PluginToolbar" | "PluginToolbarButton" | "PointLight" | "PointsService" | "PolicyService" | "Pose" | "PoseBase" | "PostEffect" | "PrismaticConstraint" | "ProcessInstancePhysicsService" | "ProximityPrompt" | "ProximityPromptService" | "PublishService" | "PVAdornment" | "PVInstance" | "QWidgetPluginGui" | "RayValue" | "RbxAnalyticsService" | "ReflectionMetadata" | "ReflectionMetadataCallbacks" | "ReflectionMetadataClass" | "ReflectionMetadataClasses" | "ReflectionMetadataEnum" | "ReflectionMetadataEnumItem" | "ReflectionMetadataEnums" | "ReflectionMetadataEvents" | "ReflectionMetadataFunctions" | "ReflectionMetadataItem" | "ReflectionMetadataMember" | "ReflectionMetadataProperties" | "ReflectionMetadataYieldFunctions" | "RemoteCursorService" | "RemoteDebuggerServer" | "RemoteEvent" | "RemoteFunction" | "RenderingTest" | "RenderSettings" | "ReplicatedFirst" | "ReplicatedStorage" | "ReverbSoundEffect" | "RigidConstraint" | "RobloxPluginGuiService" | "RobloxReplicatedStorage" | "RocketPropulsion" | "RodConstraint" | "RomarkService" | "RootImportData" | "RopeConstraint" | "Rotate" | "RotateP" | "RotateV" | "RotationCurve" | "RtMessagingService" | "RunningAverageItemDouble" | "RunningAverageItemInt" | "RunningAverageTimeIntervalItem" | "RunService" | "RuntimeScriptService" | "SafetyService" | "ScreenGui" | "ScreenshotHud" | "Script" | "ScriptBuilder" | "ScriptChangeService" | "ScriptCloneWatcher" | "ScriptCloneWatcherHelper" | "ScriptCommitService" | "ScriptContext" | "ScriptDebugger" | "ScriptDocument" | "ScriptEditorService" | "ScriptRegistrationService" | "ScriptRuntime" | "ScriptService" | "ScrollingFrame" | "Seat" | "Selection" | "SelectionBox" | "SelectionHighlightManager" | "SelectionLasso" | "SelectionPartLasso" | "SelectionPointLasso" | "SelectionSphere" | "SensorBase" | "ServerReplicator" | "ServerScriptService" | "ServerStorage" | "ServiceProvider" | "ServiceVisibilityService" | "SessionService" | "SharedTableRegistry" | "Shirt" | "ShirtGraphic" | "ShorelineUpgraderService" | "SkateboardController" | "SkateboardPlatform" | "Skin" | "Sky" | "SlidingBallConstraint" | "Smoke" | "SmoothVoxelsUpgraderService" | "Snap" | "SnippetService" | "SocialService" | "SolidModelContentProvider" | "Sound" | "SoundEffect" | "SoundGroup" | "SoundService" | "Sparkles" | "SpawnerService" | "SpawnLocation" | "SpecialMesh" | "SphereHandleAdornment" | "SpotLight" | "SpringConstraint" | "StackFrame" | "StandalonePluginScripts" | "StandardPages" | "StarterCharacterScripts" | "StarterGear" | "StarterGui" | "StarterPack" | "StarterPlayer" | "StarterPlayerScripts" | "Stats" | "StatsItem" | "Status" | "StringValue" | "Studio" | "StudioAssetService" | "StudioData" | "StudioDeviceEmulatorService" | "StudioPublishService" | "StudioScriptDebugEventListener" | "StudioSdkService" | "StudioService" | "StudioTheme" | "StyleBase" | "StyleDerive" | "StyleLink" | "StyleRule" | "StyleSheet" | "StylingService" | "SunRaysEffect" | "SurfaceAppearance" | "SurfaceGui" | "SurfaceGuiBase" | "SurfaceLight" | "SurfaceSelection" | "SwimController" | "SyncScriptBuilder" | "TaskScheduler" | "Team" | "TeamCreateData" | "TeamCreatePublishService" | "TeamCreateService" | "Teams" | "TeleportAsyncResult" | "TeleportOptions" | "TeleportService" | "TemporaryCageMeshProvider" | "TemporaryScriptService" | "Terrain" | "TerrainDetail" | "TerrainRegion" | "TestService" | "TextBox" | "TextBoxService" | "TextButton" | "TextChannel" | "TextChatCommand" | "TextChatConfigurations" | "TextChatMessage" | "TextChatMessageProperties" | "TextChatService" | "TextFilterResult" | "TextFilterTranslatedResult" | "TextLabel" | "TextService" | "TextSource" | "Texture" | "TextureGuiExperimental" | "ThirdPartyUserService" | "ThreadState" | "TimerService" | "ToastNotificationService" | "Tool" | "Torque" | "TorsionSpringConstraint" | "TotalCountTimeIntervalItem" | "TouchInputService" | "TouchTransmitter" | "TracerService" | "TrackerLodController" | "TrackerStreamAnimation" | "Trail" | "Translator" | "TremoloSoundEffect" | "TriangleMeshPart" | "TrussPart" | "TutorialService" | "Tween" | "TweenBase" | "TweenService" | "UGCAvatarService" | "UGCValidationService" | "UIAspectRatioConstraint" | "UIBase" | "UIComponent" | "UIConstraint" | "UICorner" | "UIGradient" | "UIGridLayout" | "UIGridStyleLayout" | "UILayout" | "UIListLayout" | "UIPadding" | "UIPageLayout" | "UIScale" | "UISizeConstraint" | "UIStroke" | "UITableLayout" | "UITextSizeConstraint" | "UnionOperation" | "UniversalConstraint" | "UnvalidatedAssetService" | "UserGameSettings" | "UserInputService" | "UserService" | "UserSettings" | "UserStorageService" | "ValueBase" | "Vector3Curve" | "Vector3Value" | "VectorForce" | "VehicleController" | "VehicleSeat" | "VelocityMotor" | "VersionControlService" | "VideoCaptureService" | "VideoFrame" | "ViewportFrame" | "VirtualInputManager" | "VirtualUser" | "VisibilityCheckDispatcher" | "VisibilityService" | "Visit" | "VoiceChatInternal" | "VoiceChatService" | "VRService" | "WedgePart" | "Weld" | "WeldConstraint" | "WireframeHandleAdornment" | "Workspace" | "WorldModel" | "WorldRoot" | "WrapLayer" | "WrapTarget"

--[[@Trove]]
export type Trove = typeof(require(`./BetterAnimate_Helpers/Trove`))

--[[@Utils]]
export type Utils = typeof(require(`./BetterAnimate_Helpers/Utils`))

--[[@Services]]
export type Services = typeof(require(`./BetterAnimate_Helpers/Services`))

--[[@Destroyer]]
export type Destroyer = typeof(require(`./BetterAnimate_Helpers/Destroyer`))

--[[@Unlim]]
local Unlim_Bindable = require(`./BetterAnimate_Helpers/Unlim_Bindable`)
export type Unlim_Bindable_Start = typeof(Unlim_Bindable)
export type Unlim_Bindable = Unlim_Bindable.Unlim_Bindable

--[[@BetterAnimate]]
export type BetterAnimate_AnimationClasses = "Walk" | "Run" | "Swim" | "Swimidle" | "Jump" | "Fall" | "Climb" | "Sit" | "Idle" | "Emote" | "Temp" --| string
export type BetterAnimate_Directions = "ForwardRight" | "ForwardLeft" | "BackwardRight" | "BackwardLeft" | "Right" | "Left" | "Backward" | "Forward" | "Up" | "Down" | "None"
export type BetterAnimate_EventNames = "NewMoveDirection" | "NewState" | "NewAnimation" | "KeyframeReached"

export type BetterAnimate_AnimationData = {
	ID: number | string?,
	Instance: Animation?,
	Weight: number?,
	Index: string?,
}

export type BetterAnimate_Start = {
	New: (Character: Model)-> BetterAnimate,
	GetMoveDirectionName: (MoveDirection: Vector3)-> BetterAnimate_Directions,
	GetAnimationData: (AnimationData: BetterAnimate_AnimationData | number | string | Instance, DefaultWeight: number?)-> BetterAnimate_AnimationData,
	FixCenterOfMass: (PhysicalProperties, BasePart)-> (),
}

export type BetterAnimate = {
	
	--[[Public]]
	
	Trove: Trove, -- If you want to attach something
	
	Events: {
		[BetterAnimate_EventNames]: Unlim_Bindable,
	},
	
	FastConfig: { -- Like FFlag to fix something
		R6ClimbFix: boolean, -- For R6
		EmoteIngnoreEmotable: boolean,
		WaitFallOnJump: number,
		DefaultAnimationLength: number,
		DefaultAnimationWeight: number,	
		AnimationSpeedMultiplier: number,
		AnimationPlayTransition: number,
		AnimationStopTransition: number,
		AnimationPriority: Enum.AnimationPriority,
		ToolAnimationPlayTransition: number,
		ToolAnimationStopTransition: number,
		ToolAnimationPriority: Enum.AnimationPriority,
	},
	
	SimpleStateWrapper: (Function: (self: BetterAnimate)-> ())-> ((BetterAnimate, string)-> ()),
	
	GetInverse: (self: BetterAnimate)-> number,
	GetMoveDirection: (self: BetterAnimate)-> Vector3,
	GetRandomAnimation: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses)-> (any, BetterAnimate_AnimationData),
	
	SetForcedState: (self: BetterAnimate, State: string)-> (BetterAnimate),
	SetEventEnabled: (self: BetterAnimate, Name: BetterAnimate_EventNames, Enabled: boolean?)-> (BetterAnimate),
	SetDebugEnabled: (self: BetterAnimate, Enabled: boolean?)-> (BetterAnimate),
	SetClassesPreset: (self: BetterAnimate, Preset: { [BetterAnimate_AnimationClasses]: { [any]: BetterAnimate_AnimationData | string | number | Animation } })-> (BetterAnimate),
	SetClassPreset: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Preset: { [any]: BetterAnimate_AnimationData | string | number | Animation })-> (BetterAnimate),
	SetInverseEnabled: (self: BetterAnimate, Enabled: boolean?)-> (BetterAnimate),
	SetInverseDirection: (self: BetterAnimate, Direction: string, Inverse: boolean?)-> (BetterAnimate),
	SetClassInverse: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Inverse: boolean?)-> (BetterAnimate),
	SetClassTimer: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Timer: number)-> (BetterAnimate),
	SetClassMaxTimer: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, MaxTimer: number | NumberRange)-> (BetterAnimate),
	SetClassEmotable: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Emotable: boolean?)-> (BetterAnimate),
	SetClassAnimationSpeedAdjust: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Adjust: number)-> (BetterAnimate),
	SetRunningStateRange: (self: BetterAnimate, Range: NumberRange)-> (BetterAnimate),
	SetStateFunction: (self: BetterAnimate, State: string, Function: (BetterAnimate_AnimationData, string)-> ())-> (BetterAnimate),
	
	AddAnimation: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, Index: any?, AnimationData: BetterAnimate_AnimationData)-> (BetterAnimate),
	StopClassAnimation: (self: BetterAnimate)-> (),
	PlayClassAnimation: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses, TransitionTime: number?)-> (),
	PlayToolAnimation: (self: BetterAnimate, Data: BetterAnimate_AnimationData | string | number | Animation)-> (),
	StopToolAnimation: (self: BetterAnimate, Data: BetterAnimate_AnimationData | string | number | Animation)-> (),
	StopEmote: (self: BetterAnimate)-> (),
	PlayEmote: (self: BetterAnimate, Data: BetterAnimate_AnimationData | string | number | Animation)-> (number),
	Step: (self: BetterAnimate, Dt: number)-> (),
	
	Destroy: (self: BetterAnimate)-> (),
	--

	--[[Private]]
	_Speed: number,
	_MoveDirection: Vector3,
	_PrimaryPart: BasePart,
	_Animator: AnimationController | Humanoid,

	_RigType: "R6" | "R15" | "Custom", --Enum.HumanoidRigType
	
	_Time: {
		Debug: number,
		Jumped: number,
	},
	
	_State: {
		Forced: string?,
		Current: string,
		--Deffered: {
		--	[string]: boolean,
		--},
		
		Functions: {
			[string]: (BetterAnimate, State: string)-> ()
		}
	},

	_Trove: {
		Main: Trove,
		Debug: Trove,
		Animation: Trove,
		Emote: Trove,
		Tool: Trove,
	},

	_Events_Enabled: {
		[BetterAnimate_EventNames]: boolean,
	},
	
	_Class: {
		Current: string?,
		Inverse:  { [BetterAnimate_AnimationClasses]: boolean },
		Emotable: { [BetterAnimate_AnimationClasses]: boolean },
		AnimationSpeedAdjust: { [BetterAnimate_AnimationClasses]: number },
		DirectionAdjust: { [BetterAnimate_AnimationClasses]: CFrame },
		--SwitchIgnore: { [BetterAnimate_AnimationClasses]: boolean },
		TimerMax: { [BetterAnimate_AnimationClasses]: number | NumberRange },
		Timer: { [BetterAnimate_AnimationClasses]: number | NumberRange },
		SpeedRange: NumberRange,
		Animations: { [BetterAnimate_AnimationClasses]: { [any]: BetterAnimate_AnimationData } }
	},

	_Inverse: {
		Enabled: boolean,
		Directions: { [BetterAnimate_Directions]: boolean}
	},

	_Animation: {
		Current: Animation?,
		CurrentTrack: AnimationTrack?,
		CurrentIndex: any?,
		CurrentSpeed: number?,
		DefaultLength: number,
		DefaultWeight: number,
		ToolPriority: Enum.AnimationPriority,
		Priority: Enum.AnimationPriority,
		KeyframeFunction: ()-> (),
		Emoting: boolean?,
	},
	
	_SetAnimation: (self: BetterAnimate, Class: BetterAnimate_AnimationClasses?, TransitionTime: number?, Index: any, AnimationData: BetterAnimate_AnimationData)-> (Animation, AnimationTrack, number),
	_AnimationEvent: (self: BetterAnimate, Keyframe: string?)-> (),
	
	__index: BetterAnimate,
	
	[any]: (self: BetterAnimate, ...any)-> (...any),
	--
}

return true]]></ProtectedString>
							<string name="ScriptGuid">{BC8FA256-7E6B-4166-A17A-FB4947E7B58F}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">BetterAnimate_Types</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d71</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX578EAD0665B44561B93339E69F8649EA">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!native
--!optimize 2

local Types = require(`./BetterAnimate_Types`)

local function SimpleStateWrapper(Function: (self: Types.BetterAnimate)-> ())
	
	return function(self: Types.BetterAnimate, State: string)
		--print(getmetatable(self))
		Function(self)
		
		if State ~= Enum.HumanoidStateType.Jumping.Name 
			and State ~= Enum.HumanoidStateType.Freefall.Name
		then
			self._Time.Jumped = 0
		end
	end
end

local Module = {	
	
	SimpleStateWrapper = SimpleStateWrapper,
	
	FastConfig = {
		R6ClimbFix = true, -- For R6
		EmoteIngnoreEmotable = false,
		AnimationSpeedMultiplier = 1,
		AnimationPlayTransition = 0.1,
		AnimationStopTransition = 0.1,
		ToolAnimationPlayTransition = 0.1,
		ToolAnimationStopTransition = 0.1,
		WaitFallOnJump = 0.31,
		DefaultAnimationLength = 5,
		DefaultAnimationWeight = 10,
		AnimationPriority = Enum.AnimationPriority.Core,
		ToolAnimationPriority = Enum.AnimationPriority.Idle,
	},
	
	_Time = {
		Debug = 0.06,
		--AnimationStop = 0.1,
		--FallOnJump = 0.31,
		--Fall = 0.1,
		--AnimationTransition = 0.1,
	},
	
	_State = {
		Deffered = { -- Prority to play
			[Enum.HumanoidStateType.Jumping.Name] = true,
		},
		
		Functions = {
			[Enum.HumanoidStateType.Jumping.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate)
				self:PlayClassAnimation("Jump")
				self._Time.Jumped = os.clock()
			end),

			[Enum.HumanoidStateType.Freefall.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate)
				if os.clock() - (self._Time.Jumped or os.clock()) >= self.FastConfig.WaitFallOnJump then	
					self:PlayClassAnimation(`Fall`)
				end
			end),

			[Enum.HumanoidStateType.GettingUp.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate) 
				self:StopClassAnimation()
			end),	

			[Enum.HumanoidStateType.FallingDown.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate) 
				self:StopClassAnimation()
			end),	

			[Enum.HumanoidStateType.PlatformStanding.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate)
				self:StopClassAnimation()
			end),

			[Enum.HumanoidStateType.Running.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate)
				local Speed = self._Speed	
				local SpeedRange = self._Class.SpeedRange
				
				if Speed >= -math.huge and SpeedRange.Min > Speed then
					self:PlayClassAnimation(`Idle`, 0.2)
				elseif Speed >= SpeedRange.Min and SpeedRange.Max > Speed then
					self:PlayClassAnimation(`Walk`, 0.2)
				elseif Speed >= SpeedRange.Max and math.huge > Speed then
					self:PlayClassAnimation(`Run`, 0.2)
				else
					warn(`Over 9000!!!! {Speed}`) -- Just a meme phrase (that's mean you broke something)
				end
			end),

			[Enum.HumanoidStateType.Seated.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate)
				self:PlayClassAnimation(`Sit`, 0.3)
			end),

			[Enum.HumanoidStateType.Swimming.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate)
				if self._Speed > 3 then self:PlayClassAnimation(`Swim`, 0.4) return end
				self:PlayClassAnimation(`Swimidle`, 0.4)
			end),

			[Enum.HumanoidStateType.Climbing.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate)
				self:PlayClassAnimation(`Climb`, 0.2)
			end),

			[Enum.HumanoidStateType.None.Name] = SimpleStateWrapper(function(self: Types.BetterAnimate)
				self:PlayClassAnimation(`Temp`)
				--self.ForceState = false
			end),
		},
	},

	_Class = { -- Class ~= State 
		Inverse = { -- When inverse animation work
			Walk = true, 
			Run = true, 
			Climb = true,
		},

		Emotable = { -- When emotes can be played
			Idle = true,
			Emote = true
		},

		AnimationSpeedAdjust = { -- Humanoid.WalkSpeed / AnimationSpeedAdjust = AnimationSpeed
			Walk = 9,
			Run = 16,
			Climb = 6, -- (Humanoid.RigType == Enum.HumanoidRigType.R15 and 4) or 12, -- R6 and R15 speed must be different (roblox's skill issue)
			Swim = 10,
		},
		
		DirectionAdjust = { 
			Swim = CFrame.Angles(math.rad(90), 0, 0), -- Fix for swim
		},
		
		SwitchIgnore = {
			Jump = true,
		},
		
		SpeedRange = NumberRange.new(
			0.4, 
			9
			--[[
				-math.huge - 0.4 == Idle
				0.4 - 9 == Walk
				9 - math.huge == Run
			]]
		),
		
		TimerMax = { -- Wait until play random animation from same class
			Idle = NumberRange.new(5, 8),
		},
		
		Timer = {
			Idle = 0,
		}
	},
	
	_Inverse = {
		Enabled = true,
		
		Directions = {
			BackwardRight = true, 
			BackwardLeft = true, 
			Backward = true,
			Down = true, -- For climb
		}
	},
	
	_Animation = {},
	
	_Events_Enabled = {
		NewMoveDirection = true,
		NewState = true,
		NewAnimation = true,
		KeyframeReached = true,
	},
}

return Module
]]></ProtectedString>
							<string name="ScriptGuid">{E1CD3033-38A3-47AC-B78D-DFEFB91634D6}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">BetterAnimate_DefaultSettings</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d72</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX7923CA182C5549BD822486751FC9A3B6">
						<Properties>
							<Content name="LinkedSource"><null></null></Content>
							<ProtectedString name="Source"><![CDATA[--!strict
--!native

--[[ EXAMPLE WHAT YOU CAN USE

	? -- Not must have
	
	Idle = {
		Idle1 = (
		180426354 
		or
		`rbxassetid://180426354` 
		or 
		Instance.new(`Animation`))	
		or
		{
			[MUST HAVE ID OR INSTANCE]
			ID = 180426354 or `rbxassetid://180426354` ?
			Instance = Instance.new(`Animation`) ?
			Weight = 10 ?
			Index = any ?
		}
	}
]]

return {
	R6 = {
		Idle = 	{ -- "Random" idle animation
			Idle1 = { ID = 180435571, Weight = 80 },
			Idle2 = { ID = 180435792, Weight = 20 },
		},
		Walk = 		{ Walk1 =		180426354 }, 
		Run = 		{ Run1 =		180426354 },
		Swim = 		{ Swim1 =		180426354 },
		Swimidle = 	{ Swimidle1 =	180426354 }, 
		Jump = 		{ Jump1 =		125750702 }, 
		Fall = 		{ Fall1 =	 	180436148 }, 
		Climb =		{ Climb1 =		180436334 }, 
		Sit = 		{ Sit1 =		178130996 },	
		Toolnone = 	{ Toolnone1 = 	182393478 },
		Temp = 		{ Temp1 =		15609995579 }, -- r15 animation for r6
		--Wave = 		{ Wave1 =		{ ID = "128777973", Weight = 10 } },
		--Point = 	{ Point1 =		{ ID = "128853357", Weight = 10 } },
		--Dance = 	{ 
		--	Dance1 ={ ID = "182435998", Weight = 10 },
		--	Dance2 ={ ID = "182436842", Weight = 10 },
		--	Dance3 ={ ID = "182436935", Weight = 10 },
		--},
		--Laugh = 	{ Laugh1 =		{ ID = "129423131",   Weight = 10 } },
		--Cheer = 	{ Cheer1 =		{ ID = "129423030",   Weight = 10 } },
		--Emote =     { { } },
	},

	R15 = {
		Idle = 	{ -- "Random" idle animation
			Idle1 = { ID = 507766666, Weight = 20 },
			Idle2 = { ID = 507766951, Weight = 20 },
			Idle3 = { ID = 507766388, Weight = 80 }
		},
		Walk = 		{ Walk1 =		507777826 }, 
		Run = 		{ Run1 =		507767714 }, 
		Swim = 		{ Swim1 =		507784897 },
		Swimidle = 	{ Swimidle1 =	507785072 }, 
		Jump = 		{ Jump1 =		507765000 }, 
		Fall = 		{ Fall1 =	 	507767968 }, 
		Climb = 	{ Climb1 =		507765644 }, 
		Sit = 		{ Sit1 =		2506281703 },	
		Toolnone = 	{ Toolnone1 = 	507768375 },
		Temp = 		{ Temp1 =		27789359 }, -- r6 animation for r15
		--Wave = 		{ Wave1 =		{ ID = "507770239",  Weight = 10 } },
		--Point = 	{ Point1 =		{ ID = "507770453",  Weight = 10 } },
		--Dance = 	{
		--	Dance1 ={ ID = "507772104", Weight = 10 },
		--	Dance2 ={ ID = "507776879", Weight = 10 },
		--	Dance3 ={ ID = "507777623", Weight = 10 },
		--},
		--Laugh = 	{ Laugh1 =		{ ID = "507770818", Weight = 10 } },
		--Cheer = 	{ Cheer1 =		{ ID = "507770677", Weight = 10 } },
		--Emote =     { { } },
	},
}
]]></ProtectedString>
							<string name="ScriptGuid">{2934AA03-2C39-473E-B3B7-4875B24A7DC7}</string>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">BetterAnimate_DefaultAnimations</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d73</UniqueId>
						</Properties>
					</Item>
					<Item class="BillboardGui" referent="RBX082E6D63E19040A496ED560ACCA122AB">
						<Properties>
							<bool name="Active">true</bool>
							<Ref name="Adornee">null</Ref>
							<bool name="AlwaysOnTop">false</bool>
							<float name="Brightness">1</float>
							<bool name="ClipsDescendants">true</bool>
							<float name="DistanceLowerLimit">0</float>
							<float name="DistanceUpperLimit">-1</float>
							<Vector3 name="ExtentsOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="ExtentsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LightInfluence">1</float>
							<float name="MaxDistance">INF</float>
							<Ref name="PlayerToHideFrom">null</Ref>
							<UDim2 name="Size">
								<XS>5</XS>
								<XO>0</XO>
								<YS>3.5</YS>
								<YO>0</YO>
							</UDim2>
							<Vector2 name="SizeOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector3 name="StudsOffset">
								<X>0</X>
								<Y>5.5</Y>
								<Z>0</Z>
							</Vector3>
							<Vector3 name="StudsOffsetWorldSpace">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<bool name="Enabled">false</bool>
							<bool name="ResetOnSpawn">true</bool>
							<token name="ZIndexBehavior">1</token>
							<bool name="AutoLocalize">true</bool>
							<Ref name="RootLocalizationTable">null</Ref>
							<token name="SelectionBehaviorDown">0</token>
							<token name="SelectionBehaviorLeft">0</token>
							<token name="SelectionBehaviorRight">0</token>
							<token name="SelectionBehaviorUp">0</token>
							<bool name="SelectionGroup">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
							<string name="Name">BetterAnimate_Debug</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d74</UniqueId>
						</Properties>
						<Item class="Frame" referent="RBXB349B3A3E27F44278903B3607741E403">
							<Properties>
								<token name="Style">0</token>
								<bool name="Active">false</bool>
								<Vector2 name="AnchorPoint">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<token name="AutomaticSize">0</token>
								<Color3 name="BackgroundColor3">
									<R>1</R>
									<G>1</G>
									<B>1</B>
								</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">
									<R>0</R>
									<G>0</G>
									<B>0</B>
								</Color3>
								<token name="BorderMode">0</token>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<bool name="Interactable">true</bool>
								<int name="LayoutOrder">0</int>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<int name="SelectionOrder">0</int>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
								<bool name="AutoLocalize">true</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
								<string name="Name">Main</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d75</UniqueId>
							</Properties>
							<Item class="TextLabel" referent="RBXB523C225A89144FDB0D1038DE75BCB59">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Tracks: 0</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Total</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d76</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXE622CC079B114D0C936F8029CCD77024">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d77</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="UIGridLayout" referent="RBXC9C45F5A1B704980AB1796261AB62980">
								<Properties>
									<UDim2 name="CellPadding">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<UDim2 name="CellSize">
										<XS>0.333000004</XS>
										<XO>0</XO>
										<YS>0.333000004</YS>
										<YO>0</YO>
									</UDim2>
									<int name="FillDirectionMaxCells">0</int>
									<token name="StartCorner">0</token>
									<token name="FillDirection">0</token>
									<token name="HorizontalAlignment">1</token>
									<token name="SortOrder">2</token>
									<token name="VerticalAlignment">1</token>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">UIGridLayout</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d78</UniqueId>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX134472A2369748C7B7D388070CC57FCE">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Class: Idle</string>
									<Color3 name="TextColor3">
										<R>0.984313786</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Class</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d79</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXE0B70748816F4926B2ED4FAD5826AEDE">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d7a</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXD1B9A6856EF2467289330D3859C84E34">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Direction: Forward</string>
									<Color3 name="TextColor3">
										<R>0.0666666701</R>
										<G>1</G>
										<B>0</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Direction</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d7b</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXB8C25034A08640F19D052C818955C042">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d7c</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXBB62AE83B7794A9882A892ED9178C776">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Timer: 0.0</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>1</G>
										<B>0.850980461</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Timer</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d7d</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX89B2250D15B6476DB9ACAB40277FD29F">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d7e</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXB034752AD69E456B8B546FD357492B5E">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">ID: 123456789</string>
									<Color3 name="TextColor3">
										<R>0</R>
										<G>0.384313762</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">ID</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d7f</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX2BCC79422F9940E7A4B2E8BC1715645B">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d80</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX68E5160D3FCC4997BB260E75ABA10656">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">Speed: 0</string>
									<Color3 name="TextColor3">
										<R>0.831372619</R>
										<G>0</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">Speed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d81</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBXD0B2FF7E1F0445DE956A6C4D4175046A">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d82</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBXF815B455F2EC4B61B08861A438D13B98">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">State: Test</string>
									<Color3 name="TextColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">State</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d83</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX0B4DFE52098D4564B831194BDB6E33AB">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d84</UniqueId>
									</Properties>
								</Item>
							</Item>
							<Item class="TextLabel" referent="RBX456DFF950AE14EE2B34A40D7422E5479">
								<Properties>
									<Font name="FontFace">
										<Family><url>rbxasset://fonts/families/Zekton.json</url></Family>
										<Weight>400</Weight>
										<Style>Normal</Style>
									</Font>
									<float name="LineHeight">1</float>
									<string name="LocalizationMatchIdentifier"></string>
									<string name="LocalizationMatchedSourceText"></string>
									<int name="MaxVisibleGraphemes">-1</int>
									<string name="OpenTypeFeatures"></string>
									<bool name="RichText">false</bool>
									<string name="Text">State: Test</string>
									<Color3 name="TextColor3">
										<R>0.0392156877</R>
										<G>0.48627454</G>
										<B>0.262745112</B>
									</Color3>
									<token name="TextDirection">0</token>
									<bool name="TextScaled">true</bool>
									<float name="TextSize">14</float>
									<Color3 name="TextStrokeColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<token name="TextTruncate">0</token>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">0</token>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<bool name="Interactable">true</bool>
									<int name="LayoutOrder">0</int>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>0.300000012</XS>
										<XO>0</XO>
										<YS>0.300000012</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
									<bool name="AutoLocalize">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
									<string name="Name">AnimationSpeed</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d85</UniqueId>
								</Properties>
								<Item class="UIStroke" referent="RBX0C37A04B7F8C4BCD9C46C4C0E3ED069F">
									<Properties>
										<token name="ApplyStrokeMode">0</token>
										<UDim name="BorderOffset">
											<S>0</S>
											<O>0</O>
										</UDim>
										<token name="BorderStrokePosition">0</token>
										<Color3 name="Color">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="Enabled">true</bool>
										<token name="LineJoinMode">0</token>
										<token name="StrokeSizingMode">0</token>
										<float name="Thickness">2</float>
										<float name="Transparency">0</float>
										<int name="ZIndex">1</int>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
										<bool name="DefinesCapabilities">false</bool>
										<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
										<string name="Name">UIStroke</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<UniqueId name="UniqueId">0d9cbe9c375a905d08a2391200000d86</UniqueId>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXF12A167D9D7B48879CBF90D3EB81CEEB">
			<Properties>
				<ProtectedString name="Source"><![CDATA[--[[
	Module located at StarterPlayer -> StarterCharacterScripts -> Animate
]]]]></ProtectedString>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<token name="RunContext">0</token>
				<string name="ScriptGuid">{2207EA3F-BBB6-4360-8305-7CE4BCC2F9C3}</string>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">README</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">586901dfd7d63a4608ca1fd50000093f</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="ServerScriptService" referent="RBX4D078206396148CEA40EF3B40622D5D6">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000346</UniqueId>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBXE559D59F1F8549778296B9C567BA079C">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000347</UniqueId>
		</Properties>
	</Item>
	<Item class="ServiceVisibilityService" referent="RBX73485760E37C47358AE1562246BB62B2">
		<Properties>
			<BinaryString name="HiddenServices">AAAAAA==</BinaryString>
			<BinaryString name="VisibleServices">AAAAAA==</BinaryString>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ServiceVisibilityService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100004c0d</UniqueId>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBX7830383B02AB4B6B88EE0153E0508530">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000363</UniqueId>
		</Properties>
	</Item>
	<Item class="DataStoreService" referent="RBX47A2DD18F6914D89B07FDAA4541343B9">
		<Properties>
			<bool name="AutomaticRetry">true</bool>
			<bool name="LegacyNamingScheme">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">DataStoreService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000366</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBXD2A4894B032E4FFEA64EB1A3A0980A31">
		<Properties>
			<Color3 name="Ambient">
				<R>0.247058839</R>
				<G>0.513725519</G>
				<B>0.529411793</B>
			</Color3>
			<float name="Brightness">2.29999995</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="EnvironmentDiffuseScale">1</float>
			<float name="EnvironmentSpecularScale">0</float>
			<float name="ExposureCompensation">0</float>
			<token name="ExtendLightRangeTo120">0</token>
			<Color3 name="FogColor">
				<R>0.752941251</R>
				<G>0.752941251</G>
				<B>0.752941251</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">-21.1548805</float>
			<bool name="GlobalShadows">true</bool>
			<token name="LightingStyle">0</token>
			<Color3 name="OutdoorAmbient">
				<R>0.603921592</R>
				<G>0.674509823</G>
				<B>0.670588255</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<bool name="PrioritizeLightingQuality">true</bool>
			<float name="ShadowSoftness">0.200000003</float>
			<token name="Technology">4</token>
			<string name="TimeOfDay">-06:43:06</string>
			<BinaryString name="AttributesSerialize"><![CDATA[AgAAACYAAABSQlhfTGlnaHRpbmdUZWNobm9sb2d5VW5pZmllZE1pZ3JhdGlvbgMBIAAAAFJC
WF9PcmlnaW5hbFRlY2hub2xvZ3lPbkZpbGVMb2FkBAQAAAA=]]></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Lighting</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000367</UniqueId>
		</Properties>
		<Item class="Sky" referent="RBX7C63D692E160466EB7FD68F731EC99E1">
			<Properties>
				<bool name="CelestialBodiesShown">true</bool>
				<float name="MoonAngularSize">11</float>
				<Content name="MoonTextureId"><url>rbxassetid://6444320592</url></Content>
				<Content name="SkyboxBk"><url>rbxassetid://6444884337</url></Content>
				<Content name="SkyboxDn"><url>rbxassetid://6444884785</url></Content>
				<Content name="SkyboxFt"><url>rbxassetid://6444884337</url></Content>
				<Content name="SkyboxLf"><url>rbxassetid://6444884337</url></Content>
				<Vector3 name="SkyboxOrientation">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="SkyboxRt"><url>rbxassetid://6444884337</url></Content>
				<Content name="SkyboxUp"><url>rbxassetid://6412503613</url></Content>
				<int name="StarCount">3000</int>
				<float name="SunAngularSize">11</float>
				<Content name="SunTextureId"><url>rbxassetid://6196665106</url></Content>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Sky</string>
				<int64 name="SourceAssetId">332039975</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000378</UniqueId>
			</Properties>
		</Item>
		<Item class="SunRaysEffect" referent="RBXDFF36249AA7042A496ED1A78A1511B6B">
			<Properties>
				<float name="Intensity">0.00999999978</float>
				<float name="Spread">0.100000001</float>
				<bool name="Enabled">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">SunRays</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000379</UniqueId>
			</Properties>
		</Item>
		<Item class="Atmosphere" referent="RBX5C45067083DD47CDB79734B3DCE3B883">
			<Properties>
				<Color3 name="Color">
					<R>0.619607866</R>
					<G>0.78039223</G>
					<B>0.760784388</B>
				</Color3>
				<Color3 name="Decay">
					<R>0.41568628</R>
					<G>0.43921569</G>
					<B>0.490196079</B>
				</Color3>
				<float name="Density">0.300000012</float>
				<float name="Glare">0</float>
				<float name="Haze">0</float>
				<float name="Offset">0</float>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Atmosphere</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000037a</UniqueId>
			</Properties>
		</Item>
		<Item class="BloomEffect" referent="RBXBF9100B2177D4A008C8143159FCA94C0">
			<Properties>
				<float name="Intensity">1</float>
				<float name="Size">24</float>
				<float name="Threshold">2</float>
				<bool name="Enabled">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">Bloom</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000037b</UniqueId>
			</Properties>
		</Item>
		<Item class="DepthOfFieldEffect" referent="RBX688260FAD31646E38132A5B4AD5A0B1E">
			<Properties>
				<float name="FarIntensity">0.100000001</float>
				<float name="FocusDistance">0.0500000007</float>
				<float name="InFocusRadius">30</float>
				<float name="NearIntensity">0.75</float>
				<bool name="Enabled">false</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
				<string name="Name">DepthOfField</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000037c</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="LodDataService" referent="RBX546B03A01339430C95AE5DCC48B27D63">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000368</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBXDF831CD138B2418D9F7828BC0802D9AF">
		<Properties>
			<bool name="Enabled">true</bool>
			<int name="MaxIndicatorsVisible">16</int>
			<int name="MaxPromptsVisible">16</int>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af2100000369</UniqueId>
		</Properties>
	</Item>
	<Item class="Teams" referent="RBXD987A9DA12F54C8B99F8488DEF29FD67">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">Teams</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000036a</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBX757DFEF9A73F41E2B2E0269666F825B1">
		<Properties>
			<bool name="AutoRuns">true</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<bool name="ThrottlePhysicsToRealtime">true</bool>
			<double name="Timeout">10</double>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">TestService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000036b</UniqueId>
		</Properties>
	</Item>
	<Item class="UGCAvatarService" referent="RBX61C8E91531BB435FA03943A8A16B320D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">UGCAvatarService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">75b80f531ed98f0306e5af210000036c</UniqueId>
		</Properties>
	</Item>
	<Item class="VideoService" referent="RBXA28533EE687D4F07A7E9DD734EB39DB7">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VideoService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">17795fc463eae85508cb5fc9000003ae</UniqueId>
		</Properties>
	</Item>
	<Item class="VoiceChatService" referent="RBXE6BCA760E74541F9909D1CEABE947CE8">
		<Properties>
			<token name="DefaultDistanceAttenuation">0</token>
			<bool name="EnableDefaultVoice">true</bool>
			<token name="UseAudioApi">1</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<SecurityCapabilities name="Capabilities">0</SecurityCapabilities>
			<bool name="DefinesCapabilities">false</bool>
			<UniqueId name="HistoryId">00000000000000000000000000000000</UniqueId>
			<string name="Name">VoiceChatService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">365691665f9426f306e5e5ba000041cd</UniqueId>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="WZV0PabLnwuMGe+sc607AQ==">Q1NHUEhTBwAAAAKXP2FANZL3uLBWHD+gQN8+jBReQAD5R7rAwQm6U5f3P8G9f7+JfWhAEAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzkAAAAEAAAAAAAAABg4KT4F
B2A/lucBvxg4KT4FB2A/lucBv+quS75IAF8/AAAAAIi+Pb5IAF8/AAAAAIeJDj4Ocbo+AGBQ
uIF/Gj54hJM9AGBQuBg4KT6bVxE/lucBvxg4KT6+ERY+AAAAAARglr6oySI+lucBv+quS754
hJM9sirSvQRglr54hJM9IBTHvQRglr7gpbU9iBu3vQRglr4wwOY9kFOyvQRglr6sZvU9KBwI
vQRglr6oySI+AAAAAI7t+T3WEZg+AGBQuIi+Pb54hJM9VxkAvxg4KT54hJM9AAAAAFM9F76o
ySI+ZgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAAEgAA
AAAAAAASAAAADwAAAAAAAAAPAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAG
AAAAEQAAAAAAAAARAAAABwAAAAAAAAAHAAAAAQAAAAEAAAAHAAAACQAAAAEAAAAJAAAAAgAA
AAIAAAAIAAAAAwAAAAIAAAAJAAAACgAAAAIAAAAKAAAACwAAAAIAAAALAAAADAAAAAIAAAAM
AAAADQAAAAIAAAANAAAADgAAAAIAAAAOAAAACAAAAAQAAAAPAAAABQAAAAUAAAAQAAAACgAA
AAUAAAAKAAAACQAAAAUAAAAJAAAAEQAAAAUAAAARAAAABgAAAAUAAAAPAAAAEgAAAAUAAAAS
AAAACAAAAAUAAAAIAAAAEAAAAAcAAAARAAAACQAAAAgAAAAOAAAADQAAAAgAAAANAAAADAAA
AAgAAAAMAAAACwAAAAgAAAALAAAACgAAAAgAAAAKAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8zAAAABAAAAAAAAADz4fA+SYZqPwBgULgOzB8/g9Vv
PwAAAADik2k+XC5iPwAAAADRt4U+EGABPwBgULgOzB8/MaQGP5bnAb8OzB8/g9VvP5bnAb/4
bko+ECRhPwAAAAAYOCk+Bv5fP1cZAL8YOCk+eISTPQBgULhj/J8+/f36PgBgULjvjAI/zOf6
PgBgULgYOCk+1lgRP5bnAb/2Rio+eISTPcJ/vL4OzB8/MaQGP5bnAb8OzB8/+uEMP5bnAb8Y
OCk+Bv5fP5bnAb8YOCk+tAoWPloAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAcAAAAAAAAABwAA
AAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABQAAAAYAAAABAAAABgAAAAIAAAAB
AAAABAAAAA0AAAABAAAADQAAAA4AAAABAAAADgAAAAUAAAACAAAABgAAAAcAAAADAAAACAAA
AAkAAAADAAAACQAAAAoAAAADAAAACgAAAAQAAAADAAAABwAAAAsAAAADAAAACwAAAAgAAAAE
AAAACgAAAAgAAAAEAAAACAAAAAwAAAAEAAAADAAAAA0AAAAFAAAADgAAAAwAAAAFAAAADAAA
ABAAAAAFAAAAEAAAAA8AAAAFAAAADwAAAAYAAAAGAAAADwAAAAcAAAAHAAAADwAAABAAAAAH
AAAAEAAAAAgAAAAHAAAACAAAAAsAAAAIAAAACgAAAAkAAAAIAAAAEAAAAAwAAAAMAAAADgAA
AA0AAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/VAAAAAQAAACW
54G/V1kaPwsnPj9oH1u/DswfP4TVbz87/YC/DswfPwsnPj87UIG/bjYfPwojAT+W54G/Vq8b
PwojAT/w2Fu/0ERCvdT+Xj8EDTS/DswfP4TVbz9Zl1K/IsYavtT+Xj/p2UW/PMI9vtT+Xj8C
IhO/OM5VvtT+Xj8xNoG/DswfPwojAT/w2Fu/wC7OvAojAT/w2Fu/WNMJvTslIT9/fFe/WPe1
vQojAT9Zl1K/IsYavgojAT/W6gG/DswfP77Sbz892ku/Xk8tvgojAT/p2UW/PMI9vgojAT8C
IhO/OM5VvgojAT/W6gG/2rNLvtT+Xj8tsyO/DswfPwojAT/W6gG/DswfP8HkDD/W6gG/2rNL
vgojAT+MbA2/DswfP07XCD+nihy/AKQPPwojAT/W6gG/3HTjPhUGBj/CvQq/wH7MPgojAT/W
6gG/h5OgPgojAT+cAAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAA
AAQAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAYAAAAPAAAAAQAAAA8AAAAVAAAAAQAAABUAAAAX
AAAAAQAAABcAAAAUAAAAAQAAABQAAAAKAAAAAQAAAAoAAAACAAAAAQAAAAUAAAAHAAAAAQAA
AAcAAAAIAAAAAQAAAAgAAAAJAAAAAQAAAAkAAAAGAAAAAgAAAAoAAAADAAAAAwAAAAoAAAAU
AAAAAwAAABQAAAAYAAAAAwAAABgAAAAaAAAAAwAAABoAAAAbAAAAAwAAABsAAAAWAAAAAwAA
ABYAAAASAAAAAwAAABIAAAARAAAAAwAAABEAAAAQAAAAAwAAABAAAAAOAAAAAwAAAA4AAAAN
AAAAAwAAAA0AAAALAAAAAwAAAAsAAAAEAAAABAAAAAsAAAAMAAAABAAAAAwAAAAFAAAABQAA
AAwAAAANAAAABQAAAA0AAAAOAAAABQAAAA4AAAAHAAAABgAAAAkAAAAPAAAABwAAAA4AAAAQ
AAAABwAAABAAAAAIAAAACAAAABEAAAASAAAACAAAABIAAAAJAAAACAAAABAAAAARAAAACQAA
ABIAAAAWAAAACQAAABYAAAATAAAACQAAABMAAAAPAAAACwAAAA0AAAAMAAAADwAAABMAAAAW
AAAADwAAABYAAAAbAAAADwAAABsAAAAZAAAADwAAABkAAAAVAAAAFAAAABcAAAAYAAAAFQAA
ABkAAAAaAAAAFQAAABoAAAAXAAAAFwAAABoAAAAYAAAAGQAAABsAAAAaAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP1oAAAAEAAAAlueBv1avGz9FIAE/OFCB
v242Hz9FIAE/maGBvw7MHz+qmpM9lueBv44gHj+qmpM93FplvwB5RzuqmpM9fJFcv6RpDL6E
T4Q+Mdtbv8AuzrxFIAE/LTaBvw7MHz9FIAE/QsZXvw7MHz+qmpM9IbWBvyZRHz94hJM9zZpk
v2Dv9LuqmpM9fJFcv6RpDL47kzg+F+plv+6vmT14hJM9nttFvzzCPb5FIAE/GNxLv15PLb5F
IAE/HpZSvyLGGr5FIAE/Y3tXv1j3tb1FIAE/xrAjvw7MHz9FIAE/lucBv4dGKj6qmpM9U1RX
v44gHj94hJM9HpZSvyLGGr6qmpM9nttFvzzCPb6qmpM9645Xv+6vmT14hJM9MB8TvzjOVb6q
mpM9MB8TvzjOVb5FIAE/EogcvwCkDz9FIAE/lucBv9qzS76qmpM9uroKv8B+zD5FIAE/lucB
v4eToD5FIAE/lucBv9qzS75FIAE/qAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAAD
AAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAAEAAAAAAAAAAQAAAADwAA
AAAAAAAPAAAADgAAAAAAAAAOAAAADQAAAAAAAAANAAAAGAAAAAAAAAAYAAAAHQAAAAAAAAAd
AAAAHAAAAAAAAAAcAAAAGwAAAAAAAAAbAAAAGQAAAAAAAAAZAAAAEQAAAAAAAAARAAAABwAA
AAAAAAAHAAAAAQAAAAEAAAAHAAAAAgAAAAIAAAAHAAAAEQAAAAIAAAARAAAACAAAAAIAAAAI
AAAACQAAAAIAAAAJAAAAAwAAAAMAAAAJAAAABAAAAAQAAAAKAAAACwAAAAQAAAALAAAABQAA
AAQAAAAJAAAADAAAAAQAAAAMAAAACgAAAAUAAAALAAAAFQAAAAUAAAAVAAAADQAAAAUAAAAN
AAAADgAAAAUAAAAOAAAADwAAAAUAAAAPAAAAEAAAAAUAAAAQAAAABgAAAAgAAAARAAAAEgAA
AAgAAAASAAAAEwAAAAgAAAATAAAACQAAAAkAAAATAAAAFgAAAAkAAAAWAAAADAAAAAoAAAAM
AAAAFAAAAAoAAAAUAAAACwAAAAsAAAAUAAAAFQAAAAwAAAAWAAAAFwAAAAwAAAAXAAAAFQAA
AAwAAAAVAAAAFAAAAA0AAAAVAAAAFwAAAA0AAAAXAAAAGAAAABEAAAAZAAAAEgAAABIAAAAa
AAAAEwAAABIAAAAZAAAAGwAAABIAAAAbAAAAHAAAABIAAAAcAAAAHQAAABIAAAAdAAAAGgAA
ABMAAAAaAAAAFgAAABYAAAAaAAAAFwAAABcAAAAaAAAAHQAAABcAAAAdAAAAGAAAABAAAAAA
AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9jAAAABAAAAPzjAb8dRFS/OYBT
PvzjAb9v1lW/OqJkPvzjAb+WZVW/guZAPmpkc7/tdGi/0UWpPvzjAb+4ylq/2mSLPvzjAb+j
sVW/48g8PvlLfb9WlHG/eUl4PqDJeb/Q7G6/HIStPoR1br9WlHG/TyXZPvzjAb8Cyli/IAAS
PvzjAb+rEGK/q3+QPu99fr/5V4K/ByppPoT+gL/FCXi/Ft6KPvzjAb9StGC/PWgKPvzjAb/m
R2m/sBEDPiOSdr/FCXi/3pbSPlKnbL/5V4K/+oDkPvzjAb/90Wu/29CWPvlLfb8ziIq/eUl4
Pvzjgb+wX4O/DkmSPvF6Wb904Ze/ayRrPtUjaL+VE5u/fpJ+PvzjAb+kp3e/IAASPsiLeb+w
X4O/x2HSPiQIcr80KJC/qo3OPoR1br8ziIq/TyXZPk30a7904Ze/oYzKPmlLXb+VE5u/mNXA
PkOfTr904Ze/pCK3PvzjAb8HCHq/2mSLPrnMdr904Ze/SACJPtHjfL80KJC/UQGNPvzjAb/e
oXi/vI5IProAAAAAAAAAAQAAAAQAAAAAAAAABAAAAAoAAAAAAAAACgAAABEAAAAAAAAAEQAA
AB0AAAAAAAAAHQAAACAAAAAAAAAAIAAAABYAAAAAAAAAFgAAAA4AAAAAAAAADgAAAA0AAAAA
AAAADQAAAAkAAAAAAAAACQAAAAUAAAAAAAAABQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAA
AAEAAAABAAAAAwAAAAQAAAACAAAABQAAAAMAAAADAAAABgAAAAcAAAADAAAABwAAAAgAAAAD
AAAACAAAAAQAAAADAAAABQAAAAkAAAADAAAACQAAAAYAAAAEAAAACAAAAAoAAAAGAAAACwAA
AAwAAAAGAAAADAAAAAcAAAAGAAAACQAAAA0AAAAGAAAADQAAAA4AAAAGAAAADgAAAAsAAAAH
AAAADAAAAA8AAAAHAAAADwAAAAgAAAAIAAAADwAAABAAAAAIAAAAEAAAAAoAAAAKAAAAEAAA
ABEAAAALAAAAEgAAABMAAAALAAAAEwAAAAwAAAALAAAADgAAABQAAAALAAAAFAAAABUAAAAL
AAAAFQAAABIAAAAMAAAAEwAAAA8AAAAOAAAAFgAAABQAAAAPAAAAEwAAABcAAAAPAAAAFwAA
ABAAAAAQAAAAFwAAABgAAAAQAAAAGAAAABkAAAAQAAAAGQAAABoAAAAQAAAAGgAAABsAAAAQ
AAAAGwAAABEAAAARAAAAGwAAABwAAAARAAAAHAAAAB0AAAASAAAAFQAAAB4AAAASAAAAHgAA
AB8AAAASAAAAHwAAABMAAAATAAAAHwAAABcAAAAUAAAAFgAAABwAAAAUAAAAHAAAABUAAAAV
AAAAGwAAABoAAAAVAAAAGgAAAB4AAAAVAAAAHAAAABsAAAAWAAAAIAAAABwAAAAXAAAAHwAA
ABgAAAAYAAAAGgAAABkAAAAYAAAAHwAAABoAAAAaAAAAHwAAAB4AAAAcAAAAIAAAAB0AAAAQ
AAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/SwAAAAQAAABQJoq9CRab
v5oDdT9QJoq90+KXv36UZT8AkDW3CRabv5oDdT9QJoq90+KXv5A8gj95rsK9vIiKvzJshD+6
ZOK9MFiCvzJshD8AkDW30+KXv36UZT9HK5u9mzlqv/hrEj84NX29kYp4v/hrEj8AAAAAkYp4
v/hrEj8AkDW30+KXv5A8gj9QJoq9MCiQv/hvhT9BMHy9QWCDv7EziT/E+5W9YAh4v0vJhz95
rsK9N5NxvzJshD+WO4y9Cjdhv/hrEj8AkDW3aiVUv/hrEj8AkDW3v6lnv+y+gD8AkDW304Zo
vxMlgz8AkDW3nvRuv8J7hj8AkDW3uQpvv2GFhj8AkDW3QWCDv7EziT8AkDW3MCiQv/hvhT84
NX29dYdZv/hrEj9sF4e8km5Vv/hrEj+KAAAAAAAAAAEAAAAGAAAAAAAAAAYAAAACAAAAAAAA
AAIAAAAKAAAAAAAAAAoAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAB
AAAAAQAAAAUAAAAHAAAAAQAAAAcAAAAIAAAAAQAAAAgAAAAJAAAAAQAAAAkAAAAGAAAAAgAA
AAYAAAAJAAAAAgAAAAkAAAAKAAAAAwAAAAoAAAAWAAAAAwAAABYAAAALAAAAAwAAAAsAAAAE
AAAABAAAAAsAAAAMAAAABAAAAAwAAAAFAAAABQAAAAwAAAANAAAABQAAAA0AAAAOAAAABQAA
AA4AAAAPAAAABQAAAA8AAAAHAAAABwAAAA8AAAAXAAAABwAAABcAAAAYAAAABwAAABgAAAAQ
AAAABwAAABAAAAAJAAAABwAAAAkAAAAIAAAACQAAABAAAAARAAAACQAAABEAAAASAAAACQAA
ABIAAAATAAAACQAAABMAAAAUAAAACQAAABQAAAAVAAAACQAAABUAAAAWAAAACQAAABYAAAAK
AAAACwAAABYAAAAVAAAACwAAABUAAAAMAAAADAAAABUAAAANAAAADQAAABUAAAAUAAAADQAA
ABQAAAAOAAAADgAAABQAAAATAAAADgAAABMAAAASAAAADgAAABIAAAARAAAADgAAABEAAAAX
AAAADgAAABcAAAAPAAAAEAAAABgAAAARAAAAEQAAABgAAAAXAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP1QAAAAEAAAA/OMBv5gFer+hYos+dEV9vXCIeL/D
aBI//OMBv+HMa79Q1ZY+/OMBv56kd7/QDRI+AAAAAHCIeL/DaBI/ujebvW81ar/DaBI/+kOM
vTMsYb/DaBI/dEV9vdaFWb/DaBI//OMBv6MLYr9FhZA+/OMBv3lEab+8HwM+Qr5vvtfhWb8g
npM9zPsqvivVYr8gnpM9AAAAAI8IX78gnpM9AAAAAMghVL/DaBI/+BOHvF5qVb/DaBI/XBgI
vQRglr7KvCI+/OMBv0fBWr+hYos+/OMBv2dwYr+G7wg+3iTSvQRglr4gnpM9AAAAAARglr7K
vCI+3vqYvQRglr7y7AM+nk6yvQRglr4EavU9fjC3vQRglr7kyOY9/OMBvyLPVb+rnmQ+/OMB
vyatYL9McAo+/OMBv3NAVL8ViVM+/OMBvxHFWL/QDRI+/OMBvzldVb+68kA+nAAAAAAAAAAB
AAAAAgAAAAAAAAACAAAACAAAAAAAAAAIAAAAEAAAAAAAAAAQAAAAFwAAAAAAAAAXAAAAGQAA
AAAAAAAZAAAAGwAAAAAAAAAbAAAAGgAAAAAAAAAaAAAAGAAAAAAAAAAYAAAAEQAAAAAAAAAR
AAAACQAAAAAAAAAJAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAADQAA
AAEAAAANAAAADgAAAAEAAAAOAAAABwAAAAEAAAAHAAAABgAAAAEAAAAGAAAABQAAAAEAAAAF
AAAAAgAAAAIAAAAFAAAABgAAAAIAAAAGAAAABwAAAAIAAAAHAAAACAAAAAMAAAAJAAAACgAA
AAMAAAAKAAAACwAAAAMAAAALAAAADAAAAAMAAAAMAAAABAAAAAQAAAAMAAAAEwAAAAQAAAAT
AAAADQAAAAcAAAAOAAAADwAAAAcAAAAPAAAAEAAAAAcAAAAQAAAACAAAAAkAAAARAAAAEgAA
AAkAAAASAAAACgAAAAoAAAASAAAADAAAAAoAAAAMAAAACwAAAAwAAAASAAAAEwAAAA0AAAAT
AAAADwAAAA0AAAAPAAAADgAAAA8AAAATAAAAEgAAAA8AAAASAAAAFgAAAA8AAAAWAAAAFQAA
AA8AAAAVAAAAFAAAAA8AAAAUAAAAEAAAABAAAAAUAAAAFQAAABAAAAAVAAAAFgAAABAAAAAW
AAAAFwAAABEAAAAYAAAAEgAAABIAAAAZAAAAFwAAABIAAAAXAAAAFgAAABIAAAAYAAAAGgAA
ABIAAAAaAAAAGwAAABIAAAAbAAAAGQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAgD+KAAAABAAAAJbngb+J4ZE+/3i4vsc+gL9KYI8+NtvLvjMHf7+I8Cg+ZDm7
vjsKgb+kjzw+6fWqvpbngb+OIB4/fISTPZbngb8boeY+RWS3vvDYgb8Odh4/FA64vsc+gL/a
zeo+s0jKvjHbW7/IE5i8ihPWvn4ZVL9G/Aa+ihPWvh6WUr8ixhq+ihPWvuTLdb9s3lo9eRF+
vpBsd7+qkLA9ejtsvtxaZb8AeUc7fISTPZmhgb8OzB8/fISTPZbngb8WMR8/mpzhvZbngb/I
ihI/7CKevvDYgb8OzB8/01KxvrKPgb8OzB8/RWS3vh3SVr8Odh4/FA64vrEJWr/azeo+s0jK
vjAfE7+pgB4+1BnWvp7bRb8tywg+ihPWvkKAUL9iKeI9ihPWvh6WUr9jz9g9ihPWvpbnAb/a
s0u+1BnWvp7bRb88wj2+ihPWvh6WUr8ixhq+VGuTPc2aZL9g7/S7VGuTPZ7bRb88wj2+VGuT
PdZaV79g7/S7fISTPSG1gb8OzB8/UD4KvHOiV78mUR8/fISTPULGV78OzB8/VGuTPerLgb8O
zB8/E+jhvZbngb+HuRo/z6hZvttnV78OzB8/RWS3vpbnAb8LPBU+1BnWvpbnAb/as0u+VGuT
PTAfE784zlW+ihPWvjAfE784zlW+VGuTPYWXVr8AeUc7fISTPZbnAb+HRio+VGuTPR3SVr8O
zB8/01KxvpbnAb8qfxs+AHXAvpbnAb+HRio+qND9vQgBAAAAAAAAAQAAAAIAAAAAAAAAAgAA
AAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAA8AAAAAAAAADwAAACMAAAAAAAAAIwAAABAAAAAA
AAAAEAAAAAUAAAAAAAAABQAAAAYAAAAAAAAABgAAAAEAAAABAAAABgAAAAcAAAABAAAABwAA
AAgAAAABAAAACAAAAAkAAAABAAAACQAAAAoAAAABAAAACgAAAAIAAAACAAAACgAAAAsAAAAC
AAAACwAAAAMAAAADAAAACwAAAAwAAAADAAAADAAAAA0AAAADAAAADQAAAAQAAAAEAAAADgAA
AA8AAAAEAAAADQAAAB4AAAAEAAAAHgAAACkAAAAEAAAAKQAAACAAAAAEAAAAIAAAAA4AAAAF
AAAAEAAAAAYAAAAGAAAAEQAAABIAAAAGAAAAEgAAACQAAAAGAAAAJAAAABMAAAAGAAAAEwAA
ABQAAAAGAAAAFAAAAAcAAAAGAAAAEAAAABEAAAAHAAAAFAAAABUAAAAHAAAAFQAAABYAAAAH
AAAAFgAAABcAAAAHAAAAFwAAABgAAAAHAAAAGAAAAAgAAAAIAAAAGAAAABUAAAAIAAAAFQAA
ABkAAAAIAAAAGQAAAAkAAAAJAAAAGQAAAAoAAAAKAAAAGQAAABoAAAAKAAAAGgAAAB0AAAAK
AAAAHQAAABsAAAAKAAAAGwAAAAsAAAALAAAADQAAAAwAAAALAAAAGwAAABwAAAALAAAAHAAA
AA0AAAANAAAAHAAAABsAAAANAAAAGwAAAB0AAAANAAAAHQAAAB4AAAAOAAAAHwAAAA8AAAAO
AAAAIAAAACEAAAAOAAAAIQAAACsAAAAOAAAAKwAAACQAAAAOAAAAJAAAABIAAAAOAAAAEgAA
ABEAAAAOAAAAEQAAACIAAAAOAAAAIgAAAB8AAAAPAAAAHwAAACIAAAAPAAAAIgAAABEAAAAP
AAAAEQAAACMAAAAQAAAAIwAAABEAAAATAAAAJAAAACUAAAATAAAAJQAAABQAAAAUAAAAJQAA
ABUAAAAVAAAAJQAAABkAAAAVAAAAGAAAABcAAAAVAAAAFwAAABYAAAAZAAAAJgAAACgAAAAZ
AAAAKAAAACcAAAAZAAAAJwAAABoAAAAZAAAAJQAAACwAAAAZAAAALAAAAC0AAAAZAAAALQAA
ACoAAAAZAAAAKgAAACYAAAAaAAAAJwAAACgAAAAaAAAAKAAAAB0AAAAdAAAAKAAAAB4AAAAe
AAAAKAAAACYAAAAeAAAAJgAAACkAAAAgAAAAKgAAACEAAAAgAAAAKQAAACoAAAAhAAAAKgAA
ACsAAAAkAAAAKwAAACUAAAAlAAAAKwAAACwAAAAmAAAAKgAAACkAAAAqAAAALQAAACsAAAAr
AAAALQAAACwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/gQAA
AAQAAAAkIBO/Os5VvqR0Y7/OnRy/t+ctvqR0Y7+W5wG/nuI1vm6xZ7+W5wG/SLZLvlK/Zr+C
kgS/ZkdNvtMZ1r4kIBO/Os5VvtMZ1r6l2EW/icE9vgYgIr/AzUO/icE9vmCEP78wHTu/icE9
vnYZV7+G2ke/WMYavnYZV79WG1G/dF5CvRIGVb9TgCO/XAFUvUBhYb+W5wG/ao0hvhqEaL+W
5wG/SLZLvh0g1r6CkgS//5QWPtMZ1r6l2EW/icE9vtMZ1r49mFK/WMYavgYgIr8Wi1C/WMYa
vmCEP7/my1m/KbEuvWCEP7+G2ke/ZEVMPSASU7/OnRy/OOBxPU5tX78Wi1C/2ipyPWCEP7+W
5wG/qLhFvbi3Z7+W5wG/MSkVPh0g1r6Ndhu/sjUbPtMZ1r4kIBO/6nMePh0g1r49mFK/WMYa
vtMZ1r4M2Vu/lasJvQYgIr89mFK/zxWdPQYgIr8wHTu/OeiePRrbTL8kIBO/jpS5PUg2Wb/A
zUO/89qxPWCEP7+W5wG/OK5ZPeh/ZL+W5wG/E8O8vOr3Zr+W5wG/m+jCPWlJVL8kIBO/7CbP
Pbz+UL+l2EW/rsjVPQYgIr+l2EW/PLwIPtMZ1r7nG1S/Ef0GvtMZ1r4M2Vu/AeiYvNMZ1r49
mFK/8rLYPdMZ1r6W5wG/F26uPfaAXL+W5wG/GHiMPZ3QYL/2AAAAAAAAAAEAAAACAAAAAAAA
AAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAPAAAAAAAAAA8AAAAG
AAAAAAAAAAYAAAAHAAAAAAAAAAcAAAAIAAAAAAAAAAgAAAAJAAAAAAAAAAkAAAABAAAAAQAA
AAkAAAAKAAAAAQAAAAoAAAALAAAAAQAAAAsAAAAMAAAAAQAAAAwAAAACAAAAAgAAAAwAAAAW
AAAAAgAAABYAAAAhAAAAAgAAACEAAAAgAAAAAgAAACAAAAAqAAAAAgAAACoAAAApAAAAAgAA
ACkAAAAiAAAAAgAAACIAAAAXAAAAAgAAABcAAAANAAAAAgAAAA0AAAADAAAAAwAAAA0AAAAE
AAAABAAAAA4AAAAYAAAABAAAABgAAAAlAAAABAAAACUAAAAoAAAABAAAACgAAAAnAAAABAAA
ACcAAAAmAAAABAAAACYAAAAaAAAABAAAABoAAAAPAAAABAAAAA8AAAAFAAAABAAAAA0AAAAX
AAAABAAAABcAAAAOAAAABgAAAA8AAAAaAAAABgAAABoAAAAQAAAABgAAABAAAAAHAAAABwAA
ABAAAAARAAAABwAAABEAAAAJAAAABwAAAAkAAAAIAAAACQAAABEAAAASAAAACQAAABIAAAAK
AAAACgAAABMAAAAUAAAACgAAABQAAAALAAAACgAAABIAAAAVAAAACgAAABUAAAATAAAACwAA
ABYAAAAMAAAACwAAABQAAAAWAAAADgAAABcAAAAZAAAADgAAABkAAAAYAAAAEAAAABsAAAAS
AAAAEAAAABIAAAARAAAAEAAAABoAAAAbAAAAEgAAABsAAAAcAAAAEgAAABwAAAAVAAAAEwAA
AB0AAAAeAAAAEwAAAB4AAAAUAAAAEwAAABUAAAAfAAAAEwAAAB8AAAAdAAAAFAAAAB4AAAAg
AAAAFAAAACAAAAAhAAAAFAAAACEAAAAWAAAAFQAAABwAAAAfAAAAFwAAACIAAAAZAAAAGAAA
ABkAAAAjAAAAGAAAACMAAAAkAAAAGAAAACQAAAAlAAAAGQAAACIAAAAjAAAAGgAAACYAAAAb
AAAAGwAAACYAAAAnAAAAGwAAACcAAAAoAAAAGwAAACgAAAAcAAAAHAAAACQAAAAfAAAAHAAA
ACgAAAAlAAAAHAAAACUAAAAkAAAAHQAAACMAAAAeAAAAHQAAAB8AAAAjAAAAHgAAACkAAAAq
AAAAHgAAACoAAAAgAAAAHgAAACMAAAApAAAAHwAAACQAAAAjAAAAIgAAACkAAAAjAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP28AAAAEAAAAAAAAAARglr5A
bjy9AAAAACtGF75I2EK9AGBQuG2AGj54hJM9AGBQuNDFPb54hJM9sirSvQRglr54hJM9KBwI
vQRglr5Abjy9lucBv16yS74IvGa/AGBQuNDFPb5Ehm2/AAAAACTKnj3iRmO/AAAAACL5+D2z
aAC/AGBQuDHmHD6gu/88lucBvxxFKj54hJM9lucBv16yS754hJM98HDcvQRglr5YS2c9kFOy
vQRglr5AnuC7lucBv6rXNb4wtme/Bi3UvtDFPb5oS2u/FoPmvjbHGr5oS2u/AGBQuDbHGr5E
hm2/FoPmvrRXTD0lSWe/Bi3UviTKnj2cBWG/lucBv5xfrj0Rg1y/lucBv5zAwj3QRFS/AGBQ
uKbgsT0MD1u/AGBQuEmRQr3kcWu/AGBQuLRXTD0sd2m/AGBQuMXcEz7kipq+AGBQuDHmHD4+
aQu+lucBvxxFKj6wmcM8lucBv0aOIb7aiWi/lucBv4pBRr2avGe/GN3zvkmRQr2eMGm/lucB
v57ZvLwt/Ga/lucBvwSfWT0tgWS/lucBv+BYjD1M0mC/lucBv31sGz65hsC+lucBv045Kj6s
9/290gAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAADQAA
AAAAAAANAAAADgAAAAAAAAAOAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAABwAAAAAAAAAH
AAAACAAAAAAAAAAIAAAACQAAAAAAAAAJAAAAAQAAAAEAAAAJAAAAAgAAAAIAAAAJAAAACgAA
AAIAAAAKAAAACwAAAAIAAAALAAAADAAAAAIAAAAMAAAABAAAAAIAAAAEAAAAAwAAAAQAAAAM
AAAADQAAAAUAAAAOAAAABgAAAAYAAAAPAAAAEAAAAAYAAAAQAAAABwAAAAYAAAAOAAAADQAA
AAYAAAANAAAADAAAAAYAAAAMAAAACwAAAAYAAAALAAAAHAAAAAYAAAAcAAAAJAAAAAYAAAAk
AAAAIwAAAAYAAAAjAAAAFgAAAAYAAAAWAAAAFQAAAAYAAAAVAAAAIgAAAAYAAAAiAAAAIQAA
AAYAAAAhAAAAIAAAAAYAAAAgAAAAHgAAAAYAAAAeAAAAHQAAAAYAAAAdAAAADwAAAAcAAAAQ
AAAAEQAAAAcAAAARAAAAEgAAAAcAAAASAAAACAAAAAgAAAATAAAAFAAAAAgAAAAUAAAAFQAA
AAgAAAAVAAAAFgAAAAgAAAAWAAAAFwAAAAgAAAAXAAAACQAAAAgAAAASAAAAGAAAAAgAAAAY
AAAAGQAAAAgAAAAZAAAAEwAAAAkAAAAaAAAAGwAAAAkAAAAbAAAACgAAAAkAAAAXAAAAGgAA
AAoAAAAbAAAAHAAAAAoAAAAcAAAACwAAAA8AAAAdAAAAEQAAAA8AAAARAAAAEAAAABEAAAAd
AAAAHgAAABEAAAAeAAAAHwAAABEAAAAfAAAAEgAAABIAAAAfAAAAGAAAABMAAAAgAAAAIQAA
ABMAAAAhAAAAIgAAABMAAAAiAAAAFQAAABMAAAAVAAAAFAAAABMAAAAZAAAAHwAAABMAAAAf
AAAAIAAAABYAAAAjAAAAFwAAABcAAAAjAAAAGgAAABgAAAAfAAAAGQAAABoAAAAjAAAAJAAA
ABoAAAAkAAAAGwAAABsAAAAkAAAAHAAAAB4AAAAgAAAAHwAAABAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9IAAAABAAAAAAAAAAIDF+/eISTPb0Iz70UkyO/eIST
PX0AK75K2mK/eISTPUBSzr6E73u/pmvGvqHkmb6wY3i/i3HGvv/Sfb5Gjna/pmvGvgAAAAAI
DF+/+sMmvQAAAAAUkyO/aHosvUYF2L0UkyO/3DJvPbhMzr7XX1y/pmvGvjynb77u31m/eIST
Pciv3L6ONW6/pmvGvsQapb5TJHm/i3HGvunfdb4MPW+/i3HGvkVga74sI2i/i3HGvqUEpb7n
gFS/pmvGvljlBL0UkyO/aHosvYl0c75PEWC/i3HGvv/Sfb473le/i3HGvjj1mb4KUVW/i3HG
vnyzzL0UkyO/qIopPRhO1L5JVmO/pmvGvoyhrr0UkyO/QKB0u/nurr6aRFa/pmvGvoQAAAAA
AAAAAQAAAAoAAAAAAAAACgAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAA
AAUAAAAAAAAABQAAAAYAAAAAAAAABgAAAAcAAAAAAAAABwAAAAEAAAABAAAACAAAAAkAAAAB
AAAACQAAAAoAAAABAAAABwAAABAAAAABAAAAEAAAABYAAAABAAAAFgAAABQAAAABAAAAFAAA
AAgAAAACAAAACgAAAAMAAAADAAAACwAAAAwAAAADAAAADAAAAAQAAAADAAAACgAAAAsAAAAE
AAAADAAAABMAAAAEAAAAEwAAABIAAAAEAAAAEgAAABEAAAAEAAAAEQAAAA4AAAAEAAAADgAA
AA0AAAAEAAAADQAAAAUAAAAFAAAADQAAAA4AAAAFAAAADgAAAAYAAAAGAAAADgAAAAcAAAAH
AAAADwAAABAAAAAHAAAADgAAABEAAAAHAAAAEQAAABIAAAAHAAAAEgAAABMAAAAHAAAAEwAA
AA8AAAAIAAAAFAAAAAkAAAAJAAAAFQAAAAoAAAAJAAAAFAAAABYAAAAJAAAAFgAAABcAAAAJ
AAAAFwAAABMAAAAJAAAAEwAAABUAAAAKAAAAFQAAAAsAAAALAAAAFQAAABMAAAALAAAAEwAA
AAwAAAAPAAAAFgAAABAAAAAPAAAAEwAAABcAAAAPAAAAFwAAABYAAAAQAAAAAAAAAAAAAAAA
AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/JwAAAAQAAADjFNK9BGCWvniEkz1PWNe9BGCW
vuVLgz2w6tC9FxrcvniEkz28BM+93pAjv3iEkz0AsLC33pAjv+JYLL0AsDC3BGCWvmQYPL12
Wdy9BGCWvhg9Zz1o7de93pAjvwIvbz3p6wS93pAjv+JYLL0oEgi9BGCWvmQYPL0YPrK9BGCW
vgj53rtcnq693pAjv3Clcbv0O8+93pAjvzKaOT1CAAAAAAAAAAEAAAACAAAAAAAAAAIAAAAD
AAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAJAAAAAAAAAAkAAAAKAAAAAAAA
AAoAAAAGAAAAAAAAAAYAAAABAAAAAQAAAAYAAAADAAAAAQAAAAMAAAACAAAAAwAAAAcAAAAM
AAAAAwAAAAwAAAALAAAAAwAAAAsAAAAIAAAAAwAAAAgAAAAEAAAAAwAAAAYAAAAHAAAABAAA
AAgAAAAJAAAABAAAAAkAAAAFAAAABgAAAAoAAAALAAAABgAAAAsAAAAMAAAABgAAAAwAAAAH
AAAACAAAAAsAAAAJAAAACQAAAAsAAAAKAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA
AAAAAAAAAAAAAACAP10AAAAEAAAAArITv+Zeg78Z4li/MZ4Pvz0KeL8cb1i/IvMDv9hXgr+C
yli/Ux8Hv72Hir8ha1a/jbAOvw0pkL8AUlO/mZouv+Zeg7+6okS/+7Utvz0KeL+Ex0G/oEUd
v8Hrbr968kq/Ux8HvwmUcb8ha1a/i7Hvvgvhl7/s2DW/TEsBvwgWm79HDkK/i2ZrvrEpaL9w
d8a+18MKvwvhl7+hQ06/av8pvw0pkL+mLD6/RB8uv72Hir+YDDm/j+Qyv9hXgr+TejW/RB8u
vwmUcb+YDDm/xiUZv4x1aL9ZnUW/VvyZvgFVVb9wd8a+Vut9vl7iV79wd8a+KYhzvu8VYL9w
d8a+Vut9vkqWdr+Kcca+oycTvwvhl7+hsCC/KZocvwgWm78I4yy/sg8mvwvhl79WGzm/bbTc
vpE7br+Kcca+oVDUvkZdY7+Kcca+gljOvmBlXL+Kcca+1viuvrVJVr+Kcca+ABSlvnSHVL+K
cca+hl7Ovof1e7+Kcca+rgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAA
AAAAAAAEAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAABgAAAAEAAAAGAAAABwAAAAEAAAAH
AAAACAAAAAEAAAAIAAAAAgAAAAIAAAAJAAAACgAAAAIAAAAKAAAAAwAAAAIAAAAIAAAACwAA
AAIAAAALAAAACQAAAAMAAAAKAAAADAAAAAMAAAAMAAAABAAAAAQAAAAMAAAADQAAAAQAAAAN
AAAABQAAAAUAAAANAAAADgAAAAUAAAAOAAAADwAAAAUAAAAPAAAABgAAAAYAAAAPAAAAEAAA
AAYAAAAQAAAABwAAAAcAAAARAAAACAAAAAcAAAAQAAAAEQAAAAgAAAASAAAAEwAAAAgAAAAT
AAAAFAAAAAgAAAAUAAAACwAAAAgAAAARAAAAEgAAAAkAAAALAAAAFQAAAAkAAAAVAAAAFgAA
AAkAAAAWAAAAFwAAAAkAAAAXAAAACgAAAAoAAAAXAAAAGAAAAAoAAAAYAAAADAAAAAsAAAAU
AAAAFQAAAAwAAAAYAAAADQAAAA0AAAAYAAAADgAAAA4AAAAYAAAADwAAAA8AAAAYAAAAFwAA
AA8AAAAXAAAAGQAAAA8AAAAZAAAAEAAAABAAAAAZAAAAGgAAABAAAAAaAAAAGwAAABAAAAAb
AAAAEQAAABEAAAAbAAAAHAAAABEAAAAcAAAAHQAAABEAAAAdAAAAEgAAABIAAAAdAAAAEwAA
ABMAAAAVAAAAFAAAABMAAAAdAAAAFQAAABUAAAAeAAAAFgAAABUAAAAdAAAAHAAAABUAAAAc
AAAAGwAAABUAAAAbAAAAGgAAABUAAAAaAAAAGQAAABUAAAAZAAAAHgAAABYAAAAeAAAAGQAA
ABYAAAAZAAAAFwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9d
AAAABAAAAJbnAT/as0u+zSUBPzAfEz84zlW+zSUBP5bnAT/as0u+DPxeP5bnAT+Hk6A+ByMB
PzAfEz84zlW+DPxeP57bRT88wj2+zSUBP5bnAT8OzB8/g9VvP7q6Cj/Afsw+zSUBPxKIHD8A
pA8/zSUBP8awIz8OzB8/zSUBP8lyWD8OzB8/ByMBP8c+gD/4PhA/ByMBP5bnAT/cdOM+EgYG
P57bRT88wj2+DPxeP2MeWz8OzB8/g9VvPxjcSz9eTy2+zSUBP5bnAT8OzB8/vuQMP5VpDT8O
zB8/hdQIPy02gT8OzB8/ByMBP8VwgT+/fRg/ByMBP2N7Vz9Y97W9zSUBPx6WUj8ixhq+zSUB
Px6WUj8ixhq+DPxeP5bngT9XWRo/CSc+P9b+gD8OzB8/CSc+PzHbWz/QREK9DPxeP/E/gT/2
mx8/ByMBPzhQgT9uNh8/ByMBP5bngT9Wrxs/zSUBPzHbWz/ALs68zSUBPzHbWz9Y0wm9/ych
P64AAAAAAAAAAQAAAAQAAAAAAAAABAAAAAIAAAAAAAAAAgAAAAYAAAAAAAAABgAAABAAAAAA
AAAAEAAAAAwAAAAAAAAADAAAAAMAAAAAAAAAAwAAAAEAAAABAAAAAwAAAAUAAAABAAAABQAA
AA0AAAABAAAADQAAAAQAAAACAAAABAAAAAYAAAADAAAABwAAAAgAAAADAAAACAAAAAkAAAAD
AAAACQAAAAoAAAADAAAACgAAABIAAAADAAAAEgAAABoAAAADAAAAGgAAABsAAAADAAAAGwAA
ABMAAAADAAAAEwAAAAsAAAADAAAACwAAAAUAAAADAAAADAAAAAcAAAAEAAAADQAAAA4AAAAE
AAAADgAAAAYAAAAFAAAACwAAAA8AAAAFAAAADwAAAA0AAAAGAAAADgAAABgAAAAGAAAAGAAA
ABIAAAAGAAAAEgAAAAoAAAAGAAAACgAAAAkAAAAGAAAACQAAABEAAAAGAAAAEQAAABAAAAAH
AAAADAAAABAAAAAHAAAAEAAAABEAAAAHAAAAEQAAAAgAAAAIAAAAEQAAAAkAAAALAAAAEwAA
ABQAAAALAAAAFAAAABUAAAALAAAAFQAAAA8AAAANAAAADwAAABYAAAANAAAAFgAAAA4AAAAO
AAAAFwAAABgAAAAOAAAAFgAAABkAAAAOAAAAGQAAABcAAAAPAAAAFQAAABYAAAASAAAAGAAA
ABoAAAATAAAAGwAAABwAAAATAAAAHAAAAB0AAAATAAAAHQAAABQAAAAUAAAAHQAAAB4AAAAU
AAAAHgAAABkAAAAUAAAAGQAAABUAAAAVAAAAGQAAABYAAAAXAAAAGQAAABwAAAAXAAAAHAAA
ABgAAAAYAAAAHAAAABoAAAAZAAAAHgAAABwAAAAaAAAAHAAAABsAAAAcAAAAHgAAAB0AAAAQ
AAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/VwAAAAQAAACW5wE/2rNL
vtSwkz0wHxM/OM5VvtSwkz2W5wE/2rNLvggjAT+W5wE/h0YqPtSwkz0wHxM/OM5VvggjAT+e
20U/PMI9vtSwkz2W5wE/bvQFPggjAT+W5wE/h5OgPkIgAT+6ugo/wH7MPggjAT8SiBw/AKQP
PwgjAT/GsCM/DswfPwgjAT9Cxlc/DswfP9Swkz2e20U/PMI9vggjAT8ellI/IsYavtSwkz18
kVw/pGkMvjWTOD7xuyc/DswfPwgjAT+ZoYE/DswfP9Swkz18kVw/pGkMvoBPhD4Y3Es/Xk8t
vggjAT/NmmQ/YO/0u9Swkz3cWmU/AHlHO9Swkz0tNoE/DswfP0IgAT8FaVg/9psfPwgjAT/x
P4E/9psfP0IgAT+W54E/Vq8bPwgjAT+W54E/jiAeP9Swkz0x21s/wC7OvAgjAT9je1c/WPe1
vQgjAT8ellI/IsYavggjAT+iAAAAAAAAAAEAAAAEAAAAAAAAAAQAAAACAAAAAAAAAAIAAAAG
AAAAAAAAAAYAAAAHAAAAAAAAAAcAAAADAAAAAAAAAAMAAAALAAAAAAAAAAsAAAAQAAAAAAAA
ABAAAAAZAAAAAAAAABkAAAAUAAAAAAAAABQAAAATAAAAAAAAABMAAAANAAAAAAAAAA0AAAAF
AAAAAAAAAAUAAAABAAAAAQAAAAUAAAAMAAAAAQAAAAwAAAAEAAAAAgAAAAQAAAAMAAAAAgAA
AAwAAAASAAAAAgAAABIAAAAcAAAAAgAAABwAAAAbAAAAAgAAABsAAAAaAAAAAgAAABoAAAAY
AAAAAgAAABgAAAAWAAAAAgAAABYAAAAPAAAAAgAAAA8AAAAKAAAAAgAAAAoAAAAJAAAAAgAA
AAkAAAAIAAAAAgAAAAgAAAAGAAAAAwAAAAcAAAAIAAAAAwAAAAgAAAAJAAAAAwAAAAkAAAAK
AAAAAwAAAAoAAAALAAAABQAAAA0AAAAOAAAABQAAAA4AAAARAAAABQAAABEAAAAMAAAABgAA
AAgAAAAHAAAACgAAAA8AAAAVAAAACgAAABUAAAAQAAAACgAAABAAAAALAAAADAAAABEAAAAS
AAAADQAAABMAAAAOAAAADgAAABMAAAAUAAAADgAAABQAAAARAAAADwAAABYAAAAVAAAAEAAA
ABUAAAAXAAAAEAAAABcAAAAYAAAAEAAAABgAAAAZAAAAEQAAABoAAAAbAAAAEQAAABsAAAAc
AAAAEQAAABwAAAASAAAAEQAAABQAAAAYAAAAEQAAABgAAAAaAAAAFAAAABkAAAAYAAAAFQAA
ABYAAAAYAAAAFQAAABgAAAAXAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAA
AAAAAACAPzAAAAAEAAAAlucBPxo4KT4FB2A/AAAAABo4KT4FB2A/lucBP7C6S75IAF8/lucB
Pxo4KT6+ERY+AAAAABo4KT6bVxE/AAAAAE/KPb5IAF8/AAAAAARglr6oySI+aLgIPQRglr6o
ySI+poeyPQRglr6sZvU96gW4PQRglr4c8uU9xu3PPQRglr7UDJw96KzSPQRglr54hJM9lucB
P7C6S754hJM9VxkAPxo4KT54hJM9AAAAAIR/Gj54hJM9AAAAAE/KPb54hJM9VAAAAAAAAAAB
AAAAAgAAAAAAAAACAAAADAAAAAAAAAAMAAAAAwAAAAAAAAADAAAADQAAAAAAAAANAAAABAAA
AAAAAAAEAAAAAQAAAAEAAAAEAAAADgAAAAEAAAAOAAAADwAAAAEAAAAPAAAABgAAAAEAAAAG
AAAABQAAAAEAAAAFAAAAAgAAAAIAAAAFAAAABgAAAAIAAAAGAAAABwAAAAIAAAAHAAAACAAA
AAIAAAAIAAAACQAAAAIAAAAJAAAACgAAAAIAAAAKAAAACwAAAAIAAAALAAAADAAAAAMAAAAM
AAAADQAAAAQAAAANAAAADgAAAAYAAAAPAAAACwAAAAYAAAALAAAACgAAAAYAAAAKAAAACQAA
AAYAAAAJAAAACAAAAAYAAAAIAAAABwAAAAsAAAAPAAAADgAAAAsAAAAOAAAADQAAAAsAAAAN
AAAADAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD85AAAABAAA
AJbnAT8dyR8/g9VvP2xTZz0dyR8/g9VvP5bnAT/8bko+ECRhP5bnAT8dyR8/+uEMP353eD4P
zB8/MaQGPwAAAAAdyR8/989vPwAAAAD14fA+SYZqPwAAAADmk2k+XC5iPwAAAAAcOCk+Bv5f
P5bnAT8cOCk+Bv5fP5bnAT/6Rio+eISTPcJ/vD4dyR8/MaQGPwAAAAAdyR8/MaQGPwAAAAAc
OCk+1lgRP5bnAT8cOCk+tAoWPlcZAD8cOCk+eISTPQAAAADwjAI/zOf6PgAAAADTt4U+EGAB
PwAAAABl/J8+/f36PmYAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAkAAAAAAAAACQAAAA4AAAAA
AAAADgAAAAoAAAAAAAAACgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAA
AAUAAAABAAAABQAAAAYAAAABAAAABgAAAAcAAAABAAAABwAAAAIAAAACAAAABwAAAAgAAAAC
AAAACAAAAAkAAAADAAAACgAAAAsAAAADAAAACwAAAAQAAAAEAAAADAAAAAUAAAAEAAAACwAA
AAoAAAAEAAAACgAAAAwAAAAFAAAADAAAABAAAAAFAAAAEAAAABIAAAAFAAAAEgAAABEAAAAF
AAAAEQAAAA0AAAAFAAAADQAAAAgAAAAFAAAACAAAAAcAAAAFAAAABwAAAAYAAAAIAAAADQAA
AA8AAAAIAAAADwAAAA4AAAAIAAAADgAAAAkAAAAKAAAADgAAAA8AAAAKAAAADwAAAAwAAAAM
AAAADwAAABAAAAANAAAAEQAAAA8AAAAPAAAAEQAAABIAAAAPAAAAEgAAABAAAAAQAAAAAAAA
AAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/VAAAAAQAAAAAIEM3CRabv5oDdT9t
IYo9CRabv5oDdT8AIEM3L+KXv5A8gj8AAACyB4ZovxMlgz8AIEM3L+KXv36UZT9tIYo9L+KX
v36UZT+hgvM9J1iCvzJshD9tIYo9L+KXv5A8gj8AIEM3sCmQv/hvhT8AIEM3Ml+Dv7EziT8A
IEM3xghvv2GFhj8AIEM3MfBuv8J7hj+AKT06XHJovxMlgz8AIEM3sq1nv+y+gD8AIEM36idU
v/hrEj8AIEM3hYp4v/hrEj/ceX89hYp4v/hrEj/xtqo9Jzlqv/hrEj+D1sM94YeKvzJshD+D
1sM9xpFxvzJshD/yGJc9Ogh4v0vJhz8QL489Ml+Dv7EziT9tIYo9sCmQv/hvhT8AuIQ60ehu
vyyChj+AMYM6yhFUv/hrEj/u6448amxVv/hrEj+ZNpQ9yDRhv/hrEj/ceX89lIhZv/hrEj+c
AAAAAAAAAAEAAAAHAAAAAAAAAAcAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAA
AAQAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAAGAAAAAQAAAAYAAAAHAAAAAgAAAAcAAAAW
AAAAAgAAABYAAAAIAAAAAgAAAAgAAAADAAAAAwAAAAgAAAAJAAAAAwAAAAkAAAAKAAAAAwAA
AAoAAAALAAAAAwAAAAsAAAAMAAAAAwAAAAwAAAANAAAAAwAAAA0AAAAOAAAAAwAAAA4AAAAP
AAAAAwAAAA8AAAAEAAAABAAAAA8AAAAQAAAABAAAABAAAAAFAAAABQAAABAAAAARAAAABQAA
ABEAAAAGAAAABgAAABIAAAAHAAAABgAAABEAAAATAAAABgAAABMAAAAUAAAABgAAABQAAAAV
AAAABgAAABUAAAASAAAABwAAABIAAAAWAAAACAAAABYAAAAVAAAACAAAABUAAAAJAAAACQAA
ABUAAAAUAAAACQAAABQAAAAKAAAACgAAABQAAAAXAAAACgAAABcAAAALAAAACwAAABcAAAAM
AAAADAAAABgAAAAOAAAADAAAAA4AAAANAAAADAAAABcAAAATAAAADAAAABMAAAAZAAAADAAA
ABkAAAAYAAAADgAAABgAAAAZAAAADgAAABkAAAAbAAAADgAAABsAAAAaAAAADgAAABoAAAAR
AAAADgAAABEAAAAQAAAADgAAABAAAAAPAAAAEQAAABoAAAATAAAAEgAAABUAAAAWAAAAEwAA
ABcAAAAUAAAAEwAAABoAAAAbAAAAEwAAABsAAAAZAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQ
AAAAAAAAAAAAAAAAAAAAAACAP10AAAAEAAAAAAAAAJWEeL/DaBI/AAAAALAKX78gnpM9pYMB
P+akd7+x4B0+pYMBP9B7eL8mKkk+pYMBP8o2er+h/5E+iJR/PZWEeL/DaBI/AAAAADolVL/D
aBI/cpcjPvJhYr8gnpM9AAAAAANglr7KvCI+ksDSPQNglr4gnpM9pYMBPygFcL8G2xI+pYMB
P+rsa78tnps+4MqqPVI2ar/DaBI/AMC1ORIYVL/DaBI/7aMqPlqlYb8gnpM9ANKBOkwPVL/D
aBI/FLcIPQNglr7KvCI+pYMBP1BIVL9GaF4+pYMBP8ppVb+bxUw+pYMBPwzBWL+x4B0+pYMB
Pyovab96PAk+f69xPhD0Wb8gnpM9jAPQPQNglr6CIpw9pYMBPzXgVb/apHA+pYMBP+4oYr/8
W5c+iJR/PQeCWb/DaBI/7kaUPe4uYb/DaBI/wDSPPMppVb/DaBI/pYMBP6zpWr+h/5E+FJqy
PQNglr4EavU9KPq3PQNglr4I4uU9rgAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAAD
AAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAADAAAAAAAAAAMAAAAGgAAAAAAAAAaAAAAGQAA
AAAAAAAZAAAAGwAAAAAAAAAbAAAADwAAAAAAAAAPAAAADQAAAAAAAAANAAAABgAAAAAAAAAG
AAAACAAAAAAAAAAIAAAAAQAAAAEAAAAHAAAAAgAAAAEAAAAIAAAACQAAAAEAAAAJAAAAFQAA
AAEAAAAVAAAADgAAAAEAAAAOAAAABwAAAAIAAAAHAAAACgAAAAIAAAAKAAAAFAAAAAIAAAAU
AAAAEwAAAAIAAAATAAAAEgAAAAIAAAASAAAAEQAAAAIAAAARAAAAFwAAAAIAAAAXAAAAHAAA
AAIAAAAcAAAAGAAAAAIAAAAYAAAACwAAAAIAAAALAAAABAAAAAIAAAAEAAAAAwAAAAQAAAAL
AAAABQAAAAUAAAALAAAADAAAAAYAAAANAAAACAAAAAcAAAAOAAAACgAAAAgAAAANAAAADwAA
AAgAAAAPAAAAEAAAAAgAAAAQAAAAHQAAAAgAAAAdAAAAHgAAAAgAAAAeAAAAFgAAAAgAAAAW
AAAACQAAAAkAAAARAAAAEgAAAAkAAAASAAAAEwAAAAkAAAATAAAAFAAAAAkAAAAUAAAAFQAA
AAkAAAAWAAAAFwAAAAkAAAAXAAAAEQAAAAoAAAAOAAAAFAAAAAsAAAAYAAAAGQAAAAsAAAAZ
AAAAGgAAAAsAAAAaAAAADAAAAA4AAAAVAAAAFAAAAA8AAAAbAAAAEAAAABAAAAAbAAAAGQAA
ABAAAAAZAAAAHAAAABAAAAAcAAAAHQAAABYAAAAeAAAAFwAAABcAAAAeAAAAHAAAABgAAAAc
AAAAGQAAABwAAAAeAAAAHQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA
AAAAgD9mAAAABAAAAKaDAT+wT1S/umpePqaDAT+Cc1W/yLZMPqaDAT9Q5FW/c6VwPmy2cT/Q
dGi/wja1PqaDAT9ay1i/B9MdPqaDAT8d81q/M/2RPpoIbD9fk3G/fjDlPrsWeD8Y7G6/Q4a5
PigyfD9fk3G/mBaJPqaDAT+KNmm/YTEJPigpfj/TV4K/Yqt7PqaDAT+TLmK/eV6XPhu3aj/T
V4K/4qzsPvY4dD+oCni/5hXfPhhZgD+oCni/lROYPhDkVz/B4Ze/uDB/PqaDAT92DXC/hNUS
PgaCgT9yX4O/dsubPigyfD+EiIq/mBaJPkLBdD/B4Ze/mJeVPklUZj/QFJu/FZqKPqaDAT9w
8Wu/65ibPkAFWj/QFJu/JSXLPnh1aD/B4Ze/qCLWPpoIbD+EiIq/fjDlPlLcdz9yX4O/Y1Hb
PkaYSz/B4Ze/bCPAPqaDAT8Eq3e/B9MdPqaDAT/0p3C/ibATPvi8ej//J5C/2h2aPqaDAT/G
OXq/M/2RPu5tbj//J5C/IK3aPqaDAT9+4Xm/W8KIPqaDAT/7k3i/yLZMPsAAAAAAAAAAAQAA
AAQAAAAAAAAABAAAAAkAAAAAAAAACQAAABAAAAAAAAAAEAAAABwAAAAAAAAAHAAAABsAAAAA
AAAAGwAAACEAAAAAAAAAIQAAACAAAAAAAAAAIAAAAB4AAAAAAAAAHgAAABUAAAAAAAAAFQAA
AAsAAAAAAAAACwAAAAUAAAAAAAAABQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAEAAAAB
AAAAAwAAAAQAAAACAAAABQAAAAYAAAACAAAABgAAAAMAAAADAAAABgAAAAcAAAADAAAABwAA
AAgAAAADAAAACAAAAAQAAAAEAAAACAAAAAoAAAAEAAAACgAAAAkAAAAFAAAACwAAAAYAAAAG
AAAADAAAAA0AAAAGAAAADQAAAAcAAAAGAAAACwAAAAwAAAAHAAAADgAAAAgAAAAHAAAADQAA
AA4AAAAIAAAADgAAAAoAAAAJAAAADwAAABAAAAAJAAAACgAAAA8AAAAKAAAADgAAABEAAAAK
AAAAEQAAABIAAAAKAAAAEgAAABMAAAAKAAAAEwAAABQAAAAKAAAAFAAAAA8AAAALAAAAFQAA
AAwAAAAMAAAAFQAAABYAAAAMAAAAFgAAABcAAAAMAAAAFwAAABgAAAAMAAAAGAAAABkAAAAM
AAAAGQAAAA0AAAANAAAAGQAAAA4AAAAOAAAAGQAAABEAAAAPAAAAFAAAABYAAAAPAAAAFgAA
ABoAAAAPAAAAGgAAABsAAAAPAAAAGwAAABwAAAAPAAAAHAAAABAAAAARAAAAHQAAABIAAAAR
AAAAGQAAAB0AAAASAAAAHQAAABMAAAATAAAAHQAAABcAAAATAAAAFwAAABQAAAAUAAAAFwAA
ABYAAAAVAAAAHgAAABoAAAAVAAAAGgAAABYAAAAXAAAAHQAAAB8AAAAXAAAAHwAAABgAAAAY
AAAAHwAAABkAAAAZAAAAHwAAAB0AAAAaAAAAHgAAACAAAAAaAAAAIAAAACEAAAAaAAAAIQAA
ABsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/ZgAAAAQAAACW
5wE/HEUqPniEkz2W5wE/jrtLvniEkz2W5wE/HEUqPqz3/b0AAAAAvt0cPqC7/zwAAAAAG34a
PniEkz3orNI9jJiYvniEkz0iEdg9jJiYvnjhgj0Epdw9jJiYvlhLZz2W5wE/jrtLvgi8Zr+W
5wE/ZWwbPrmGwL4AAAAAVtYTPuSKmr4AAAAAvt0cPj5pC74AAAAATLk9vniEkz0AAAAAjJiY
vqAHPL2mh7I9jJiYvkCe4LsAAAAATLk9vtp/bb8GLdQ+TLk9vmhLa7+W5wE/q+c1vjC2Z79o
uAg9jJiYvqAHPL2W5wE/8N3CPdBEVL8AAAAAPtWxPQwPW78AAAAAnrkavkSGbb8Wg+Y+nrka
vmhLa7+W5wE/DJEhvtqJaL+W5wE/kmOuPRGDXL8AAAAA+O+ePeJGY78AAAAAolBMPSx3ab8Y
3fM+MKJCvZ4wab+W5wE/CPxFvZq8Z7+W5wE/1oGMPUzSYL8Wg+Y+olBMPSVJZ78GLdQ++O+e
PZwFYb+W5wE/MpW8vC38Zr+W5wE/VohZPS2BZL/AAAAAAAAAAAEAAAAIAAAAAAAAAAgAAAAR
AAAAAAAAABEAAAAXAAAAAAAAABcAAAAcAAAAAAAAABwAAAAgAAAAAAAAACAAAAAhAAAAAAAA
ACEAAAAdAAAAAAAAAB0AAAAYAAAAAAAAABgAAAATAAAAAAAAABMAAAAJAAAAAAAAAAkAAAAC
AAAAAAAAAAIAAAALAAAAAAAAAAsAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAMAAAAAAAA
AAwAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAAGAAAAAQAAAAYAAAAHAAAAAQAAAAcAAAAI
AAAAAgAAAAkAAAAKAAAAAgAAAAoAAAALAAAAAwAAAAsAAAAKAAAAAwAAAAoAAAAUAAAAAwAA
ABQAAAAZAAAAAwAAABkAAAAaAAAAAwAAABoAAAAVAAAAAwAAABUAAAAPAAAAAwAAAA8AAAAN
AAAAAwAAAA0AAAAMAAAAAwAAAAwAAAAEAAAABQAAAAwAAAANAAAABQAAAA0AAAASAAAABQAA
ABIAAAAOAAAABQAAAA4AAAAHAAAABQAAAAcAAAAGAAAABwAAAA4AAAAIAAAACAAAAA8AAAAQ
AAAACAAAABAAAAARAAAACAAAAA4AAAASAAAACAAAABIAAAANAAAACAAAAA0AAAAPAAAACQAA
ABMAAAAUAAAACQAAABQAAAAKAAAADwAAABUAAAAWAAAADwAAABYAAAAQAAAAEAAAABYAAAAR
AAAAEQAAABYAAAAXAAAAEwAAABgAAAAZAAAAEwAAABkAAAAUAAAAFQAAABoAAAAbAAAAFQAA
ABsAAAAWAAAAFgAAABsAAAAcAAAAFgAAABwAAAAXAAAAGAAAAB0AAAAeAAAAGAAAAB4AAAAf
AAAAGAAAAB8AAAAZAAAAGQAAAB8AAAAeAAAAGQAAAB4AAAAaAAAAGgAAAB4AAAAbAAAAGwAA
AB4AAAAgAAAAGwAAACAAAAAcAAAAHQAAACEAAAAeAAAAHgAAACEAAAAgAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP4QAAAAEAAAAlucBP9qzS77SGda+MB8T
PzjOVb7SGda+lucBP9qzS75Ua5M9lucBPws8FT7SGda+MB8TPzjOVb5Ua5M9nttFPzzCPb7S
Gda+QsZXPw7MHz98hJM9lucBP4dGKj5Ua5M9lucBPyp/Gz60bsC+HdJWPw7MHz/SUrG+22dX
Pw7MHz9EZLe+HdJWPw52Hj/IB7i+sQlaP9rN6j6ySMq+MB8TP6mAHj7SGda+nttFPzzCPb5U
a5M9HpZSPyLGGr7SGda+maGBPw7MHz9Ua5M9HpZSPyLGGr5Ua5M9zZpkP2Dv9LtUa5M93Fpl
PwB5RztUa5M9lueBP44gHj9Ua5M9lucBP4dGKj6l0P29so+BPw7MHz9EZLe+8NiBPw52Hj/I
B7i+xz6AP9rN6j6ySMq+oXYbPwo/Gz7SGda+fhlUP0b8Br7SGda+xz6AP0pgjz7q1Mu+Mwd/
P4jwKD5iObu+5Mt1P2zeWj3iBH6+lueBPxYxHz+XnOG9IbWBPw7MHz9APgq8kGx3P6qQsD14
O2y+OwqBP6SPPD7o9aq+lueBP4nhkT7+eLi+8NiBPw7MHz/SUrG+lueBP8iKEj81KZ6+lueB
Pxuh5j5EZLe+MdtbP8gTmLzSGda+HpZSP2PP2D3SGda+QoBQP2Ip4j3SGda+nttFPy3LCD7S
Gda+lueBP4e5Gj84nFm+6suBPw7MHz8P6OG9/AAAAAAAAAABAAAABAAAAAAAAAAEAAAAAgAA
AAAAAAACAAAABwAAAAAAAAAHAAAAFQAAAAAAAAAVAAAACAAAAAAAAAAIAAAAAwAAAAAAAAAD
AAAADQAAAAAAAAANAAAAGQAAAAAAAAAZAAAAKQAAAAAAAAApAAAAKAAAAAAAAAAoAAAAJwAA
AAAAAAAnAAAAJgAAAAAAAAAmAAAAGgAAAAAAAAAaAAAADwAAAAAAAAAPAAAABQAAAAAAAAAF
AAAAAQAAAAEAAAAFAAAADgAAAAEAAAAOAAAABAAAAAIAAAAEAAAABgAAAAIAAAAGAAAABwAA
AAMAAAAIAAAACQAAAAMAAAAJAAAACgAAAAMAAAAKAAAACwAAAAMAAAALAAAADAAAAAMAAAAM
AAAADQAAAAQAAAAOAAAABgAAAAUAAAAPAAAAEQAAAAUAAAARAAAADgAAAAYAAAAQAAAAHwAA
AAYAAAAfAAAAKwAAAAYAAAArAAAAIwAAAAYAAAAjAAAAFgAAAAYAAAAWAAAACgAAAAYAAAAK
AAAACQAAAAYAAAAJAAAABwAAAAYAAAAOAAAAEQAAAAYAAAARAAAAEgAAAAYAAAASAAAAEwAA
AAYAAAATAAAAFAAAAAYAAAAUAAAAEAAAAAcAAAAJAAAAFQAAAAgAAAAVAAAACQAAAAoAAAAW
AAAAFwAAAAoAAAAXAAAACwAAAAsAAAAXAAAAGAAAAAsAAAAYAAAADAAAAAwAAAAYAAAADQAA
AA0AAAAYAAAAGQAAAA8AAAAaAAAAGwAAAA8AAAAbAAAAHAAAAA8AAAAcAAAAHQAAAA8AAAAd
AAAAEQAAABAAAAAUAAAAHgAAABAAAAAeAAAAHwAAABEAAAAdAAAAEgAAABIAAAAdAAAAEwAA
ABMAAAAdAAAAIAAAABMAAAAgAAAAIQAAABMAAAAhAAAAFAAAABQAAAAhAAAAIgAAABQAAAAi
AAAAJQAAABQAAAAlAAAAJAAAABQAAAAkAAAAKgAAABQAAAAqAAAAHgAAABYAAAAjAAAAFwAA
ABcAAAAjAAAAJAAAABcAAAAkAAAAJQAAABcAAAAlAAAAIgAAABcAAAAiAAAAGwAAABcAAAAb
AAAAGAAAABgAAAAbAAAAJgAAABgAAAAmAAAAJwAAABgAAAAnAAAAKAAAABgAAAAoAAAAKQAA
ABgAAAApAAAAGQAAABoAAAAmAAAAGwAAABsAAAAiAAAAHAAAABwAAAAiAAAAIQAAABwAAAAh
AAAAHQAAAB0AAAAhAAAAIAAAAB4AAAAqAAAAIwAAAB4AAAAjAAAAKwAAAB4AAAArAAAAHwAA
ACMAAAAqAAAAJAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9+
AAAABAAAACQgEz86zlW+gXRjv5bnAT9Htku+RL9mv5bnAT+a4jW+jLRnv5bnAT9kjSG+YYpo
v86dHD8H8S2+gXRjv4baRz9Sxhq+KRxXvzAdOz/ayj2+KRxXv8DNQz/ayj2+fIY/v6XYRT/a
yj2+QR4ivyQgEz86zlW+0hnWvoKSBD9lR02+0hnWvpbnAT9Htku+0hnWvpbnAT+53UW91rpn
v1OAIz9uJlS9EGFhv1YbUT+Eg0K9uAhVv+bLWT831i69fIY/vxaLUD9Sxhq+fIY/vz2YUj9S
xhq+QR4iv6XYRT/ayj2+0hnWvpbnAT9UKRU+0hnWvpbnAT8gDb28A/tmv86dHD9Su3E9Em1f
v4baRz96IEw9uRRTvxaLUD/yBXI9fIY/vz2YUj9eA509QR4ivwzZWz+g0Am9QR4ivz2YUj9S
xhq+0hnWviQgEz8OdB4+0hnWvpbnAT+Gw8I95UhUv5bnAT9OiVk9zH9kvyQgEz8hgrk9CTlZ
v5bnAT+mZYw9jtNgvzAdOz/J1Z49i91Mv8DNQz+FyLE9fIY/v6XYRT9CttU9QR4iv6XYRT8J
swg+0hnWvj2YUj+GoNg90hnWvgzZWz8LMpm80hnWvucbVD9dBge+0hnWviQgEz+AFM89SAFR
v412Gz+BLBs+0hnWvpbnAT+oW649y4Ncv/AAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAA
AAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAYAAAAAAAAABgAAAAcAAAAAAAAABwAA
AAgAAAAAAAAACAAAABIAAAAAAAAAEgAAAAkAAAAAAAAACQAAAAoAAAAAAAAACgAAAAEAAAAB
AAAACgAAAAsAAAABAAAACwAAABMAAAABAAAAEwAAABwAAAABAAAAHAAAACkAAAABAAAAKQAA
AB8AAAABAAAAHwAAAB0AAAABAAAAHQAAABQAAAABAAAAFAAAAAwAAAABAAAADAAAAAMAAAAB
AAAAAwAAAAIAAAADAAAADAAAAA0AAAADAAAADQAAAAQAAAAEAAAADQAAAA4AAAAEAAAADgAA
AAUAAAAFAAAADgAAAA8AAAAFAAAADwAAABAAAAAFAAAAEAAAAAcAAAAFAAAABwAAAAYAAAAH
AAAAEAAAABEAAAAHAAAAEQAAAAgAAAAIAAAAEQAAABoAAAAIAAAAGgAAABIAAAAJAAAAEgAA
ABoAAAAJAAAAGgAAACYAAAAJAAAAJgAAACUAAAAJAAAAJQAAACQAAAAJAAAAJAAAACMAAAAJ
AAAAIwAAACgAAAAJAAAAKAAAABsAAAAJAAAAGwAAABMAAAAJAAAAEwAAAAsAAAAJAAAACwAA
AAoAAAAMAAAAFAAAABUAAAAMAAAAFQAAAA0AAAANAAAAFQAAAA4AAAAOAAAAFQAAABYAAAAO
AAAAFgAAABcAAAAOAAAAFwAAAA8AAAAPAAAAFwAAABgAAAAPAAAAGAAAABkAAAAPAAAAGQAA
ABEAAAAPAAAAEQAAABAAAAARAAAAGQAAABoAAAATAAAAGwAAABwAAAAUAAAAHQAAABUAAAAV
AAAAHgAAABYAAAAVAAAAHQAAAB8AAAAVAAAAHwAAAB4AAAAWAAAAHgAAACAAAAAWAAAAIAAA
ACEAAAAWAAAAIQAAABcAAAAXAAAAIQAAABgAAAAYAAAAIQAAACIAAAAYAAAAIgAAACMAAAAY
AAAAIwAAACQAAAAYAAAAJAAAABkAAAAZAAAAJAAAACUAAAAZAAAAJQAAACYAAAAZAAAAJgAA
ABoAAAAbAAAAJwAAABwAAAAbAAAAKAAAACcAAAAcAAAAJwAAACkAAAAeAAAAHwAAACkAAAAe
AAAAKQAAACcAAAAeAAAAJwAAACAAAAAgAAAAJwAAACEAAAAhAAAAJwAAACIAAAAiAAAAKAAA
ACMAAAAiAAAAJwAAACgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
AIA/RQAAAAQAAADTN8s+Bwluv+aWzr4d4sI+esZ7v+aWzr4d4sI+7z1cv+aWzr5RpnE+W/dZ
v3iEkz2YJ8g+DkZzv8yQzr44rWw+SyVYv+aWzr6urCo+u6Rhv3iEkz2bjSM+/mNiv3iEkz0A
AAAAnQpfv3iEkz0gn5o+wDt5v8yQzr44rWw+yOV2v8yQzr66apA+AWhVv+aWzr4EYpo+j5BU
v8yQzr4KgqQ+CVFWv8yQzr45h689kgskvwCfcruz07o9kgskv7AtWDxj59g9kgskvyQsbz2W
jNA9kgskv3iEkz228GA+k2Zvv8yQzr7ub1Y+4ltov8yQzr4AAAAAkgskv6p0LL0AAAAAnQpf
v2y8Jr0EygY9kgskv6p0LL1+AAAAAAAAAAEAAAAFAAAAAAAAAAUAAAALAAAAAAAAAAsAAAAC
AAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAADAAAAAQAA
AAMAAAAGAAAAAQAAAAYAAAAHAAAAAQAAAAcAAAAIAAAAAQAAAAgAAAAJAAAAAQAAAAkAAAAK
AAAAAQAAAAoAAAAFAAAAAgAAAAsAAAAMAAAAAgAAAAwAAAANAAAAAgAAAA0AAAAOAAAAAgAA
AA4AAAAPAAAAAgAAAA8AAAAQAAAAAgAAABAAAAADAAAAAwAAABAAAAARAAAAAwAAABEAAAAI
AAAAAwAAAAgAAAAHAAAAAwAAAAcAAAAGAAAABQAAAAoAAAASAAAABQAAABIAAAATAAAABQAA
ABMAAAAUAAAABQAAABQAAAALAAAACAAAABEAAAAUAAAACAAAABQAAAAVAAAACAAAABUAAAAK
AAAACAAAAAoAAAAJAAAACgAAABUAAAASAAAACwAAABQAAAAMAAAADAAAABQAAAAWAAAADAAA
ABYAAAAOAAAADAAAAA4AAAANAAAADgAAABYAAAAUAAAADgAAABQAAAARAAAADgAAABEAAAAQ
AAAADgAAABAAAAAPAAAAEgAAABUAAAATAAAAEwAAABUAAAAUAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzkAAAAEAAAAOp7SPYyYmL54hJM9Xv7XPYyYmL7u
/oI9ANiwN4yYmL7a5Tu9ANiwN8A57b6VVTS9ANiwNy4HJL8yQCy9FnvQPS4HJL94hJM95vLR
PcMx4754hJM9r8bRPS4HJL84N489n6DaPYyYmL7vW3Q93POPPIyYmL7a5Tu9QMveO2EJJL8y
QCy9ur26PWEJJL92u1g8YdDYPS4HJL8OTW89fozcPYyYmL4TaGc9vJEIPYyYmL7A2Tu9Y6sG
PS4HJL8yQCy9vEgSPGEJJL8yQCy9VH6vPWEJJL+YIXG7AnmyPYyYmL4Ait27ZgAAAAAAAAAB
AAAACAAAAAAAAAAIAAAADQAAAAAAAAANAAAAEgAAAAAAAAASAAAADgAAAAAAAAAOAAAACQAA
AAAAAAAJAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAF
AAAABgAAAAAAAAAGAAAAAQAAAAEAAAAGAAAABwAAAAEAAAAHAAAACAAAAAIAAAAJAAAAEAAA
AAIAAAAQAAAACgAAAAIAAAAKAAAABAAAAAIAAAAEAAAAAwAAAAQAAAAKAAAABQAAAAUAAAAK
AAAACwAAAAUAAAALAAAABwAAAAUAAAAHAAAABgAAAAcAAAALAAAADAAAAAcAAAAMAAAACAAA
AAgAAAAMAAAADQAAAAkAAAAOAAAADwAAAAkAAAAPAAAAEAAAAAoAAAAQAAAAEQAAAAoAAAAR
AAAACwAAAAsAAAARAAAADAAAAAwAAAARAAAAEgAAAAwAAAASAAAADQAAAA4AAAASAAAAEQAA
AA4AAAARAAAADwAAAA8AAAARAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAA
AAAAAAAAAAAAgD9jAAAABAAAALJjJz/2V4K/Un8/v75gHT/j/Zi/aQBEv/sUJD8FiIq/qrNB
v7AKIT/kRZG/sEFJv+I4Ij+YXoO/aGFOv6giIz/KCHi/iWZKv/sUJD/1lXG/qrNBvy7owj60
QVy//pzOvllCyz4AD26//pzOviKJFD9NMpy/uFU3vzkJAT/j/Zi/NcVXv1CwBD/kRZG/YgBd
v3wrBj+YXoO/dAdhv2TJAz/KCHi/1Dpfv3nlET+d7W6/C8dSv644Dj9Hc2i/GiFNv/KGpD7w
VVa//pzOvgpwmj62k1S/5JbOvmDiuD4xJHu/5JbOvjQ1yD4uTnO//pzOvmC0Cz/j/Zi/+qcq
vzpj8D5NMpy/dxdLvwvk7D72V4K/KQRgv77Y9j71lXG/K7dcv7HBbD4tLFi//pzOvqN1kD5S
bVW//pzOvhBsYj45SGC/5JbOvlqjmj7yPnm/5JbOvi7owj7Gxnu//pzOvra53j7j/Zi/xmw+
v7HBbD6l63a/5JbOvuh7Vj5FZGi//pzOvib/YD6tam+/5JbOvroAAAAAAAAAAQAAAAIAAAAA
AAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAYAAAAAAAAABgAA
AAcAAAAAAAAABwAAAAgAAAAAAAAACAAAAAkAAAAAAAAACQAAAAEAAAABAAAACgAAAAMAAAAB
AAAAAwAAAAIAAAABAAAACQAAAAoAAAADAAAACgAAAAsAAAADAAAACwAAAAQAAAAEAAAACwAA
AAwAAAAEAAAADAAAAAUAAAAFAAAADAAAAA0AAAAFAAAADQAAAA4AAAAFAAAADgAAAAYAAAAG
AAAADgAAAA8AAAAGAAAADwAAAAcAAAAHAAAAEAAAABEAAAAHAAAAEQAAABIAAAAHAAAAEgAA
AAgAAAAHAAAADwAAABAAAAAIAAAAEgAAABMAAAAIAAAAEwAAABQAAAAIAAAAFAAAAAkAAAAJ
AAAAFAAAABUAAAAJAAAAFQAAAAoAAAAKAAAAFgAAAAsAAAAKAAAAFQAAABYAAAALAAAAFgAA
AAwAAAAMAAAAFgAAAA0AAAANAAAAFgAAABcAAAANAAAAFwAAAA4AAAAOAAAAFwAAAA8AAAAP
AAAAFwAAABgAAAAPAAAAGAAAABkAAAAPAAAAGQAAABEAAAAPAAAAEQAAABAAAAARAAAAGQAA
ABgAAAARAAAAGAAAABoAAAARAAAAGgAAACAAAAARAAAAIAAAAB4AAAARAAAAHgAAABsAAAAR
AAAAGwAAABIAAAASAAAAGwAAABQAAAASAAAAFAAAABwAAAASAAAAHAAAABMAAAATAAAAHAAA
ABQAAAAUAAAAHQAAABUAAAAUAAAAGwAAAB4AAAAUAAAAHgAAAB0AAAAVAAAAHQAAABYAAAAW
AAAAHQAAAB8AAAAWAAAAHwAAABgAAAAWAAAAGAAAABcAAAAYAAAAHwAAABoAAAAaAAAAHwAA
ACAAAAAdAAAAHgAAACAAAAAdAAAAIAAAAB8AAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAA
AAAAAAAAAAAAAAAAAIA/SAAAAAQAAADL24E/ZYwsP37jsz7YQIA/zMAzP0nRsz4HIIE/Jsov
P37jsz5OXYE/nswfP37jsz5xtIE/nswfP+QmCbydzIE/nswfPxvS4b3L24E/nswfP1JLsb7L
24E/JzgvPxJE/73YQIA/TEs2P7oM770gD1o/zMAzP0nRsz6jT1g/JsovP37jsz5GOlg/nswf
P37jsz7mj4E/nswfPy5pt77YQIA/qKQlP6t+tL7L24E/rREqPwqLeL4gD1o/TEs2P7oM773Y
QIA/lQwxP/lacr462VY/JzgvPxJE/7062VY/ZYwsP37jsz462VY/nswfP1JLsb7kb1c/nswf
Py5pt74gD1o/qKQlP6t+tL4gD1o/lQwxP/lacr462VY/rREqPwqLeL6EAAAAAAAAAAEAAAAC
AAAAAAAAAAIAAAAKAAAAAAAAAAoAAAASAAAAAAAAABIAAAALAAAAAAAAAAsAAAADAAAAAAAA
AAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAAOAAAAAAAAAA4AAAAH
AAAAAAAAAAcAAAABAAAAAQAAAAgAAAAPAAAAAQAAAA8AAAAJAAAAAQAAAAkAAAAKAAAAAQAA
AAoAAAACAAAAAQAAAAcAAAAIAAAAAwAAAAsAAAATAAAAAwAAABMAAAAUAAAAAwAAABQAAAAM
AAAAAwAAAAwAAAAGAAAAAwAAAAYAAAAFAAAAAwAAAAUAAAAEAAAABgAAAAwAAAANAAAABgAA
AA0AAAAOAAAABwAAAA4AAAAIAAAACAAAAA4AAAAQAAAACAAAABAAAAAWAAAACAAAABYAAAAP
AAAACQAAAA8AAAARAAAACQAAABEAAAASAAAACQAAABIAAAAKAAAACwAAABIAAAATAAAADAAA
ABQAAAAVAAAADAAAABUAAAANAAAADQAAABUAAAAWAAAADQAAABYAAAAQAAAADQAAABAAAAAO
AAAADwAAABYAAAAXAAAADwAAABcAAAARAAAAEQAAABcAAAATAAAAEQAAABMAAAASAAAAEwAA
ABcAAAAVAAAAEwAAABUAAAAUAAAAFQAAABcAAAAWAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQ
AAAAAAAAAAAAAAAAAAAAAACAP1cAAAAEAAAAy9uBP8dbKj+KLj4/LXtmPx3sij+vsn8/hP6A
Pw7MHz88Jj4/QluBPw7MHz/L67M+y9uBP9KNLD/L67M+C98BPx3sij+vsn8/1htcP0OJLT/X
qXE/hyRbPw7MHz9V0G8/iJhgP9hHVD8k33Y/mVliP96WZz+2d3k/feVlPx3sij9JlE0/FjhY
Pw7MHz/L67M+hj6AP7DDMz/L67M+YIplPyjpij8lCjE/C98BP0OJLT/XqXE/C98BPx3sij+Y
IB8/ytsBP0wFYD/2Bxc/C98BPw7MHz9V0G8/bLFlPx3sij93ET4/ZNVWP9KNLD/L67M+C98B
Pw7MHz9I7Aw/rQxaP7DDMz/L67M+0jsuPx3sij86TBA/jYtdPx3sij+1rCE/AEVhPx3sij8K
USk/D1UVPx3sij/IfRg/C98BP5aGWz8iyBU/ytsBP1uWUz+ekBQ/C98BP18gLD9UuQ4/ogAA
AAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAF
AAAADgAAAAEAAAAOAAAABgAAAAEAAAAGAAAABwAAAAEAAAAHAAAACAAAAAEAAAAIAAAACQAA
AAEAAAAJAAAAAgAAAAEAAAAEAAAACgAAAAEAAAAKAAAAEgAAAAEAAAASAAAAGAAAAAEAAAAY
AAAAFwAAAAEAAAAXAAAAFgAAAAEAAAAWAAAAGQAAAAEAAAAZAAAADwAAAAEAAAAPAAAABQAA
AAIAAAAJAAAACAAAAAIAAAAIAAAABwAAAAIAAAAHAAAAEQAAAAIAAAARAAAAFAAAAAIAAAAU
AAAACwAAAAIAAAALAAAAAwAAAAMAAAALAAAAEwAAAAMAAAATAAAAFQAAAAMAAAAVAAAADAAA
AAMAAAAMAAAABAAAAAQAAAAMAAAADQAAAAQAAAANAAAACgAAAAUAAAAPAAAAEAAAAAUAAAAQ
AAAADgAAAAYAAAAOAAAAEQAAAAYAAAARAAAABwAAAAoAAAANAAAAEgAAAAsAAAAUAAAAEwAA
AAwAAAAVAAAAFgAAAAwAAAAWAAAAFwAAAAwAAAAXAAAADQAAAA0AAAAXAAAAGAAAAA0AAAAY
AAAAEgAAAA4AAAAQAAAAEQAAAA8AAAAZAAAAFQAAAA8AAAAVAAAAEwAAAA8AAAATAAAAGgAA
AA8AAAAaAAAAGwAAAA8AAAAbAAAAEAAAABAAAAAbAAAAEQAAABEAAAAbAAAAFAAAABMAAAAU
AAAAHAAAABMAAAAcAAAAGwAAABMAAAAbAAAAGgAAABQAAAAbAAAAHAAAABUAAAAZAAAAFgAA
ABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9aAAAABAAAABKLZT+W
7Yo/IBMxP5TeAT8R74o/XyEfPxhWFT8R74o/C30YP28+Lj8R74o/xEYQP6CLXT8R74o/J6wh
P7JAaD8+78U/WYwxP4H6bz956cQ/VLBAP4H6bz9ZB8M/T61cP6N6Zj8R74o/grF/P5TeAT8R
74o/grF/P5TeAT/xZJg/NB4jP5TeAT/+j7U/5tArP5TeAT8oNMA/YP4uP5TeAT+yvcA/2Scv
P5myNT9B0sE/bBEfPwZJNj+48MU/Vy0gPyDtZz+48MU/o28xP+k9aD+48MU/WYwxP7JAaD+4
8MU/io8xP0okcD+48MU/g/ZAP7YIcT+48MU/2siHP4H6bz/fg8E/pC5zP4H6bz/ut78/HfOG
P1aGaD9dXJY/u2KBP2FYbT/yU7E/pgSFP5TeAT/yU7E/pgSFP5TeAT+48MU/IBMxP5TeAT+4
8MU/2siHP5TeAT/ow74/NtOGPwL9bj8ddro/4D6GP6gAAAAAAAAAAQAAAAIAAAAAAAAAAgAA
AAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAYAAAAAAAAABgAAAAcAAAAA
AAAABwAAAAgAAAAAAAAACAAAAAkAAAAAAAAACQAAAAEAAAABAAAACgAAAAIAAAABAAAACQAA
ABkAAAABAAAAGQAAABwAAAABAAAAHAAAABsAAAABAAAAGwAAABoAAAABAAAAGgAAAA0AAAAB
AAAADQAAAAwAAAABAAAADAAAAAsAAAABAAAACwAAAAoAAAACAAAACgAAAAsAAAACAAAACwAA
AAwAAAACAAAADAAAAA0AAAACAAAADQAAAAMAAAADAAAADgAAAA8AAAADAAAADwAAAAUAAAAD
AAAABQAAAAQAAAADAAAADQAAAA4AAAAFAAAAEAAAABEAAAAFAAAAEQAAABIAAAAFAAAAEgAA
ABMAAAAFAAAAEwAAAAYAAAAFAAAADwAAABAAAAAGAAAAEwAAABQAAAAGAAAAFAAAAAcAAAAH
AAAAFQAAAAgAAAAHAAAAFAAAABUAAAAIAAAAFQAAABYAAAAIAAAAFgAAABcAAAAIAAAAFwAA
ABgAAAAIAAAAGAAAABkAAAAIAAAAGQAAAAkAAAANAAAAGgAAAA8AAAANAAAADwAAAA4AAAAP
AAAAGgAAABsAAAAPAAAAGwAAABQAAAAPAAAAFAAAABMAAAAPAAAAEwAAABIAAAAPAAAAEgAA
ABEAAAAPAAAAEQAAABAAAAAUAAAAGwAAABwAAAAUAAAAHAAAAB0AAAAUAAAAHQAAABYAAAAU
AAAAFgAAABUAAAAWAAAAHQAAABgAAAAWAAAAGAAAABcAAAAYAAAAHQAAABwAAAAYAAAAHAAA
ABkAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/MwAAAAQAAAAA
AAAADswfP+euBj8AAAAAKemKP9x5ET87d8Q+HuyKP9x5ET+pe7w+DswfP/i0Bj8AAAAADswf
P7bQbz8AAAAAKemKP8awfz/WNd8+HuyKP4ioKz/L2wE/KemKP8YiHz/L2wE/l4ZbP9TJFT+K
2AE/XJZTP3GRFD/L2wE/ah0sPyq0Dj/L2wE/DswfPyrnDD8AAAAAToYtP+CscT/L2wE/Dswf
P7bQbz8AAAAA2UdUP1jjdj/L2wE/KemKP9e2fz/L2wE/NBNDP+6TdD9aAAAAAAAAAAEAAAAC
AAAAAAAAAAIAAAADAAAAAAAAAAMAAAALAAAAAAAAAAsAAAANAAAAAAAAAA0AAAAEAAAAAAAA
AAQAAAAMAAAAAAAAAAwAAAAOAAAAAAAAAA4AAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAAC
AAAAAgAAAAUAAAAGAAAAAgAAAAYAAAAHAAAAAgAAAAcAAAAIAAAAAgAAAAgAAAAJAAAAAgAA
AAkAAAAKAAAAAgAAAAoAAAALAAAAAgAAAAsAAAADAAAABAAAAA0AAAAMAAAABQAAAA4AAAAP
AAAABQAAAA8AAAAGAAAABgAAAA8AAAAHAAAABwAAAA8AAAAQAAAABwAAABAAAAANAAAABwAA
AA0AAAALAAAABwAAAAsAAAAKAAAABwAAAAoAAAAIAAAACAAAAAoAAAAJAAAADAAAAA0AAAAQ
AAAADAAAABAAAAAPAAAADAAAAA8AAAAOAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA
AAAAAAAAAAAAAACAPzYAAAAEAAAA5hnIPjY2nj+0cRA/uDHMPqB4sz/U9B4/y9sBP7jwxT/G
EDE/y9sBP7K9wD9IKS8/y9sBPyg0wD99+S4/y9sBP/6PtT8BzSs/y9sBPxHvij9AHh8/O3fE
PhHvij8pehE/N0ddPpbtij8pehE/AAAAABHvij8pehE/AAAAADY2nj/kdBA/AAAAAKB4sz/U
9B4/y9sBP7jwxT8KzIc/AAAAAFuruj9Qnio/AAAAALjwxT/xLT8/y9sBPxHvij94tn8/AAAA
ABHvij94tn8/AAAAALjwxT8KzIc/YAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAAD
AAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAABwAAAAAAAAAHAAAACAAA
AAAAAAAIAAAACQAAAAAAAAAJAAAACgAAAAAAAAAKAAAACwAAAAAAAAALAAAAAQAAAAEAAAAL
AAAAAgAAAAIAAAAMAAAADwAAAAIAAAAPAAAABgAAAAIAAAAGAAAABQAAAAIAAAAFAAAABAAA
AAIAAAAEAAAAAwAAAAIAAAALAAAADQAAAAIAAAANAAAADgAAAAIAAAAOAAAAEQAAAAIAAAAR
AAAADAAAAAYAAAAPAAAACAAAAAYAAAAIAAAABwAAAAgAAAAPAAAAEAAAAAgAAAAQAAAACQAA
AAkAAAAQAAAAEQAAAAkAAAARAAAADgAAAAkAAAAOAAAADQAAAAkAAAANAAAACwAAAAkAAAAL
AAAACgAAAAwAAAARAAAAEAAAAAwAAAAQAAAADwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAgD9yAAAABAAAAPN3fD+MIxFAfTaUPx5QgD93fxZAdbODPx5QAD8g
2hVAXhCNPx5QAD+MIxFAfTaUPx5QAD9BhQRAhtGQP8IGcT8y8sU/+cmHP8ChfD+0uAVAeCOR
Px5QAD/97xVAIcCMPznRfj+QPQ5ADtSFPx5QgD8s3xNADL1mP2Brdz8kFxdASuxfP4iLdz99
bxhAInN1P3+HQj/HgBlA9AV2Px5QAD8y8sU/+cmHPzzDcD8y8sU/zOp3Px5QAD965RdAdbOD
P2HJdT/xDxJAbmxMP3gicD8y8sU/DPRAPznRfj+9eBBA43BZPxwIQz9CNBlA6sJaPxGwQT/A
uhJAc6g6P+ejCD99bxhAInN1Px5QAD+jBxhAcBuCPx5QAD8y8sU/UKQxPwAGcz9WtgpAHfFG
P3BCaD8y8sU/aYwxP6dFaD+p98U/1I8xP5yQCD8kFxdASuxfPxqpBz/xDxJAbmxMP6MHQD9I
SwtArt41Px5QAD8VZwpAtdxHPx5QAD8ZohVA7IJlP2ljAD8y8sU/1I8xPx5QAD/8O8Y/YrUx
P7xLNj8y8sU/cisgPx5QAD8O5hBAsEpRPx5QAD8zvvw/XA9BP3C9AD8y8sU/GHExP9gAAAAA
AAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAA
AAYAAAAAAAAABgAAAAEAAAABAAAABwAAAAIAAAABAAAABgAAAAgAAAABAAAACAAAAAkAAAAB
AAAACQAAAAoAAAABAAAACgAAAAsAAAABAAAACwAAAAwAAAABAAAADAAAAAcAAAACAAAABwAA
AA8AAAACAAAADwAAABYAAAACAAAAFgAAAB8AAAACAAAAHwAAACMAAAACAAAAIwAAAB4AAAAC
AAAAHgAAACQAAAACAAAAJAAAACEAAAACAAAAIQAAABcAAAACAAAAFwAAAA0AAAACAAAADQAA
AAQAAAACAAAABAAAAAMAAAAEAAAADQAAAAUAAAAFAAAADQAAABcAAAAFAAAAFwAAACAAAAAF
AAAAIAAAACUAAAAFAAAAJQAAACIAAAAFAAAAIgAAABkAAAAFAAAAGQAAABEAAAAFAAAAEQAA
AA4AAAAFAAAADgAAAAkAAAAFAAAACQAAAAYAAAAGAAAACQAAAAgAAAAHAAAADAAAAA8AAAAJ
AAAAEAAAAAoAAAAJAAAADgAAABEAAAAJAAAAEQAAABIAAAAJAAAAEgAAABAAAAAKAAAAEwAA
AAsAAAAKAAAAEAAAABQAAAAKAAAAFAAAABMAAAALAAAAEwAAAAwAAAAMAAAAEwAAABUAAAAM
AAAAFQAAABYAAAAMAAAAFgAAAA8AAAAQAAAAEgAAABgAAAAQAAAAGAAAABQAAAARAAAAGQAA
ABoAAAARAAAAGgAAABIAAAASAAAAGgAAABgAAAATAAAAFAAAABsAAAATAAAAGwAAABUAAAAU
AAAAHAAAABsAAAAUAAAAGAAAAB0AAAAUAAAAHQAAAB4AAAAUAAAAHgAAABwAAAAVAAAAGwAA
ABYAAAAWAAAAGwAAAB8AAAAXAAAAIQAAACAAAAAYAAAAGgAAABkAAAAYAAAAGQAAACIAAAAY
AAAAIgAAAB0AAAAbAAAAHAAAACMAAAAbAAAAIwAAAB8AAAAcAAAAHgAAACMAAAAdAAAAIgAA
AB4AAAAeAAAAIgAAACQAAAAgAAAAIQAAACQAAAAgAAAAJAAAACUAAAAiAAAAJQAAACQAAAAQ
AAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/XQAAAAQAAAAeUAA/HiMR
QDI4lD8AAAAAHiMRQDI4lD8eUAA/NPLFP2zKhz8eUAA/b9gVQF0QjT9sbPA+QJgZQBTthz8A
AAAANPLFP2zKhz8AAAAAQJgZQBTthz8eUAA/NPLFP7GkMT8eUAA/nu4VQCbBjD9sbPA+0dId
QP7weD+6FIQ+OvwdQEv0eD8AAAAANPLFP1EuPz8AAAAAOvwdQEv0eD8AAAAA7iTNP1WsND8A
AAAAbc7vP365JD8++eU+bc7vP365JD86gew+lUELQJpGKT8eUAA/Gz/GPzK1MT8eUAA/c+UX
QHuygz8eUAA//AUYQIIcgj9sbPA+sPAbQJmrWD+6FIQ+gkMcQF35Vz8AAAAAgkMcQF35Vz8A
AAAAlUELQJpGKT/KJoM+b+0TQKHJNj9Fqu4+EcETQEw7OD8eUAA/LmgKQOveRz8eUAA/J8L8
PzQQQT8eUAA/tqEVQJiJZT8eUAA/e+YQQPVOUT8AAAAAb+0TQKHJNj+uAAAAAAAAAAEAAAAF
AAAAAAAAAAUAAAACAAAAAAAAAAIAAAAHAAAAAAAAAAcAAAARAAAAAAAAABEAAAAbAAAAAAAA
ABsAAAAaAAAAAAAAABoAAAAdAAAAAAAAAB0AAAAcAAAAAAAAABwAAAATAAAAAAAAABMAAAAS
AAAAAAAAABIAAAAIAAAAAAAAAAgAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAGAAAAAAAA
AAYAAAABAAAAAQAAAAYAAAAMAAAAAQAAAAwAAAAWAAAAAQAAABYAAAAeAAAAAQAAAB4AAAAX
AAAAAQAAABcAAAAOAAAAAQAAAA4AAAANAAAAAQAAAA0AAAALAAAAAQAAAAsAAAAFAAAAAgAA
AAUAAAALAAAAAgAAAAsAAAAHAAAAAwAAAAgAAAAJAAAAAwAAAAkAAAAEAAAABAAAAAkAAAAK
AAAABAAAAAoAAAAMAAAABAAAAAwAAAAGAAAABwAAAAsAAAANAAAABwAAAA0AAAAOAAAABwAA
AA4AAAAPAAAABwAAAA8AAAAQAAAABwAAABAAAAARAAAACAAAABIAAAAJAAAACQAAABIAAAAT
AAAACQAAABMAAAAUAAAACQAAABQAAAAVAAAACQAAABUAAAAKAAAACgAAABUAAAAWAAAACgAA
ABYAAAAMAAAADgAAABcAAAAQAAAADgAAABAAAAAPAAAAEAAAABcAAAAeAAAAEAAAAB4AAAAY
AAAAEAAAABgAAAAZAAAAEAAAABkAAAAaAAAAEAAAABoAAAAbAAAAEAAAABsAAAARAAAAEwAA
ABwAAAAUAAAAFAAAABwAAAAdAAAAFAAAAB0AAAAZAAAAFAAAABkAAAAYAAAAFAAAABgAAAAV
AAAAFQAAABgAAAAeAAAAFQAAAB4AAAAWAAAAGQAAAB0AAAAaAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0gAAAAEAAAAOtlWv2WMLD9+47M+IA9av8zAMz9J
0bM+o09YvybKLz9+47M+RjpYv57MHz9+47M+OtlWv57MHz9SS7G+OtlWvyc4Lz8SRP+9IA9a
v0xLNj+6DO+92ECAv8zAMz9J0bM+ByCBvybKLz9+47M+Tl2Bv57MHz9+47M+5G9Xv57MHz8u
abe+IA9av6ikJT+rfrS+OtlWv60RKj8Ki3i+2ECAv0xLNj+6DO+9IA9av5UMMT/5WnK+y9uB
vyc4Lz8SRP+9y9uBv2WMLD9+47M+cbSBv57MHz/kJgm85o+Bv57MHz8uabe+2ECAv6ikJT+r
frS+2ECAv5UMMT/5WnK+y9uBv60RKj8Ki3i+ncyBv57MHz8b0uG9y9uBv57MHz9SS7G+hAAA
AAAAAAABAAAAAgAAAAAAAAACAAAACAAAAAAAAAAIAAAAEAAAAAAAAAAQAAAACQAAAAAAAAAJ
AAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAADAAAAAAAAAAMAAAABQAAAAAAAAAFAAAAAQAA
AAEAAAAGAAAADQAAAAEAAAANAAAABwAAAAEAAAAHAAAACAAAAAEAAAAIAAAAAgAAAAEAAAAF
AAAABgAAAAMAAAAJAAAAEQAAAAMAAAARAAAAFgAAAAMAAAAWAAAAFwAAAAMAAAAXAAAAEgAA
AAMAAAASAAAACgAAAAMAAAAKAAAABAAAAAQAAAAKAAAACwAAAAQAAAALAAAADAAAAAUAAAAM
AAAABgAAAAYAAAAMAAAADgAAAAYAAAAOAAAAFAAAAAYAAAAUAAAADQAAAAcAAAANAAAADwAA
AAcAAAAPAAAAEAAAAAcAAAAQAAAACAAAAAkAAAAQAAAAEQAAAAoAAAASAAAAEwAAAAoAAAAT
AAAACwAAAAsAAAATAAAAFAAAAAsAAAAUAAAADgAAAAsAAAAOAAAADAAAAA0AAAAUAAAAFQAA
AA0AAAAVAAAADwAAAA8AAAAVAAAAFwAAAA8AAAAXAAAAEAAAABAAAAAWAAAAEQAAABAAAAAX
AAAAFgAAABIAAAAXAAAAEwAAABMAAAAXAAAAFQAAABMAAAAVAAAAFAAAABAAAAAAAAAAAAAA
AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD82AAAABAAAACh1vL4OzB8/97QGPzx3xL4p
6Yo/nnwRPwBAULgOzB8/97QGP4vYAb8OzB8/CuoMPwBAULgp6Yo/nnwRP4vYAb9qHSw//rYO
P4vYAb9cllM/F5EUP4vYAb+Xhls/cskVP4vYAb8p6Yo/KCIfP9xC374e7Io/oqorPwAAAACH
OCg/RFwJPwBAULgOzB8/GtFvP4vYAb8OzB8/GtFvP8zbAb/flmc/qXh5PwAAAAAp6Yo/1rZ/
PwAAAABDqHY/6JYZP4vYAb8p6Yo/1rZ/PwAAAADflmc/qXh5P2AAAAAAAAAAAQAAAAQAAAAA
AAAABAAAAAIAAAAAAAAAAgAAAAsAAAAAAAAACwAAAAwAAAAAAAAADAAAAAMAAAAAAAAAAwAA
AAEAAAABAAAAAwAAAAUAAAABAAAABQAAAAYAAAABAAAABgAAAAcAAAABAAAABwAAAAgAAAAB
AAAACAAAAAkAAAABAAAACQAAAAQAAAACAAAABAAAAAoAAAACAAAACgAAAAsAAAADAAAADAAA
AA0AAAADAAAADQAAAAUAAAAEAAAACQAAAA4AAAAEAAAADgAAAA8AAAAEAAAADwAAAAoAAAAF
AAAADQAAAAYAAAAGAAAADQAAAAcAAAAHAAAADQAAAAgAAAAIAAAAEAAAAAkAAAAIAAAADQAA
ABAAAAAJAAAAEAAAAA4AAAAKAAAADwAAAA4AAAAKAAAADgAAABEAAAAKAAAAEQAAAAsAAAAL
AAAAEQAAAA4AAAALAAAADgAAABAAAAALAAAAEAAAAAwAAAAMAAAAEAAAAA0AAAAQAAAAAAAA
AAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/SAAAAAQAAABqIMi+szaeP7RxED88
d8S+HeyKPyl6ET+L2AG/HeyKP0AeHz+L2AG/EJG1PwHNKz+L2AG/fjXAP335Lj+L2AG/kb3A
P0gpLz+L2AG/M/LFP8YQMT+5Mcy+KnizP9T0Hj8AAAAAKnizP9T0Hj8AQFC4szaeP+R0ED8A
QFC4HeyKPyl6ET+L2AG/HeyKP3i2fz/M2wG/M/LFPwrMhz/utgC/M/LFPyxtMT8AQFC4Pu/F
P/EtPz8AAAAAEqu6P1CeKj8AAAAAHeyKP3i2fz+GwO2+Pu/FPwrMhz+L2AG/rLW4P2kEhj8A
QFC4Pu/FPwrMhz+PWAC/M/LFPwmNMT8AAAAA6wXCP77mPz8AAAAAwozAP3SXNj8AAAAAp1yW
PyNjgT+EAAAAAAAAAAEAAAACAAAAAAAAAAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAF
AAAAAAAAAAUAAAAGAAAAAAAAAAYAAAAHAAAAAAAAAAcAAAAIAAAAAAAAAAgAAAAJAAAAAAAA
AAkAAAAKAAAAAAAAAAoAAAABAAAAAQAAAAoAAAAQAAAAAQAAABAAAAALAAAAAQAAAAsAAAAC
AAAAAgAAAAsAAAAMAAAAAgAAAAwAAAADAAAAAwAAAAwAAAAEAAAABAAAAAwAAAAFAAAABQAA
AAwAAAAGAAAABgAAAA0AAAAOAAAABgAAAA4AAAAPAAAABgAAAA8AAAAIAAAABgAAAAgAAAAH
AAAABgAAAAwAAAAUAAAABgAAABQAAAANAAAACAAAAA8AAAAWAAAACAAAABYAAAAVAAAACAAA
ABUAAAAXAAAACAAAABcAAAAQAAAACAAAABAAAAAKAAAACAAAAAoAAAAJAAAACwAAABEAAAAS
AAAACwAAABIAAAAMAAAACwAAABAAAAATAAAACwAAABMAAAARAAAADAAAABIAAAARAAAADAAA
ABEAAAATAAAADAAAABMAAAAUAAAADQAAABQAAAAOAAAADgAAABMAAAAVAAAADgAAABUAAAAW
AAAADgAAABYAAAAPAAAADgAAABQAAAATAAAAEAAAABcAAAATAAAAEwAAABcAAAAVAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP1QAAAAEAAAADN8Bvx3sij/W
tn8/qHhmvx3sij/Wtn8/DN8Bv0OJLT+krXE/DN8Bvx3sij8sHh8/aplgv9hHVD8S43Y/SiJb
vw7MHz8W1G8/1Rxcv0OJLT+krXE//OJlvx3sij8Hk00/y9uBv9KNLD9947M+y9uBv8dbKj8N
MT4/6fyAvw7MHz+XJD4/DN8Bvw7MHz8W1G8/DN8Bv5aGWz+iyRU/Q9NWv9KNLD9947M+dwpa
v7DDMz9947M+klQVvx3sij9Zfxg/LbJlvx3sij/SDz4/Iotlvyjpij8sCDE/kD6Av7DDMz99
47M+RVuBvw7MHz9947M+DN8Bvw7MHz+P7Qw/DN8Bv1uWUz/ujRQ/mctYv1nsIT9947M+DN8B
v18gLD9/tg4/7DVYvw7MHz/L67M+9z0uvx3sij+WTRA/nEJhvx3sij8HUyk/QYldvx3sij9Z
qiE/nAAAAAAAAAABAAAABgAAAAAAAAAGAAAAAgAAAAAAAAACAAAACwAAAAAAAAALAAAAFAAA
AAAAAAAUAAAAFwAAAAAAAAAXAAAAFQAAAAAAAAAVAAAADAAAAAAAAAAMAAAAAwAAAAAAAAAD
AAAADwAAAAAAAAAPAAAAGQAAAAAAAAAZAAAAGwAAAAAAAAAbAAAAGgAAAAAAAAAaAAAAEAAA
AAAAAAAQAAAABwAAAAAAAAAHAAAAAQAAAAEAAAAEAAAABQAAAAEAAAAFAAAABgAAAAEAAAAH
AAAACAAAAAEAAAAIAAAACQAAAAEAAAAJAAAACgAAAAEAAAAKAAAABAAAAAIAAAAGAAAABQAA
AAIAAAAFAAAACwAAAAMAAAAMAAAADQAAAAMAAAANAAAADgAAAAMAAAAOAAAADwAAAAQAAAAK
AAAABQAAAAUAAAAKAAAAEwAAAAUAAAATAAAAGAAAAAUAAAAYAAAAFAAAAAUAAAAUAAAACwAA
AAcAAAAQAAAAEQAAAAcAAAARAAAACAAAAAgAAAARAAAAEgAAAAgAAAASAAAADgAAAAgAAAAO
AAAADQAAAAgAAAANAAAAFgAAAAgAAAAWAAAAEwAAAAgAAAATAAAACQAAAAkAAAATAAAACgAA
AAwAAAAVAAAADQAAAA0AAAAVAAAAFwAAAA0AAAAXAAAAFAAAAA0AAAAUAAAAGAAAAA0AAAAY
AAAAFgAAAA4AAAASAAAAGQAAAA4AAAAZAAAADwAAABAAAAAaAAAAEQAAABEAAAAaAAAAGwAA
ABEAAAAbAAAAEgAAABIAAAAbAAAAGQAAABMAAAAWAAAAGAAAABAAAAAAAAAAAAAAAAAAAAAA
AAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9dAAAABAAAABKLZb+W7Yo/IBMxP7JAaL8+78U/WYwx
P6CLXb8R74o/J6whP28+Lr8R74o/xEYQPxhWFb8R74o/C30YP5TeAb8R74o/XyEfP5TeAb8R
74o/grF/P7ZFZr+W7Yo/c2JuP4H6b79ZB8M/T61cP4H6b7956cQ/VLBAP7JAaL+48MU/io8x
P+k9aL+48MU/WYwxPyDtZ7+48MU/o28xPwZJNr+48MU/Vy0gP0okcL+48MU/g/ZAP5myNb9B
0sE/bBEfP5TeAb+yvcA/2ScvP5TeAb8oNMA/YP4uP5TeAb/+j7U/5tArP5TeAb/xZJg/NB4j
P5TeAb/yU7E/pgSFP6N6Zr8R74o/grF/P4H6b7/ut78/HfOGP4H6b7/fg8E/pC5zP7YIcb+4
8MU/2siHP5TeAb+48MU/IBMxP5TeAb/ow74/NtOGP2FYbb/yU7E/pgSFP1aGaL9dXJY/u2KB
PwL9br8ddro/4D6GP5TeAb+48MU/2siHP64AAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAA
AAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAAAAYAAAAAAAAABgAAAAcAAAAAAAAABwAA
AAgAAAAAAAAACAAAAAkAAAAAAAAACQAAAAEAAAABAAAACgAAAAsAAAABAAAACwAAAAwAAAAB
AAAADAAAAA0AAAABAAAADQAAAAMAAAABAAAAAwAAAAIAAAABAAAACQAAAA4AAAABAAAADgAA
AAoAAAADAAAADQAAAA8AAAADAAAADwAAABAAAAADAAAAEAAAAAQAAAAEAAAAEAAAABEAAAAE
AAAAEQAAABIAAAAEAAAAEgAAABMAAAAEAAAAEwAAAAUAAAAFAAAAEwAAABIAAAAFAAAAEgAA
ABEAAAAFAAAAEQAAABAAAAAFAAAAEAAAABkAAAAFAAAAGQAAAB4AAAAFAAAAHgAAABoAAAAF
AAAAGgAAABQAAAAFAAAAFAAAAAYAAAAGAAAAFAAAABsAAAAGAAAAGwAAABUAAAAGAAAAFQAA
AAcAAAAHAAAAFQAAABYAAAAHAAAAFgAAABcAAAAHAAAAFwAAAAgAAAAIAAAAFwAAABgAAAAI
AAAAGAAAAAkAAAAJAAAAGAAAAA4AAAAKAAAADgAAABgAAAAKAAAAGAAAAB4AAAAKAAAAHgAA
ABkAAAAKAAAAGQAAAA0AAAAKAAAADQAAAAwAAAAKAAAADAAAAAsAAAANAAAAGQAAABAAAAAN
AAAAEAAAAA8AAAAUAAAAGgAAABsAAAAVAAAAGwAAABwAAAAVAAAAHAAAABYAAAAWAAAAHQAA
ABgAAAAWAAAAGAAAABcAAAAWAAAAHAAAABsAAAAWAAAAGwAAAB0AAAAYAAAAHQAAABoAAAAY
AAAAGgAAAB4AAAAaAAAAHQAAABsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAA
AAAAAAAAAIA/YAAAAAQAAAAAwE24HiMRQDI4lD8eUAC/HiMRQDI4lD8AwE24NPLFP2zKhz8A
AAAAVoDjPwHDiz8AAAAAOvwdQEv0eD8AwE24QJgZQBTthz8eUAC/NPLFP2zKhz9sbPC+QJgZ
QBTthz8eUAC/b9gVQF0QjT8AwE24NPLFP1EuPz8AAAAA7iTNP1WsND8AwE24gkMcQF35Vz+6
FIS+OvwdQEv0eD8AAAAAb+0TQKHJNj8eUAC/NPLFP7GkMT9sbPC+0dIdQP7weD8eUAC/nu4V
QCbBjD8AwE24bc7vP365JD8AAAAAlUELQJpGKT+6FIS+gkMcQF35Vz/KJoO+b+0TQKHJNj8e
UAC/Gz/GPzK1MT86gey+lUELQJpGKT8++eW+bc7vP365JD9sbPC+sPAbQJmrWD8eUAC//AUY
QIIcgj8eUAC/c+UXQHuygz9Fqu6+EcETQEw7OD8eUAC/J8L8PzQQQT8eUAC/LmgKQOveRz8e
UAC/e+YQQPVOUT8eUAC/tqEVQJiJZT+0AAAAAAAAAAEAAAAGAAAAAAAAAAYAAAACAAAAAAAA
AAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAHAAAAAAAAAAcAAAAB
AAAAAQAAAAcAAAAIAAAAAQAAAAgAAAAQAAAAAQAAABAAAAAaAAAAAQAAABoAAAAZAAAAAQAA
ABkAAAAfAAAAAQAAAB8AAAAeAAAAAQAAAB4AAAAdAAAAAQAAAB0AAAAcAAAAAQAAABwAAAAV
AAAAAQAAABUAAAAOAAAAAQAAAA4AAAAGAAAAAgAAAAYAAAAOAAAAAgAAAA4AAAAJAAAAAgAA
AAkAAAAKAAAAAgAAAAoAAAADAAAAAwAAAAoAAAASAAAAAwAAABIAAAANAAAAAwAAAA0AAAAE
AAAABAAAAAsAAAATAAAABAAAABMAAAAMAAAABAAAAAwAAAAHAAAABAAAAAcAAAAFAAAABAAA
AA0AAAALAAAABwAAAAwAAAAPAAAABwAAAA8AAAAIAAAACAAAAA8AAAAQAAAACQAAAA4AAAAK
AAAACgAAAA4AAAARAAAACgAAABEAAAASAAAACwAAAA0AAAAUAAAACwAAABQAAAATAAAADAAA
ABMAAAAPAAAADQAAABIAAAAWAAAADQAAABYAAAAUAAAADgAAABUAAAAWAAAADgAAABYAAAAX
AAAADgAAABcAAAARAAAADwAAABMAAAAYAAAADwAAABgAAAAZAAAADwAAABkAAAAaAAAADwAA
ABoAAAAQAAAAEQAAABcAAAAWAAAAEQAAABYAAAASAAAAEwAAABQAAAAYAAAAFAAAABYAAAAb
AAAAFAAAABsAAAAYAAAAFQAAABwAAAAWAAAAFgAAABwAAAAdAAAAFgAAAB0AAAAbAAAAGAAA
ABsAAAAeAAAAGAAAAB4AAAAfAAAAGAAAAB8AAAAZAAAAGwAAAB0AAAAeAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP3IAAAAEAAAAHlAAv4wjEUB9NpQ/HlAA
vyDaFUBeEI0/83d8v4wjEUB9NpQ/HlAAv0GFBECG0ZA/HlAAv/3vFUAhwIw/HlCAv3d/FkB1
s4M/wKF8v7S4BUB4I5E/wgZxvzLyxT/5yYc/HlAAvzLyxT/5yYc/HlAAv3rlF0B1s4M/f4dC
v8eAGUD0BXY/YGt3vyQXF0BK7F8/HlCAvyzfE0AMvWY/OdF+v5A9DkAO1IU/iIt3v31vGEAi
c3U/PMNwvzLyxT/M6nc/vEs2vzLyxT9yKyA/HlAAv6n3xT9QpDE/HlAAv6MHGEBwG4I/HAhD
v0I0GUDqwlo/56MIv31vGEAic3U/EbBBv8C6EkBzqDo/Ycl1v/EPEkBubEw/OdF+v714EEDj
cFk/eCJwvzLyxT8M9EA/owdAv0hLC0Cu3jU/HlAAvxVnCkC13Ec/HlAAvzO+/D9cD0E/cL0A
v6n3xT8YcTE/aWMAv6n3xT/UjzE/cEJovzLyxT9pjDE/AAZzv1a2CkAd8UY/HlAAv/w7xj9i
tTE/nJAIvyQXF0BK7F8/HlAAvxmiFUDsgmU/GqkHv/EPEkBubEw/p0VovzLyxT/UjzE/HlAA
vw7mEECwSlE/2AAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAACAAAAAAAAAAI
AAAAEQAAAAAAAAARAAAAIAAAAAAAAAAgAAAAGwAAAAAAAAAbAAAAGgAAAAAAAAAaAAAAJQAA
AAAAAAAlAAAAIgAAAAAAAAAiAAAAEgAAAAAAAAASAAAACQAAAAAAAAAJAAAABAAAAAAAAAAE
AAAAAQAAAAEAAAAEAAAABQAAAAEAAAAFAAAAAgAAAAIAAAAFAAAABgAAAAIAAAAGAAAABwAA
AAIAAAAHAAAAAwAAAAMAAAAHAAAACAAAAAQAAAAJAAAACgAAAAQAAAAKAAAABQAAAAUAAAAL
AAAADAAAAAUAAAAMAAAADQAAAAUAAAANAAAABgAAAAUAAAAKAAAADgAAAAUAAAAOAAAACwAA
AAYAAAANAAAADAAAAAYAAAAMAAAABwAAAAcAAAAPAAAAGAAAAAcAAAAYAAAAJAAAAAcAAAAk
AAAAHgAAAAcAAAAeAAAAEAAAAAcAAAAQAAAACAAAAAcAAAAMAAAADwAAAAgAAAAQAAAAEQAA
AAkAAAASAAAACgAAAAoAAAATAAAADgAAAAoAAAASAAAAFAAAAAoAAAAUAAAAEwAAAAsAAAAO
AAAAEwAAAAsAAAATAAAAFQAAAAsAAAAVAAAAFgAAAAsAAAAWAAAADAAAAAwAAAAWAAAAFwAA
AAwAAAAXAAAAGAAAAAwAAAAYAAAADwAAABAAAAAZAAAAGgAAABAAAAAaAAAAGwAAABAAAAAb
AAAAHAAAABAAAAAcAAAAHQAAABAAAAAdAAAAEQAAABAAAAAeAAAAHwAAABAAAAAfAAAAGQAA
ABEAAAAdAAAAIAAAABIAAAAhAAAAFAAAABIAAAAiAAAAIQAAABMAAAAUAAAAIQAAABMAAAAh
AAAAFQAAABUAAAAhAAAAIwAAABUAAAAjAAAAGgAAABUAAAAaAAAAGQAAABUAAAAZAAAAHwAA
ABUAAAAfAAAAFgAAABYAAAAfAAAAFwAAABcAAAAfAAAAJAAAABcAAAAkAAAAGAAAABoAAAAj
AAAAJQAAABsAAAAgAAAAHQAAABsAAAAdAAAAHAAAAB4AAAAkAAAAHwAAACEAAAAiAAAAJQAA
ACEAAAAlAAAAIwAAAA==</SharedString>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>